//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.tmap_map_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.common.StandardMethodCodec;
import io.flutter.plugin.platform.PlatformViewRegistry;

import me.yohom.tmap_map_fluttify.TmapMapFluttifyPlugin.Handler;
import me.yohom.foundation_fluttify.core.FluttifyMessageCodec;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler16 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.BubbleOptions::getContentView_batch", (__argsBatch__, __methodResult__) -> {
                List<android.view.View> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.BubbleOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.BubbleOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    android.view.View __result__ = null;
                    try {
                        __result__ = __this__.getContentView();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.BubbleOptions::setOnTapHidden_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BubbleOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean hidden = (boolean) ((Map<String, Object>) __args__).get("hidden");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.BubbleOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.BubbleOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BubbleOptions __result__ = null;
                    try {
                        __result__ = __this__.setOnTapHidden(hidden);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.BubbleOptions::getOnTapHidden_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.BubbleOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.BubbleOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.getOnTapHidden();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan::getLatitudeSpan_batch", (__argsBatch__, __methodResult__) -> {
                List<Double> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Double __result__ = null;
                    try {
                        __result__ = __this__.getLatitudeSpan();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan::setLatitudeSpan_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number latitudeSpan = (Number) ((Map<String, Object>) __args__).get("latitudeSpan");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setLatitudeSpan(latitudeSpan.doubleValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan::getLongitudeSpan_batch", (__argsBatch__, __methodResult__) -> {
                List<Double> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Double __result__ = null;
                    try {
                        __result__ = __this__.getLongitudeSpan();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan::setLongitudeSpan_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number longitudeSpan = (Number) ((Map<String, Object>) __args__).get("longitudeSpan");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setLongitudeSpan(longitudeSpan.doubleValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.CustomLayer::reload_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.CustomLayer __this__ = (com.tencent.tencentmap.mapsdk.maps.model.CustomLayer) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.reload();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.CustomLayer::remove_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.CustomLayer __this__ = (com.tencent.tencentmap.mapsdk.maps.model.CustomLayer) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.remove();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.CustomLayer::clearDiskCache_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.CustomLayer __this__ = (com.tencent.tencentmap.mapsdk.maps.model.CustomLayer) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.clearDiskCache();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.CustomLayer::getId_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.CustomLayer __this__ = (com.tencent.tencentmap.mapsdk.maps.model.CustomLayer) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getId();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setPolylineOptions_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions var1 = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setPolylineOptions(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::getPolylineOptions_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.getPolylineOptions();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::remove_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.remove();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::getId_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getId();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setPoints_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> var1 = (java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng>) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setPoints(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::appendPoint_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng var1 = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.appendPoint(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::appendPoints_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> var1 = (java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng>) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.appendPoints(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::addTurnArrow_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.addTurnArrow(var1.intValue(), var2.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::cleanTurnArrow_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.cleanTurnArrow();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::getPoints_batch", (__argsBatch__, __methodResult__) -> {
                List<java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> __result__ = null;
                    try {
                        __result__ = __this__.getPoints();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setWidth_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setWidth(var1.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::getWidth_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getWidth();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setColor_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setColor(var1.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setColors_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    int[] var1 = (int[]) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    int[] var2 = (int[]) ((Map<String, Object>) __args__).get("var2");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setColors(var1, var2);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setArrow_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setArrow(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setColorTexture__String_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setColorTexture(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setColorTexture__com_tencent_tencentmap_mapsdk_maps_model_BitmapDescriptor_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor var1 = (com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setColorTexture(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::getColor_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getColor();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setZIndex_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setZIndex(var1.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::getZIndex_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getZIndex();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setVisible_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setVisible(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::isVisible_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isVisible();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setAboveMaskLayer_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setAboveMaskLayer(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::isAboveMaskLayer_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isAboveMaskLayer();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::getPattern_batch", (__argsBatch__, __methodResult__) -> {
                List<java.util.List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.util.List<Integer> __result__ = null;
                    try {
                        __result__ = __this__.getPattern();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::pattern_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.util.List<Integer> var1 = (java.util.List<Integer>) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.pattern(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::eraseTo_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng var2 = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("var2");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.eraseTo(var1.intValue(), var2);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setEraseable_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setEraseable(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::startAnimation_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.Animation var1 = (com.tencent.tencentmap.mapsdk.maps.model.Animation) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.startAnimation(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setClickable_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setClickable(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::isClickable_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isClickable();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setTag_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Object var1 = (java.lang.Object) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setTag(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::getTag_batch", (__argsBatch__, __methodResult__) -> {
                List<java.lang.Object> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.lang.Object __result__ = null;
                    try {
                        __result__ = __this__.getTag();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::getLevel_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getLevel();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Polyline::setLevel_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Polyline __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Polyline) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setLevel(var1.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapResource::createBitmapDescriptor__int__int_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapResource __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapResource) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = __this__.createBitmapDescriptor(var1.intValue(), var2.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapResource::createBitmapDescriptor__String__int_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapResource __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapResource) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = __this__.createBitmapDescriptor(var1, var2.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapResource::createBitmapDescriptor__double__int_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapResource __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapResource) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = __this__.createBitmapDescriptor(var1.floatValue(), var2.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapResource::createBitmapDescriptor__android_os_Parcelable__int_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.os.Parcelable var1 = (android.os.Parcelable) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapResource __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapResource) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = __this__.createBitmapDescriptor(var1, var2.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapResource::createBitmapDescriptor__android_graphics_Bitmap__int_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.graphics.Bitmap var1 = (android.graphics.Bitmap) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapResource __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapResource) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = __this__.createBitmapDescriptor(var1, var2.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapResource::createBitmapDescriptor__int_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapResource __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapResource) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = __this__.createBitmapDescriptor(var1.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapResource::getScreenPixels_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapResource __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapResource) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getScreenPixels();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapResource::getDefaultMyLocationStyle_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MyLocationStyle> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapResource __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapResource) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MyLocationStyle __result__ = null;
                    try {
                        __result__ = __this__.getDefaultMyLocationStyle();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.BaseMapView::getMap_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMap> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.BaseMapView __this__ = (com.tencent.tencentmap.mapsdk.maps.BaseMapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMap __result__ = null;
                    try {
                        __result__ = __this__.getMap();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.BaseMapView::getMap__com_tencent_tencentmap_mapsdk_maps_TencentMapOptions_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMap> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions var1 = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.BaseMapView __this__ = (com.tencent.tencentmap.mapsdk.maps.BaseMapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMap __result__ = null;
                    try {
                        __result__ = __this__.getMap(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.BaseMapView::onStart_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.BaseMapView __this__ = (com.tencent.tencentmap.mapsdk.maps.BaseMapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onStart();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.BaseMapView::onResume_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.BaseMapView __this__ = (com.tencent.tencentmap.mapsdk.maps.BaseMapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onResume();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.BaseMapView::onPause_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.BaseMapView __this__ = (com.tencent.tencentmap.mapsdk.maps.BaseMapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onPause();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.BaseMapView::onRestart_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.BaseMapView __this__ = (com.tencent.tencentmap.mapsdk.maps.BaseMapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onRestart();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.BaseMapView::onStop_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.BaseMapView __this__ = (com.tencent.tencentmap.mapsdk.maps.BaseMapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onStop();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.BaseMapView::onDestroy_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.BaseMapView __this__ = (com.tencent.tencentmap.mapsdk.maps.BaseMapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onDestroy();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapComponent::createRotateAnimation_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.IRotateAnimation> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
                    // ref arg
                    Number var3 = (Number) ((Map<String, Object>) __args__).get("var3");
                    // ref arg
                    Number var4 = (Number) ((Map<String, Object>) __args__).get("var4");
                    // ref arg
                    Number var5 = (Number) ((Map<String, Object>) __args__).get("var5");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapComponent __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapComponent) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.IRotateAnimation __result__ = null;
                    try {
                        __result__ = __this__.createRotateAnimation(var1.floatValue(), var2.floatValue(), var3.floatValue(), var4.floatValue(), var5.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapComponent::createScaleAnimation_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.IScaleAnimation> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
                    // ref arg
                    Number var3 = (Number) ((Map<String, Object>) __args__).get("var3");
                    // ref arg
                    Number var4 = (Number) ((Map<String, Object>) __args__).get("var4");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapComponent __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapComponent) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.IScaleAnimation __result__ = null;
                    try {
                        __result__ = __this__.createScaleAnimation(var1.floatValue(), var2.floatValue(), var3.floatValue(), var4.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapComponent::createTranslateAnimation_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.ITranslateAnimation> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng var1 = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapComponent __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapComponent) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.ITranslateAnimation __result__ = null;
                    try {
                        __result__ = __this__.createTranslateAnimation(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapComponent::createEmergeAnimation_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.IEmergeAnimation> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng var1 = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapComponent __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapComponent) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.IEmergeAnimation __result__ = null;
                    try {
                        __result__ = __this__.createEmergeAnimation(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapComponent::createAnimationSet_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.IAnimationSet> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapComponent __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapComponent) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.IAnimationSet __result__ = null;
                    try {
                        __result__ = __this__.createAnimationSet(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapComponent::createAlphaAnimation_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.IAlphaAnimation> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapComponent __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapComponent) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.IAlphaAnimation __result__ = null;
                    try {
                        __result__ = __this__.createAlphaAnimation(var1.floatValue(), var2.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapComponent::createHeatMapTileProvider_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.sdk.utilities.heatmap.HeatMapTileProvider> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.map.sdk.utilities.heatmap.HeatMapTileProvider.Builder var1 = (com.tencent.map.sdk.utilities.heatmap.HeatMapTileProvider.Builder) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapComponent __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapComponent) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.sdk.utilities.heatmap.HeatMapTileProvider __result__ = null;
                    try {
                        __result__ = __this__.createHeatMapTileProvider(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapComponent::getMapServiceProtocol_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapServiceProtocol> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapComponent __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapComponent) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapServiceProtocol __result__ = null;
                    try {
                        __result__ = __this__.getMapServiceProtocol();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getCustomAssetsPath_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getCustomAssetsPath();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setCustomAssetsPath_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String customAssetsPath = (String) ((Map<String, Object>) __args__).get("customAssetsPath");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setCustomAssetsPath(customAssetsPath);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getCustomLocalPath_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getCustomLocalPath();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setCustomLocalPath_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String customLocalPath = (String) ((Map<String, Object>) __args__).get("customLocalPath");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setCustomLocalPath(customLocalPath);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getCustomCacheRootPath_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getCustomCacheRootPath();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setCustomCacheRootPath_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String customCacheRootPath = (String) ((Map<String, Object>) __args__).get("customCacheRootPath");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setCustomCacheRootPath(customCacheRootPath);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setHandDrawMapEnable_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean enable = (boolean) ((Map<String, Object>) __args__).get("enable");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setHandDrawMapEnable(enable);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::isHandDrawMapEnable_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isHandDrawMapEnable();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getExtSurface_batch", (__argsBatch__, __methodResult__) -> {
                List<java.lang.Object> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.lang.Object __result__ = null;
                    try {
                        __result__ = __this__.getExtSurface();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setExtSurface_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Object surface = (java.lang.Object) ((Map<String, Object>) __args__).get("surface");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setExtSurface(surface);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getDebugTags_batch", (__argsBatch__, __methodResult__) -> {
                List<String[]> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String[] __result__ = null;
                    try {
                        __result__ = __this__.getDebugTags();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setExtSurfaceDimension_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number width = (Number) ((Map<String, Object>) __args__).get("width");
                    // ref arg
                    Number height = (Number) ((Map<String, Object>) __args__).get("height");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setExtSurfaceDimension(width.intValue(), height.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getExtSurfaceWidth_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getExtSurfaceWidth();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getExtSurfaceHeight_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getExtSurfaceHeight();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setSubInfo_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String subKey = (String) ((Map<String, Object>) __args__).get("subKey");
                    // ref arg
                    String subId = (String) ((Map<String, Object>) __args__).get("subId");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setSubInfo(subKey, subId);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getSubId_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getSubId();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getSubKey_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getSubKey();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setMapKey_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String mapKey = (String) ((Map<String, Object>) __args__).get("mapKey");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setMapKey(mapKey);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getMapKey_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getMapKey();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::openDebugLogByTags_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String tags = (String) ((Map<String, Object>) __args__).get("tags");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.openDebugLogByTags(tags);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setMultipleInfoWindowEnable_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean isEnable = (boolean) ((Map<String, Object>) __args__).get("isEnable");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setMultipleInfoWindowEnable(isEnable);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::isMultipleInfoWindowEnable_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isMultipleInfoWindowEnable();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setSatelliteVersion_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String version = (String) ((Map<String, Object>) __args__).get("version");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setSatelliteVersion(version);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getSatelliteVersion_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getSatelliteVersion();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setMapViewType_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.tencentmap.mapsdk.maps.model.MapViewType mapViewType = com.tencent.tencentmap.mapsdk.maps.model.MapViewType.values()[(int) ((Map<String, Object>) __args__).get("mapViewType")];
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setMapViewType(mapViewType);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getMapViewType_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MapViewType> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MapViewType __result__ = null;
                    try {
                        __result__ = __this__.getMapViewType();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setServiceProtocol_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number protocolFrom = (Number) ((Map<String, Object>) __args__).get("protocolFrom");
                    // ref arg
                    java.lang.Object protocolDataDesc = (java.lang.Object) ((Map<String, Object>) __args__).get("protocolDataDesc");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setServiceProtocol(protocolFrom.intValue(), protocolDataDesc);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getProtocolFrom_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getProtocolFrom();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getProtocolDataDesc_batch", (__argsBatch__, __methodResult__) -> {
                List<java.lang.Object> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.lang.Object __result__ = null;
                    try {
                        __result__ = __this__.getProtocolDataDesc();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setNetAdapter_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.map.tools.net.AdapterType adapterType = com.tencent.map.tools.net.AdapterType.values()[(int) ((Map<String, Object>) __args__).get("adapterType")];
                    // ref arg
                    android.os.Bundle params = (android.os.Bundle) ((Map<String, Object>) __args__).get("params");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setNetAdapter(adapterType, params);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getNetAdapterType_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.net.AdapterType> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.net.AdapterType __result__ = null;
                    try {
                        __result__ = __this__.getNetAdapterType();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getNetParams_batch", (__argsBatch__, __methodResult__) -> {
                List<android.os.Bundle> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    android.os.Bundle __result__ = null;
                    try {
                        __result__ = __this__.getNetParams();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setCustomUserID_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String cuid = (String) ((Map<String, Object>) __args__).get("cuid");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setCustomUserID(cuid);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getCustomUserId_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getCustomUserId();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setOfflineMapEnable_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean enable = (boolean) ((Map<String, Object>) __args__).get("enable");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setOfflineMapEnable(enable);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::isOfflineMapEnable_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isOfflineMapEnable();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setOverSeaSource_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.tencentmap.mapsdk.maps.model.OverSeaSource overSeaSource = com.tencent.tencentmap.mapsdk.maps.model.OverSeaSource.values()[(int) ((Map<String, Object>) __args__).get("overSeaSource")];
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setOverSeaSource(overSeaSource);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getOverSeaSource_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.OverSeaSource> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.OverSeaSource __result__ = null;
                    try {
                        __result__ = __this__.getOverSeaSource();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::getTrafficStyle_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.TrafficStyle> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.TrafficStyle __result__ = null;
                    try {
                        __result__ = __this__.getTrafficStyle();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.TencentMapOptions::setTrafficStyle_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.TencentMapOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.TrafficStyle trafficStyle = (com.tencent.tencentmap.mapsdk.maps.model.TrafficStyle) ((Map<String, Object>) __args__).get("trafficStyle");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.TencentMapOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.TencentMapOptions __result__ = null;
                    try {
                        __result__ = __this__.setTrafficStyle(trafficStyle);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.MapView::dispatchTouchEvent_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.view.MotionEvent ev = (android.view.MotionEvent) ((Map<String, Object>) __args__).get("ev");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.MapView __this__ = (com.tencent.tencentmap.mapsdk.maps.MapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.dispatchTouchEvent(ev);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.MapView::setOnTop_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean isOnTop = (boolean) ((Map<String, Object>) __args__).get("isOnTop");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.MapView __this__ = (com.tencent.tencentmap.mapsdk.maps.MapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setOnTop(isOnTop);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.MapView::setMapPadding_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number left = (Number) ((Map<String, Object>) __args__).get("left");
                    // ref arg
                    Number top = (Number) ((Map<String, Object>) __args__).get("top");
                    // ref arg
                    Number right = (Number) ((Map<String, Object>) __args__).get("right");
                    // ref arg
                    Number bottom = (Number) ((Map<String, Object>) __args__).get("bottom");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.MapView __this__ = (com.tencent.tencentmap.mapsdk.maps.MapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setMapPadding(left.intValue(), top.intValue(), right.intValue(), bottom.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.MapView::getMapPadding_batch", (__argsBatch__, __methodResult__) -> {
                List<int[]> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.MapView __this__ = (com.tencent.tencentmap.mapsdk.maps.MapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    int[] __result__ = null;
                    try {
                        __result__ = __this__.getMapPadding();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.MapView::onSizeChanged_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number w = (Number) ((Map<String, Object>) __args__).get("w");
                    // ref arg
                    Number h = (Number) ((Map<String, Object>) __args__).get("h");
                    // ref arg
                    Number oldw = (Number) ((Map<String, Object>) __args__).get("oldw");
                    // ref arg
                    Number oldh = (Number) ((Map<String, Object>) __args__).get("oldh");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.MapView __this__ = (com.tencent.tencentmap.mapsdk.maps.MapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onSizeChanged(w.intValue(), h.intValue(), oldw.intValue(), oldh.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.MapView::onSurfaceChanged_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Object surfaceTexture = (java.lang.Object) ((Map<String, Object>) __args__).get("surfaceTexture");
                    // ref arg
                    Number width = (Number) ((Map<String, Object>) __args__).get("width");
                    // ref arg
                    Number height = (Number) ((Map<String, Object>) __args__).get("height");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.MapView __this__ = (com.tencent.tencentmap.mapsdk.maps.MapView) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onSurfaceChanged(surfaceTexture, width.intValue(), height.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.io.QStorageManager::getInstance_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.io.QStorageManager> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.io.QStorageManager __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.io.QStorageManager.getInstance(context);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.io.QStorageManager::clearOldConfig_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
                    // ref arg
                    String cachedVersion = (String) ((Map<String, Object>) __args__).get("cachedVersion");
            
                    // ref
                    com.tencent.tencentmap.io.QStorageManager __this__ = (com.tencent.tencentmap.io.QStorageManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.clearOldConfig(context, cachedVersion);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.io.QStorageManager::getDataDir_batch", (__argsBatch__, __methodResult__) -> {
                List<java.io.File> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.io.QStorageManager __this__ = (com.tencent.tencentmap.io.QStorageManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.io.File __result__ = null;
                    try {
                        __result__ = __this__.getDataDir();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.io.QStorageManager::getCacheDir_batch", (__argsBatch__, __methodResult__) -> {
                List<java.io.File> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.io.QStorageManager __this__ = (com.tencent.tencentmap.io.QStorageManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.io.File __result__ = null;
                    try {
                        __result__ = __this__.getCacheDir();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.io.QStorageManager::getMapPath_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.io.QStorageManager __this__ = (com.tencent.tencentmap.io.QStorageManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getMapPath();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.io.QStorageManager::getSatPath_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.io.QStorageManager __this__ = (com.tencent.tencentmap.io.QStorageManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getSatPath();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.io.QStorageManager::getRouteBlockPath_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.io.QStorageManager __this__ = (com.tencent.tencentmap.io.QStorageManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getRouteBlockPath();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.io.QStorageManager::getConfigPath_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String key = (String) ((Map<String, Object>) __args__).get("key");
            
                    // ref
                    com.tencent.tencentmap.io.QStorageManager __this__ = (com.tencent.tencentmap.io.QStorageManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getConfigPath(key);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.io.QStorageManager::getAssetsLoadPath_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String key = (String) ((Map<String, Object>) __args__).get("key");
            
                    // ref
                    com.tencent.tencentmap.io.QStorageManager __this__ = (com.tencent.tencentmap.io.QStorageManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getAssetsLoadPath(key);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.io.QStorageManager::getAssetsDynamicPath_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.io.QStorageManager __this__ = (com.tencent.tencentmap.io.QStorageManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getAssetsDynamicPath();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.io.QStorageManager::getConfigTempPath_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String key = (String) ((Map<String, Object>) __args__).get("key");
            
                    // ref
                    com.tencent.tencentmap.io.QStorageManager __this__ = (com.tencent.tencentmap.io.QStorageManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getConfigTempPath(key);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.orientation.OrientationManager::destroy_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.orientation.OrientationManager __this__ = (com.tencent.map.tools.orientation.OrientationManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.destroy();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.orientation.OrientationManager::onOrientationChanged_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number orientation = (Number) ((Map<String, Object>) __args__).get("orientation");
            
                    // ref
                    com.tencent.map.tools.orientation.OrientationManager __this__ = (com.tencent.map.tools.orientation.OrientationManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onOrientationChanged(orientation.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetAdapter::initNet_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context var1 = (android.content.Context) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.map.tools.net.NetAdapter __this__ = (com.tencent.map.tools.net.NetAdapter) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.initNet(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetAdapter::doGet_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.net.NetResponse> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                    // ref arg
                    Number var3 = (Number) ((Map<String, Object>) __args__).get("var3");
                    // ref arg
                    Number var4 = (Number) ((Map<String, Object>) __args__).get("var4");
                    // ref arg
                    java.util.HashMap<String,String> var5 = (java.util.HashMap<String,String>) ((Map<String, Object>) __args__).get("var5");
                    // ref arg
                    com.tencent.map.tools.net.http.HttpCanceler var6 = (com.tencent.map.tools.net.http.HttpCanceler) ((Map<String, Object>) __args__).get("var6");
            
                    // ref
                    com.tencent.map.tools.net.NetAdapter __this__ = (com.tencent.map.tools.net.NetAdapter) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.net.NetResponse __result__ = null;
                    try {
                        __result__ = __this__.doGet(var1, var2, var3.intValue(), var4.intValue(), var5, var6);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetAdapter::doPost_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.net.NetResponse> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                    // ref arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) __args__).get("var3");
                    // ref arg
                    Number var4 = (Number) ((Map<String, Object>) __args__).get("var4");
                    // ref arg
                    Number var5 = (Number) ((Map<String, Object>) __args__).get("var5");
                    // ref arg
                    java.util.HashMap<String,String> var6 = (java.util.HashMap<String,String>) ((Map<String, Object>) __args__).get("var6");
                    // ref arg
                    com.tencent.map.tools.net.http.HttpCanceler var7 = (com.tencent.map.tools.net.http.HttpCanceler) ((Map<String, Object>) __args__).get("var7");
            
                    // ref
                    com.tencent.map.tools.net.NetAdapter __this__ = (com.tencent.map.tools.net.NetAdapter) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.net.NetResponse __result__ = null;
                    try {
                        __result__ = __this__.doPost(var1, var2, var3, var4.intValue(), var5.intValue(), var6, var7);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetAdapter::doPostNoBuffer_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.net.NetResponse> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                    // ref arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) __args__).get("var3");
            
                    // ref
                    com.tencent.map.tools.net.NetAdapter __this__ = (com.tencent.map.tools.net.NetAdapter) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.net.NetResponse __result__ = null;
                    try {
                        __result__ = __this__.doPostNoBuffer(var1, var2, var3);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetAdapter::doRangePost_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) __args__).get("var2");
                    // ref arg
                    String var3 = (String) ((Map<String, Object>) __args__).get("var3");
                    // ref arg
                    String var4 = (String) ((Map<String, Object>) __args__).get("var4");
                    // ref arg
                    String var5 = (String) ((Map<String, Object>) __args__).get("var5");
                    // ref arg
                    String var6 = (String) ((Map<String, Object>) __args__).get("var6");
                    // ref arg
                    com.tencent.map.tools.net.http.HttpCanceler var7 = (com.tencent.map.tools.net.http.HttpCanceler) ((Map<String, Object>) __args__).get("var7");
            
                    // ref
                    com.tencent.map.tools.net.NetAdapter __this__ = (com.tencent.map.tools.net.NetAdapter) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.doRangePost(var1, var2, var3, var4, var5, var6, var7);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetAdapter::cancel_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.net.NetAdapter __this__ = (com.tencent.map.tools.net.NetAdapter) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.cancel();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.adapter.AbsNetImpl::setArguments_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.os.Bundle params = (android.os.Bundle) ((Map<String, Object>) __args__).get("params");
            
                    // ref
                    com.tencent.map.tools.net.adapter.AbsNetImpl __this__ = (com.tencent.map.tools.net.adapter.AbsNetImpl) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setArguments(params);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.http.HttpCanceler::cancel_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.net.http.HttpCanceler __this__ = (com.tencent.map.tools.net.http.HttpCanceler) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.cancel();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.http.HttpCanceler::isCanceled_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.net.http.HttpCanceler __this__ = (com.tencent.map.tools.net.http.HttpCanceler) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isCanceled();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetResponse::available_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.net.NetResponse __this__ = (com.tencent.map.tools.net.NetResponse) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.available();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetResponse::clone_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.map.tools.net.NetResponse netResponse = (com.tencent.map.tools.net.NetResponse) ((Map<String, Object>) __args__).get("netResponse");
            
                    // ref
                    com.tencent.map.tools.net.NetResponse __this__ = (com.tencent.map.tools.net.NetResponse) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.clone(netResponse);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetResponse::toHumanString_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.net.NetResponse __this__ = (com.tencent.map.tools.net.NetResponse) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.toHumanString();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetManager::getInstance_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.net.NetManager> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.map.tools.net.NetManager __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.net.NetManager.getInstance();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetManager::setAdapter_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
                    // ref arg
                    com.tencent.map.tools.net.NetAdapter adapter = (com.tencent.map.tools.net.NetAdapter) ((Map<String, Object>) __args__).get("adapter");
            
                    // ref
                    com.tencent.map.tools.net.NetManager __this__ = (com.tencent.map.tools.net.NetManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setAdapter(context, adapter);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetManager::doGet_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.net.NetResponse> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String url = (String) ((Map<String, Object>) __args__).get("url");
                    // ref arg
                    String userAgent = (String) ((Map<String, Object>) __args__).get("userAgent");
                    // ref arg
                    Number retryMethod = (Number) ((Map<String, Object>) __args__).get("retryMethod");
                    // ref arg
                    Number timeOut = (Number) ((Map<String, Object>) __args__).get("timeOut");
                    // ref arg
                    java.util.HashMap<String,String> mapHeaders = (java.util.HashMap<String,String>) ((Map<String, Object>) __args__).get("mapHeaders");
                    // ref arg
                    com.tencent.map.tools.net.http.HttpCanceler canceler = (com.tencent.map.tools.net.http.HttpCanceler) ((Map<String, Object>) __args__).get("canceler");
            
                    // ref
                    com.tencent.map.tools.net.NetManager __this__ = (com.tencent.map.tools.net.NetManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.net.NetResponse __result__ = null;
                    try {
                        __result__ = __this__.doGet(url, userAgent, retryMethod.intValue(), timeOut.intValue(), mapHeaders, canceler);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetManager::doPost_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.net.NetResponse> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String url = (String) ((Map<String, Object>) __args__).get("url");
                    // ref arg
                    String userAgent = (String) ((Map<String, Object>) __args__).get("userAgent");
                    // ref arg
                    byte[] postData = (byte[]) ((Map<String, Object>) __args__).get("postData");
                    // ref arg
                    Number retryMethod = (Number) ((Map<String, Object>) __args__).get("retryMethod");
                    // ref arg
                    Number timeout = (Number) ((Map<String, Object>) __args__).get("timeout");
                    // ref arg
                    java.util.HashMap<String,String> mapHeaders = (java.util.HashMap<String,String>) ((Map<String, Object>) __args__).get("mapHeaders");
                    // ref arg
                    com.tencent.map.tools.net.http.HttpCanceler canceler = (com.tencent.map.tools.net.http.HttpCanceler) ((Map<String, Object>) __args__).get("canceler");
            
                    // ref
                    com.tencent.map.tools.net.NetManager __this__ = (com.tencent.map.tools.net.NetManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.net.NetResponse __result__ = null;
                    try {
                        __result__ = __this__.doPost(url, userAgent, postData, retryMethod.intValue(), timeout.intValue(), mapHeaders, canceler);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetManager::doPostNoBuffer_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.net.NetResponse> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String url = (String) ((Map<String, Object>) __args__).get("url");
                    // ref arg
                    String userAgent = (String) ((Map<String, Object>) __args__).get("userAgent");
                    // ref arg
                    byte[] postData = (byte[]) ((Map<String, Object>) __args__).get("postData");
            
                    // ref
                    com.tencent.map.tools.net.NetManager __this__ = (com.tencent.map.tools.net.NetManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.net.NetResponse __result__ = null;
                    try {
                        __result__ = __this__.doPostNoBuffer(url, userAgent, postData);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetManager::doRangePost_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String url = (String) ((Map<String, Object>) __args__).get("url");
                    // ref arg
                    byte[] postData = (byte[]) ((Map<String, Object>) __args__).get("postData");
                    // ref arg
                    String token = (String) ((Map<String, Object>) __args__).get("token");
                    // ref arg
                    String nonce = (String) ((Map<String, Object>) __args__).get("nonce");
                    // ref arg
                    String timeStamp = (String) ((Map<String, Object>) __args__).get("timeStamp");
                    // ref arg
                    String start = (String) ((Map<String, Object>) __args__).get("start");
                    // ref arg
                    com.tencent.map.tools.net.http.HttpCanceler canceler = (com.tencent.map.tools.net.http.HttpCanceler) ((Map<String, Object>) __args__).get("canceler");
            
                    // ref
                    com.tencent.map.tools.net.NetManager __this__ = (com.tencent.map.tools.net.NetManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.doRangePost(url, postData, token, nonce, timeStamp, start, canceler);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.exception.NetCustomException::getNetCode_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.net.exception.NetCustomException __this__ = (com.tencent.map.tools.net.exception.NetCustomException) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getNetCode();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetUtil::getNetType__android_content_Context_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context ctx = (android.content.Context) ((Map<String, Object>) __args__).get("ctx");
            
                    // ref
            
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.net.NetUtil.getNetType(ctx);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetUtil::getNetTypeStr_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context ctx = (android.content.Context) ((Map<String, Object>) __args__).get("ctx");
            
                    // ref
            
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.net.NetUtil.getNetTypeStr(ctx);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetUtil::getNetworkType_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context ctx = (android.content.Context) ((Map<String, Object>) __args__).get("ctx");
            
                    // ref
            
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.net.NetUtil.getNetworkType(ctx);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetUtil::isNetAvailable_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context param0 = (android.content.Context) ((Map<String, Object>) __args__).get("param0");
            
                    // ref
            
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.net.NetUtil.isNetAvailable(param0);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetUtil::isWifi_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context ctx = (android.content.Context) ((Map<String, Object>) __args__).get("ctx");
            
                    // ref
            
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.net.NetUtil.isWifi(ctx);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.net.NetUtil::isMobile_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context ctx = (android.content.Context) ((Map<String, Object>) __args__).get("ctx");
            
                    // ref
            
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.net.NetUtil.isMobile(ctx);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::getDensity_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
            
                    // ref
            
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.Util.getDensity(context);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::getWindowWidth_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
            
                    // ref
            
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.Util.getWindowWidth(context);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::getWindowHeight_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
            
                    // ref
            
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.Util.getWindowHeight(context);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::getOpenglesVersion_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
            
                    // ref
            
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.Util.getOpenglesVersion(context);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::getAppVersion_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
            
                    // ref
            
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.Util.getAppVersion(context);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::getMetaKey_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
                    // ref arg
                    String metaName = (String) ((Map<String, Object>) __args__).get("metaName");
            
                    // ref
            
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.Util.getMetaKey(context, metaName);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::getMacAddress_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
            
                    // ref
            
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.Util.getMacAddress(context);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::getIMei_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
            
                    // ref
            
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.Util.getIMei(context);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::getAppName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
            
                    // ref
            
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.Util.getAppName(context);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::getResolution_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
            
                    // ref
            
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.Util.getResolution(context);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::filterBuilder_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String values = (String) ((Map<String, Object>) __args__).get("values");
            
                    // ref
            
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.Util.filterBuilder(values);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::setField_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Object object = (java.lang.Object) ((Map<String, Object>) __args__).get("object");
                    // ref arg
                    String fieldName = (String) ((Map<String, Object>) __args__).get("fieldName");
                    // ref arg
                    java.lang.Object value = (java.lang.Object) ((Map<String, Object>) __args__).get("value");
            
                    // ref
            
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        com.tencent.map.tools.Util.setField(object, fieldName, value);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::getField_batch", (__argsBatch__, __methodResult__) -> {
                List<java.lang.Object> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Object object = (java.lang.Object) ((Map<String, Object>) __args__).get("object");
                    // ref arg
                    String fieldName = (String) ((Map<String, Object>) __args__).get("fieldName");
            
                    // ref
            
            
                    // invoke native method
                    java.lang.Object __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.Util.getField(object, fieldName);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.Util::invokeMethod__Object__String__Object_batch", (__argsBatch__, __methodResult__) -> {
                List<java.lang.Object> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Object object = (java.lang.Object) ((Map<String, Object>) __args__).get("object");
                    // ref arg
                    String methodName = (String) ((Map<String, Object>) __args__).get("methodName");
                    // ref arg
                    java.lang.Object parameters = (java.lang.Object) ((Map<String, Object>) __args__).get("parameters");
            
                    // ref
            
            
                    // invoke native method
                    java.lang.Object __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.Util.invokeMethod(object, methodName, parameters);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager::getInstance_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager __result__ = null;
                    try {
                        __result__ = com.tencent.map.tools.sheet.SheetManager.getInstance();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager::init_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
                    // ref arg
                    com.tencent.map.tools.sheet.SheetManager.Options options = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("options");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager __this__ = (com.tencent.map.tools.sheet.SheetManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.init(context, options);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager::newSheetIns__String_batch", (__argsBatch__, __methodResult__) -> {
                List<java.lang.Object> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String clazzPath = (String) ((Map<String, Object>) __args__).get("clazzPath");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager __this__ = (com.tencent.map.tools.sheet.SheetManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.lang.Object __result__ = null;
                    try {
                        __result__ = __this__.newSheetIns(clazzPath);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager::callSheetMth__Object__String__Object_batch", (__argsBatch__, __methodResult__) -> {
                List<java.lang.Object> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Object obj = (java.lang.Object) ((Map<String, Object>) __args__).get("obj");
                    // ref arg
                    String method = (String) ((Map<String, Object>) __args__).get("method");
                    // ref arg
                    java.lang.Object params = (java.lang.Object) ((Map<String, Object>) __args__).get("params");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager __this__ = (com.tencent.map.tools.sheet.SheetManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.lang.Object __result__ = null;
                    try {
                        __result__ = __this__.callSheetMth(obj, method, params);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager::loadSheetGroups_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager __this__ = (com.tencent.map.tools.sheet.SheetManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.loadSheetGroups();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager::getLogDir_batch", (__argsBatch__, __methodResult__) -> {
                List<java.io.File> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager __this__ = (com.tencent.map.tools.sheet.SheetManager) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.io.File __result__ = null;
                    try {
                        __result__ = __this__.getLogDir();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetNetworkStateMonitor::shutdown_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetNetworkStateMonitor __this__ = (com.tencent.map.tools.sheet.SheetNetworkStateMonitor) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.shutdown();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetNetworkStateMonitor::onReceive_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context context = (android.content.Context) ((Map<String, Object>) __args__).get("context");
                    // ref arg
                    android.content.Intent intent = (android.content.Intent) ((Map<String, Object>) __args__).get("intent");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetNetworkStateMonitor __this__ = (com.tencent.map.tools.sheet.SheetNetworkStateMonitor) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onReceive(context, intent);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::getUncaughtListener_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.UncaughtListener> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.UncaughtListener __result__ = null;
                    try {
                        __result__ = __this__.getUncaughtListener();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::setUncaughtListener_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.Options> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.map.tools.sheet.SheetManager.UncaughtListener uncaughtListener = (com.tencent.map.tools.sheet.SheetManager.UncaughtListener) ((Map<String, Object>) __args__).get("uncaughtListener");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.Options __result__ = null;
                    try {
                        __result__ = __this__.setUncaughtListener(uncaughtListener);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::getAdapterType_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.Options.AdapterType> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.Options.AdapterType __result__ = null;
                    try {
                        __result__ = __this__.getAdapterType();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::setAdapterType_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.Options> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.map.tools.sheet.SheetManager.Options.AdapterType adapterType = com.tencent.map.tools.sheet.SheetManager.Options.AdapterType.values()[(int) ((Map<String, Object>) __args__).get("adapterType")];
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.Options __result__ = null;
                    try {
                        __result__ = __this__.setAdapterType(adapterType);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::getPluginName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getPluginName();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::setSheetProjectName_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.Options> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String pluginName = (String) ((Map<String, Object>) __args__).get("pluginName");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.Options __result__ = null;
                    try {
                        __result__ = __this__.setSheetProjectName(pluginName);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::getPluginUpdateUrl_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getPluginUpdateUrl();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::setPluginUpdateUrl_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.Options> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String pluginUpdateUrl = (String) ((Map<String, Object>) __args__).get("pluginUpdateUrl");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.Options __result__ = null;
                    try {
                        __result__ = __this__.setPluginUpdateUrl(pluginUpdateUrl);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::getSdkVersion_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getSdkVersion();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::setVersion_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.Options> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String sdkVersion = (String) ((Map<String, Object>) __args__).get("sdkVersion");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.Options __result__ = null;
                    try {
                        __result__ = __this__.setVersion(sdkVersion);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::getSdkVersionCode_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getSdkVersionCode();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::setVersionCode_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.Options> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String sdkVersionCode = (String) ((Map<String, Object>) __args__).get("sdkVersionCode");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.Options __result__ = null;
                    try {
                        __result__ = __this__.setVersionCode(sdkVersionCode);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::getSdkRepo_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getSdkRepo();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::setSdkRepo_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.Options> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String sdkRepo = (String) ((Map<String, Object>) __args__).get("sdkRepo");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.Options __result__ = null;
                    try {
                        __result__ = __this__.setSdkRepo(sdkRepo);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::getSdkFlavor_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getSdkFlavor();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::setFlavor_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.Options> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String sdkFlavor = (String) ((Map<String, Object>) __args__).get("sdkFlavor");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.Options __result__ = null;
                    try {
                        __result__ = __this__.setFlavor(sdkFlavor);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::getSdkMapKey_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getSdkMapKey();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::setAppKey_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.Options> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String sdkMapKey = (String) ((Map<String, Object>) __args__).get("sdkMapKey");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.Options __result__ = null;
                    try {
                        __result__ = __this__.setAppKey(sdkMapKey);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::isCoreLogOn_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isCoreLogOn();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::setCoreLogOn_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.Options> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean coreLogOn = (boolean) ((Map<String, Object>) __args__).get("coreLogOn");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.Options __result__ = null;
                    try {
                        __result__ = __this__.setCoreLogOn(coreLogOn);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::setSheetEnable_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.Options> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean enable = (boolean) ((Map<String, Object>) __args__).get("enable");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.Options __result__ = null;
                    try {
                        __result__ = __this__.setSheetEnable(enable);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::isSheetEnable_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isSheetEnable();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::getCoreLogReportUrl_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getCoreLogReportUrl();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.tools.sheet.SheetManager.Options::setCoreLogReportUrl_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.tools.sheet.SheetManager.Options> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String coreLogReportUrl = (String) ((Map<String, Object>) __args__).get("coreLogReportUrl");
            
                    // ref
                    com.tencent.map.tools.sheet.SheetManager.Options __this__ = (com.tencent.map.tools.sheet.SheetManager.Options) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.tools.sheet.SheetManager.Options __result__ = null;
                    try {
                        __result__ = __this__.setCoreLogReportUrl(coreLogReportUrl);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
        }};
    }
}
