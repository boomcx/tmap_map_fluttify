//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.tmap_map_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.common.StandardMethodCodec;
import io.flutter.plugin.platform.PlatformViewRegistry;

import me.yohom.tmap_map_fluttify.TmapMapFluttifyPlugin.Handler;
import me.yohom.foundation_fluttify.core.FluttifyMessageCodec;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler14 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptorFactory::fromFile__com_tencent_tencentmap_mapsdk_maps_TencentMapContext__String_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.TencentMapContext context = (com.tencent.tencentmap.mapsdk.maps.TencentMapContext) ((Map<String, Object>) __args__).get("context");
                    // ref arg
                    String filename = (String) ((Map<String, Object>) __args__).get("filename");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptorFactory.fromFile(context, filename);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptorFactory::fromPath__com_tencent_tencentmap_mapsdk_maps_TencentMapContext__String_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.TencentMapContext context = (com.tencent.tencentmap.mapsdk.maps.TencentMapContext) ((Map<String, Object>) __args__).get("context");
                    // ref arg
                    String filename = (String) ((Map<String, Object>) __args__).get("filename");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptorFactory.fromPath(context, filename);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptorFactory::defaultMarker__com_tencent_tencentmap_mapsdk_maps_TencentMapContext_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.TencentMapContext context = (com.tencent.tencentmap.mapsdk.maps.TencentMapContext) ((Map<String, Object>) __args__).get("context");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptorFactory.defaultMarker(context);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptorFactory::defaultMarker__com_tencent_tencentmap_mapsdk_maps_TencentMapContext__double_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.TencentMapContext context = (com.tencent.tencentmap.mapsdk.maps.TencentMapContext) ((Map<String, Object>) __args__).get("context");
                    // ref arg
                    Number color = (Number) ((Map<String, Object>) __args__).get("color");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptorFactory.defaultMarker(context, color.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptorFactory::fromBitmap__com_tencent_tencentmap_mapsdk_maps_TencentMapContext__android_graphics_Bitmap_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.TencentMapContext context = (com.tencent.tencentmap.mapsdk.maps.TencentMapContext) ((Map<String, Object>) __args__).get("context");
                    // ref arg
                    android.graphics.Bitmap bitmap = (android.graphics.Bitmap) ((Map<String, Object>) __args__).get("bitmap");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptorFactory.fromBitmap(context, bitmap);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptorFactory::fromView__com_tencent_tencentmap_mapsdk_maps_TencentMapContext__android_view_View_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.TencentMapContext context = (com.tencent.tencentmap.mapsdk.maps.TencentMapContext) ((Map<String, Object>) __args__).get("context");
                    // ref arg
                    android.view.View view = (android.view.View) ((Map<String, Object>) __args__).get("view");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptorFactory.fromView(context, view);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::getType_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions.VectorHeatOverlayType> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions.VectorHeatOverlayType __result__ = null;
                    try {
                        __result__ = __this__.getType();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::type_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions.VectorHeatOverlayType type = com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions.VectorHeatOverlayType.values()[(int) ((Map<String, Object>) __args__).get("type")];
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.type(type);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::getSize_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getSize();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::size_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number size = (Number) ((Map<String, Object>) __args__).get("size");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.size(size.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::getGap_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getGap();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::gap_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number gap = (Number) ((Map<String, Object>) __args__).get("gap");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.gap(gap.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::getOpacity_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getOpacity();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::opacity_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number opacity = (Number) ((Map<String, Object>) __args__).get("opacity");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.opacity(opacity.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::isVisibility_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isVisibility();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::visibility_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean visibility = (boolean) ((Map<String, Object>) __args__).get("visibility");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.visibility(visibility);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::getMinZoom_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getMinZoom();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::minZoom_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number minZoom = (Number) ((Map<String, Object>) __args__).get("minZoom");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.minZoom(minZoom.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::getMaxZoom_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getMaxZoom();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::maxZoom_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number maxZoom = (Number) ((Map<String, Object>) __args__).get("maxZoom");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.maxZoom(maxZoom.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::getColors_batch", (__argsBatch__, __methodResult__) -> {
                List<int[]> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    int[] __result__ = null;
                    try {
                        __result__ = __this__.getColors();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::colors_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    int[] colors = (int[]) ((Map<String, Object>) __args__).get("colors");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.colors(colors);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::getStartPoints_batch", (__argsBatch__, __methodResult__) -> {
                List<double[]> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    double[] __result__ = null;
                    try {
                        __result__ = __this__.getStartPoints();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions::startPoints_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    double[] startPoints = (double[]) ((Map<String, Object>) __args__).get("startPoints");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.startPoints(startPoints);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::setLatLngs_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> listLatlngs = (java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng>) ((Map<String, Object>) __args__).get("listLatlngs");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setLatLngs(listLatlngs);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::latLngs_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> listLatlngs = (java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng>) ((Map<String, Object>) __args__).get("listLatlngs");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.latLngs(listLatlngs);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::add__com_tencent_tencentmap_mapsdk_maps_model_LatLng__com_tencent_tencentmap_mapsdk_maps_model_LatLng_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng latlng = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("latlng");
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng args = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("args");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.add(latlng, args);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::addAll_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Iterable<com.tencent.tencentmap.mapsdk.maps.model.LatLng> latLngs = (java.lang.Iterable<com.tencent.tencentmap.mapsdk.maps.model.LatLng>) ((Map<String, Object>) __args__).get("latLngs");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.addAll(latLngs);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::updatePoints_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Iterable<com.tencent.tencentmap.mapsdk.maps.model.LatLng> latLngs = (java.lang.Iterable<com.tencent.tencentmap.mapsdk.maps.model.LatLng>) ((Map<String, Object>) __args__).get("latLngs");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.updatePoints(latLngs);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::width_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number width = (Number) ((Map<String, Object>) __args__).get("width");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.width(width.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::borderWidth_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number borderWidth = (Number) ((Map<String, Object>) __args__).get("borderWidth");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.borderWidth(borderWidth.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::colorType_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.ColorType type = com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.ColorType.values()[(int) ((Map<String, Object>) __args__).get("type")];
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.colorType(type);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getColorType_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.ColorType> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.ColorType __result__ = null;
                    try {
                        __result__ = __this__.getColorType();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::color_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number i = (Number) ((Map<String, Object>) __args__).get("i");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.color(i.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::colors_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    int[] colors = (int[]) ((Map<String, Object>) __args__).get("colors");
                    // ref arg
                    int[] indexes = (int[]) ((Map<String, Object>) __args__).get("indexes");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.colors(colors, indexes);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::borderColors_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    int[] borderColors = (int[]) ((Map<String, Object>) __args__).get("borderColors");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.borderColors(borderColors);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::borderColor_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number borderColor = (Number) ((Map<String, Object>) __args__).get("borderColor");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.borderColor(borderColor.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::eraseColor_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number eraseColor = (Number) ((Map<String, Object>) __args__).get("eraseColor");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.eraseColor(eraseColor.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getEraseColor_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getEraseColor();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::zIndex_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number zIndex = (Number) ((Map<String, Object>) __args__).get("zIndex");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.zIndex(zIndex.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::indoorInfo_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.IndoorInfo indoorInfo = (com.tencent.tencentmap.mapsdk.maps.model.IndoorInfo) ((Map<String, Object>) __args__).get("indoorInfo");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.indoorInfo(indoorInfo);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::visible_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean visible = (boolean) ((Map<String, Object>) __args__).get("visible");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.visible(visible);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::setColors_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    int[] colors = (int[]) ((Map<String, Object>) __args__).get("colors");
                    // ref arg
                    int[] indexes = (int[]) ((Map<String, Object>) __args__).get("indexes");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setColors(colors, indexes);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::arrow_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean flag = (boolean) ((Map<String, Object>) __args__).get("flag");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.arrow(flag);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::abovePillar_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean isAbove = (boolean) ((Map<String, Object>) __args__).get("isAbove");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.abovePillar(isAbove);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::alpha_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number a = (Number) ((Map<String, Object>) __args__).get("a");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.alpha(a.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::lineCap_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean cap = (boolean) ((Map<String, Object>) __args__).get("cap");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.lineCap(cap);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::animation_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.Animation a = (com.tencent.tencentmap.mapsdk.maps.model.Animation) ((Map<String, Object>) __args__).get("a");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.animation(a);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getPoints_batch", (__argsBatch__, __methodResult__) -> {
                List<java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> __result__ = null;
                    try {
                        __result__ = __this__.getPoints();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getWidth_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getWidth();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getColor_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getColor();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getZIndex_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getZIndex();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getIndoorInfo_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.IndoorInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.IndoorInfo __result__ = null;
                    try {
                        __result__ = __this__.getIndoorInfo();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::isVisible_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isVisible();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::isArrow_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isArrow();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::isAbovePillar_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isAbovePillar();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getAlpha_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getAlpha();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getLineCap_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.getLineCap();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getAnimation_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.Animation> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.Animation __result__ = null;
                    try {
                        __result__ = __this__.getAnimation();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getLineType_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getLineType();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::setLineType_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number lineType = (Number) ((Map<String, Object>) __args__).get("lineType");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.setLineType(lineType.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::lineType_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number lineType = (Number) ((Map<String, Object>) __args__).get("lineType");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.lineType(lineType.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::setColorTexture_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String strTextureName = (String) ((Map<String, Object>) __args__).get("strTextureName");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.setColorTexture(strTextureName);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::colorTexture_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor bitmapDescriptor = (com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor) ((Map<String, Object>) __args__).get("bitmapDescriptor");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.colorTexture(bitmapDescriptor);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getTextureName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getTextureName();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getColorTexture_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = __this__.getColorTexture();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::aboveMaskLayer_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean above = (boolean) ((Map<String, Object>) __args__).get("above");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.aboveMaskLayer(above);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::isAboveMaskLayer_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isAboveMaskLayer();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::road_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean isRoad = (boolean) ((Map<String, Object>) __args__).get("isRoad");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.road(isRoad);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::isRoad_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isRoad();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::level_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number level = (Number) ((Map<String, Object>) __args__).get("level");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.level(level.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getLevel_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getLevel();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::arrowTexture_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor arrowTexture = (com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor) ((Map<String, Object>) __args__).get("arrowTexture");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.arrowTexture(arrowTexture);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::arrowSpacing_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number arrowSpacing = (Number) ((Map<String, Object>) __args__).get("arrowSpacing");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.arrowSpacing(arrowSpacing.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::setDefaultArrowTexture_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String textureName = (String) ((Map<String, Object>) __args__).get("textureName");
            
                    // ref
            
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.setDefaultArrowTexture(textureName);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getsDefaultArrowTexture_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
            
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.getsDefaultArrowTexture();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getArrowTexture_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = __this__.getArrowTexture();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getArrowSpacing_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getArrowSpacing();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::clickable_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean clickable = (boolean) ((Map<String, Object>) __args__).get("clickable");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.clickable(clickable);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::isClickable_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isClickable();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getPattern_batch", (__argsBatch__, __methodResult__) -> {
                List<java.util.List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.util.List<Integer> __result__ = null;
                    try {
                        __result__ = __this__.getPattern();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::pattern_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.util.List<Integer> pattern = (java.util.List<Integer>) ((Map<String, Object>) __args__).get("pattern");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __result__ = null;
                    try {
                        __result__ = __this__.pattern(pattern);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getBorderWidth_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getBorderWidth();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions::getBorderColors_batch", (__argsBatch__, __methodResult__) -> {
                List<int[]> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    int[] __result__ = null;
                    try {
                        __result__ = __this__.getBorderColors();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.Tile::getData_batch", (__argsBatch__, __methodResult__) -> {
                List<byte[]> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.Tile __this__ = (com.tencent.tencentmap.mapsdk.maps.model.Tile) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    byte[] __result__ = null;
                    try {
                        __result__ = __this__.getData();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MapRouteSectionWithName::byteLength_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
            
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.MapRouteSectionWithName.byteLength();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MapRouteSectionWithName::toBytes_batch", (__argsBatch__, __methodResult__) -> {
                List<byte[]> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MapRouteSectionWithName __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MapRouteSectionWithName) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    byte[] __result__ = null;
                    try {
                        __result__ = __this__.toBytes();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.TileProvider::getTile_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.Tile> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
                    // ref arg
                    Number var3 = (Number) ((Map<String, Object>) __args__).get("var3");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.TileProvider __this__ = (com.tencent.tencentmap.mapsdk.maps.model.TileProvider) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.Tile __result__ = null;
                    try {
                        __result__ = __this__.getTile(var1.intValue(), var2.intValue(), var3.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::getBitmap_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = __this__.getBitmap();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::bitmap_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor bitmapDescriptor = (com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor) ((Map<String, Object>) __args__).get("bitmapDescriptor");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.bitmap(bitmapDescriptor);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::getLatLngBounds_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __result__ = null;
                    try {
                        __result__ = __this__.getLatLngBounds();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::latLngBounds_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds latLngBounds = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("latLngBounds");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.latLngBounds(latLngBounds);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::getPosition_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __result__ = null;
                    try {
                        __result__ = __this__.getPosition();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::position_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng position = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("position");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.position(position);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::getZoom_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getZoom();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::zoom_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number zoom = (Number) ((Map<String, Object>) __args__).get("zoom");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.zoom(zoom.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::getAnchorU_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getAnchorU();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::getAnchorV_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getAnchorV();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::anchor_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number anchorU = (Number) ((Map<String, Object>) __args__).get("anchorU");
                    // ref arg
                    Number anchorV = (Number) ((Map<String, Object>) __args__).get("anchorV");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.anchor(anchorU.floatValue(), anchorV.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::getAlpha_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getAlpha();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::alpha_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number alpha = (Number) ((Map<String, Object>) __args__).get("alpha");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.alpha(alpha.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::isVisible_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isVisible();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::visible_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean visible = (boolean) ((Map<String, Object>) __args__).get("visible");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.visible(visible);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::getZIndex_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getZIndex();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::zIndex_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number ZIndex = (Number) ((Map<String, Object>) __args__).get("ZIndex");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.zIndex(ZIndex.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::getLevel_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getLevel();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions::level_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number level = (Number) ((Map<String, Object>) __args__).get("level");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions __result__ = null;
                    try {
                        __result__ = __this__.level(level.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::fromLatLngZoom_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.CameraPosition> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng latlng = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("latlng");
                    // ref arg
                    Number zoomLevel = (Number) ((Map<String, Object>) __args__).get("zoomLevel");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.CameraPosition __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.CameraPosition.fromLatLngZoom(latlng, zoomLevel.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::builder_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.CameraPosition.Builder> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.CameraPosition.Builder __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.CameraPosition.builder();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::builder__com_tencent_tencentmap_mapsdk_maps_model_CameraPosition_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.CameraPosition.Builder> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.CameraPosition cameraposition = (com.tencent.tencentmap.mapsdk.maps.model.CameraPosition) ((Map<String, Object>) __args__).get("cameraposition");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.CameraPosition.Builder __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.CameraPosition.builder(cameraposition);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.AoiLayerOptions::setDisplayLevel_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.AoiLayerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number minLevel = (Number) ((Map<String, Object>) __args__).get("minLevel");
                    // ref arg
                    Number maxLevel = (Number) ((Map<String, Object>) __args__).get("maxLevel");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.AoiLayerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.AoiLayerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.AoiLayerOptions __result__ = null;
                    try {
                        __result__ = __this__.setDisplayLevel(minLevel.intValue(), maxLevel.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.AoiLayerOptions::getMinLevel_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.AoiLayerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.AoiLayerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getMinLevel();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.AoiLayerOptions::getMaxLevel_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.AoiLayerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.AoiLayerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getMaxLevel();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.IndoorMapPoi::getBuildingId_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.IndoorMapPoi __this__ = (com.tencent.tencentmap.mapsdk.maps.model.IndoorMapPoi) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getBuildingId();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.IndoorMapPoi::getBuildingName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.IndoorMapPoi __this__ = (com.tencent.tencentmap.mapsdk.maps.model.IndoorMapPoi) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getBuildingName();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.IndoorMapPoi::getFloorName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.IndoorMapPoi __this__ = (com.tencent.tencentmap.mapsdk.maps.model.IndoorMapPoi) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getFloorName();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::position_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng latlng = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("latlng");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.position(latlng);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::infoWindowEnable_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean enabled = (boolean) ((Map<String, Object>) __args__).get("enabled");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.infoWindowEnable(enabled);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::icon_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor icon = (com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor) ((Map<String, Object>) __args__).get("icon");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.icon(icon);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::anchor_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number anchorU = (Number) ((Map<String, Object>) __args__).get("anchorU");
                    // ref arg
                    Number anchorV = (Number) ((Map<String, Object>) __args__).get("anchorV");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.anchor(anchorU.floatValue(), anchorV.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::title_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String s = (String) ((Map<String, Object>) __args__).get("s");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.title(s);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::rotation_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number rotation = (Number) ((Map<String, Object>) __args__).get("rotation");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.rotation(rotation.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::snippet_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String snippet = (String) ((Map<String, Object>) __args__).get("snippet");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.snippet(snippet);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::draggable_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean flag = (boolean) ((Map<String, Object>) __args__).get("flag");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.draggable(flag);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::alpha_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number alpha = (Number) ((Map<String, Object>) __args__).get("alpha");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.alpha(alpha.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::visible_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean flag = (boolean) ((Map<String, Object>) __args__).get("flag");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.visible(flag);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::flat_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean flat = (boolean) ((Map<String, Object>) __args__).get("flat");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.flat(flat);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::zIndex_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number zIndex = (Number) ((Map<String, Object>) __args__).get("zIndex");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.zIndex(zIndex.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::indoorInfo_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.IndoorInfo indoorInfo = (com.tencent.tencentmap.mapsdk.maps.model.IndoorInfo) ((Map<String, Object>) __args__).get("indoorInfo");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.indoorInfo(indoorInfo);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::tag_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Object tag = (java.lang.Object) ((Map<String, Object>) __args__).get("tag");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.tag(tag);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::isAvoidAnnocation_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isAvoidAnnocation();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getPosition_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __result__ = null;
                    try {
                        __result__ = __this__.getPosition();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getTitle_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getTitle();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getSnippet_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getSnippet();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getIcon_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor __result__ = null;
                    try {
                        __result__ = __this__.getIcon();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getAnchorU_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getAnchorU();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getAnchorV_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getAnchorV();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::isDraggable_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isDraggable();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::isVisible_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isVisible();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::isInfoWindowEnable_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isInfoWindowEnable();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getAlpha_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getAlpha();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getZIndex_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getZIndex();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getIndoorInfo_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.IndoorInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.IndoorInfo __result__ = null;
                    try {
                        __result__ = __this__.getIndoorInfo();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::isFlat_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isFlat();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getRotation_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getRotation();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::clockwise_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean clockwise = (boolean) ((Map<String, Object>) __args__).get("clockwise");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.clockwise(clockwise);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::isClockwise_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isClockwise();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::infoWindowAnchor_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number u = (Number) ((Map<String, Object>) __args__).get("u");
                    // ref arg
                    Number v = (Number) ((Map<String, Object>) __args__).get("v");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.infoWindowAnchor(u.floatValue(), v.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getInfoWindowAnchorU_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getInfoWindowAnchorU();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getInfoWindowAnchorV_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.getInfoWindowAnchorV();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::infoWindowOffset_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number offsetX = (Number) ((Map<String, Object>) __args__).get("offsetX");
                    // ref arg
                    Number offsetY = (Number) ((Map<String, Object>) __args__).get("offsetY");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.infoWindowOffset(offsetX.intValue(), offsetY.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getInfoWindowOffsetX_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getInfoWindowOffsetX();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getInfowindowOffsetY_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getInfowindowOffsetY();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getTag_batch", (__argsBatch__, __methodResult__) -> {
                List<java.lang.Object> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.lang.Object __result__ = null;
                    try {
                        __result__ = __this__.getTag();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::isFastLoad_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isFastLoad();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::fastLoad_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean fastLoad = (boolean) ((Map<String, Object>) __args__).get("fastLoad");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.fastLoad(fastLoad);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::contentDescription_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String contentDescription = (String) ((Map<String, Object>) __args__).get("contentDescription");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.contentDescription(contentDescription);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getContentDescription_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getContentDescription();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::level_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number level = (Number) ((Map<String, Object>) __args__).get("level");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.level(level.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::getLevel_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getLevel();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::viewInfoWindow_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean enabled = (boolean) ((Map<String, Object>) __args__).get("enabled");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __result__ = null;
                    try {
                        __result__ = __this__.viewInfoWindow(enabled);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions::isViewInfowindow_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions __this__ = (com.tencent.tencentmap.mapsdk.maps.model.MarkerOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isViewInfowindow();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.IAnimationSet::addAnimation_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.Animation var1 = (com.tencent.tencentmap.mapsdk.maps.model.Animation) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.IAnimationSet __this__ = (com.tencent.tencentmap.mapsdk.maps.model.IAnimationSet) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.addAnimation(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.IAnimationSet::cleanAnimation_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.IAnimationSet __this__ = (com.tencent.tencentmap.mapsdk.maps.model.IAnimationSet) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.cleanAnimation();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder::addSegmentText_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.SegmentText segmentText = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.SegmentText) ((Map<String, Object>) __args__).get("segmentText");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder __result__ = null;
                    try {
                        __result__ = __this__.addSegmentText(segmentText);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder::addAllSegmentText_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.util.List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.SegmentText> segmentTexts = (java.util.List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.SegmentText>) ((Map<String, Object>) __args__).get("segmentTexts");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder __result__ = null;
                    try {
                        __result__ = __this__.addAllSegmentText(segmentTexts);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder::color_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number color = (Number) ((Map<String, Object>) __args__).get("color");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder __result__ = null;
                    try {
                        __result__ = __this__.color(color.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder::strokeColor_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number color = (Number) ((Map<String, Object>) __args__).get("color");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder __result__ = null;
                    try {
                        __result__ = __this__.strokeColor(color.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder::size_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number size = (Number) ((Map<String, Object>) __args__).get("size");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder __result__ = null;
                    try {
                        __result__ = __this__.size(size.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder::priority_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.TextPriority priority = com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.TextPriority.values()[(int) ((Map<String, Object>) __args__).get("priority")];
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder __this__ = (com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.Text.Builder __result__ = null;
                    try {
                        __result__ = __this__.priority(priority);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::world_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds.world();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::builder_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds.Builder> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds.Builder __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds.builder();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::including_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng latlng = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("latlng");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __result__ = null;
                    try {
                        __result__ = __this__.including(latlng);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::getCenter_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __result__ = null;
                    try {
                        __result__ = __this__.getCenter();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::getLatNorth_batch", (__argsBatch__, __methodResult__) -> {
                List<Double> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Double __result__ = null;
                    try {
                        __result__ = __this__.getLatNorth();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::getLatSouth_batch", (__argsBatch__, __methodResult__) -> {
                List<Double> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Double __result__ = null;
                    try {
                        __result__ = __this__.getLatSouth();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::getLonEast_batch", (__argsBatch__, __methodResult__) -> {
                List<Double> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Double __result__ = null;
                    try {
                        __result__ = __this__.getLonEast();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::getLonWest_batch", (__argsBatch__, __methodResult__) -> {
                List<Double> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Double __result__ = null;
                    try {
                        __result__ = __this__.getLonWest();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::getSouthWest_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __result__ = null;
                    try {
                        __result__ = __this__.getSouthWest();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::getNorthEast_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __result__ = null;
                    try {
                        __result__ = __this__.getNorthEast();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::getSouthEast_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __result__ = null;
                    try {
                        __result__ = __this__.getSouthEast();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::getNorthWest_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __result__ = null;
                    try {
                        __result__ = __this__.getNorthWest();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::getSpan_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngSpan __result__ = null;
                    try {
                        __result__ = __this__.getSpan();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::getLatitudeSpan_batch", (__argsBatch__, __methodResult__) -> {
                List<Double> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Double __result__ = null;
                    try {
                        __result__ = __this__.getLatitudeSpan();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::getLongitudeSpan_batch", (__argsBatch__, __methodResult__) -> {
                List<Double> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Double __result__ = null;
                    try {
                        __result__ = __this__.getLongitudeSpan();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::isEmptySpan_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isEmptySpan();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::from__double__double__double__double_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number latNorth = (Number) ((Map<String, Object>) __args__).get("latNorth");
                    // ref arg
                    Number lonEast = (Number) ((Map<String, Object>) __args__).get("lonEast");
                    // ref arg
                    Number latSouth = (Number) ((Map<String, Object>) __args__).get("latSouth");
                    // ref arg
                    Number lonWest = (Number) ((Map<String, Object>) __args__).get("lonWest");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds.from(latNorth.doubleValue(), lonEast.doubleValue(), latSouth.doubleValue(), lonWest.doubleValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::from__int__int__int_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number z = (Number) ((Map<String, Object>) __args__).get("z");
                    // ref arg
                    Number x = (Number) ((Map<String, Object>) __args__).get("x");
                    // ref arg
                    Number y = (Number) ((Map<String, Object>) __args__).get("y");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __result__ = null;
                    try {
                        __result__ = com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds.from(z.intValue(), x.intValue(), y.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::include_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng latLng = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("latLng");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __result__ = null;
                    try {
                        __result__ = __this__.include(latLng);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::contains__com_tencent_tencentmap_mapsdk_maps_model_LatLng_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng latLng = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("latLng");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.contains(latLng);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::contains__com_tencent_tencentmap_mapsdk_maps_model_LatLngBounds_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds other = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("other");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.contains(other);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::union__com_tencent_tencentmap_mapsdk_maps_model_LatLngBounds_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds bounds = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("bounds");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __result__ = null;
                    try {
                        __result__ = __this__.union(bounds);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::union__double__double__double__double_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number northLat = (Number) ((Map<String, Object>) __args__).get("northLat");
                    // ref arg
                    Number eastLon = (Number) ((Map<String, Object>) __args__).get("eastLon");
                    // ref arg
                    Number southLat = (Number) ((Map<String, Object>) __args__).get("southLat");
                    // ref arg
                    Number westLon = (Number) ((Map<String, Object>) __args__).get("westLon");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __result__ = null;
                    try {
                        __result__ = __this__.union(northLat.doubleValue(), eastLon.doubleValue(), southLat.doubleValue(), westLon.doubleValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::intersect__com_tencent_tencentmap_mapsdk_maps_model_LatLngBounds_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds box = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("box");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __result__ = null;
                    try {
                        __result__ = __this__.intersect(box);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds::intersect__double__double__double__double_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number northLat = (Number) ((Map<String, Object>) __args__).get("northLat");
                    // ref arg
                    Number eastLon = (Number) ((Map<String, Object>) __args__).get("eastLon");
                    // ref arg
                    Number southLat = (Number) ((Map<String, Object>) __args__).get("southLat");
                    // ref arg
                    Number westLon = (Number) ((Map<String, Object>) __args__).get("westLon");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds __result__ = null;
                    try {
                        __result__ = __this__.intersect(northLat.doubleValue(), eastLon.doubleValue(), southLat.doubleValue(), westLon.doubleValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLng::setLatitude_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number latitude = (Number) ((Map<String, Object>) __args__).get("latitude");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setLatitude(latitude.doubleValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLng::getLatitude_batch", (__argsBatch__, __methodResult__) -> {
                List<Double> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Double __result__ = null;
                    try {
                        __result__ = __this__.getLatitude();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLng::setLongitude_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number longitude = (Number) ((Map<String, Object>) __args__).get("longitude");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setLongitude(longitude.doubleValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLng::getLongitude_batch", (__argsBatch__, __methodResult__) -> {
                List<Double> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Double __result__ = null;
                    try {
                        __result__ = __this__.getLongitude();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.tencentmap.mapsdk.maps.model.LatLng::setAltitude_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number altitude = (Number) ((Map<String, Object>) __args__).get("altitude");
            
                    // ref
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __this__ = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setAltitude(altitude.doubleValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
        }};
    }
}
