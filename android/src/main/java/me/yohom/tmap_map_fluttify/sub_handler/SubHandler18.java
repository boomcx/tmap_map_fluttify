//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.tmap_map_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.common.StandardMethodCodec;
import io.flutter.plugin.platform.PlatformViewRegistry;

import me.yohom.tmap_map_fluttify.TmapMapFluttifyPlugin.Handler;
import me.yohom.foundation_fluttify.core.FluttifyMessageCodec;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler18 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // method
            put("com.tencent.map.lib.JNIInterface::nativeRemoveGLVisualizationOverlay_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var3 = (Number) ((Map<String, Object>) __args__).get("var3");
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.nativeRemoveGLVisualizationOverlay(var1.longValue(), var3.longValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::nativeGetAggregationUnit_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.VectorHeatAggregationUnit> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var3 = (Number) ((Map<String, Object>) __args__).get("var3");
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng var5 = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("var5");
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.VectorHeatAggregationUnit __result__ = null;
                    try {
                        __result__ = __this__.nativeGetAggregationUnit(var1.longValue(), var3.longValue(), var5);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::nativeAddIntersectionOverlay_batch", (__argsBatch__, __methodResult__) -> {
                List<Long> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    com.tencent.map.lib.models.IntersectionOverlayInfo var3 = (com.tencent.map.lib.models.IntersectionOverlayInfo) ((Map<String, Object>) __args__).get("var3");
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Long __result__ = null;
                    try {
                        __result__ = __this__.nativeAddIntersectionOverlay(var1.longValue(), var3);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::nativeUpdateIntersectionOverlay_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    com.tencent.map.lib.models.IntersectionOverlayInfo var3 = (com.tencent.map.lib.models.IntersectionOverlayInfo) ((Map<String, Object>) __args__).get("var3");
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.nativeUpdateIntersectionOverlay(var1.longValue(), var3);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::nativeSetTrafficStyle_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.TrafficStyle var3 = (com.tencent.tencentmap.mapsdk.maps.model.TrafficStyle) ((Map<String, Object>) __args__).get("var3");
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.nativeSetTrafficStyle(var1.longValue(), var3);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::getIndoorOutlineZoom_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    String var3 = (String) ((Map<String, Object>) __args__).get("var3");
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getIndoorOutlineZoom(var1.longValue(), var3);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::getMapEngineRenderStatus_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getMapEngineRenderStatus(var1.longValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::checkMapLoadFinishedTask_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var3 = (Number) ((Map<String, Object>) __args__).get("var3");
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.checkMapLoadFinishedTask(var1.longValue(), var3.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::setRestrictBounds_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    double[] var3 = (double[]) ((Map<String, Object>) __args__).get("var3");
                    // ref arg
                    double[] var4 = (double[]) ((Map<String, Object>) __args__).get("var4");
                    // ref arg
                    Number var5 = (Number) ((Map<String, Object>) __args__).get("var5");
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setRestrictBounds(var1.longValue(), var3, var4, var5.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::removeLineText_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var3 = (Number) ((Map<String, Object>) __args__).get("var3");
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.removeLineText(var1.longValue(), var3.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::nativeGLProjectMatrix_batch", (__argsBatch__, __methodResult__) -> {
                List<float[]> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    float[] __result__ = null;
                    try {
                        __result__ = __this__.nativeGLProjectMatrix();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::nativeGLViewMatrix_batch", (__argsBatch__, __methodResult__) -> {
                List<double[]> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    double[] __result__ = null;
                    try {
                        __result__ = __this__.nativeGLViewMatrix();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::nativeGLViewScaleRatio_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Float __result__ = null;
                    try {
                        __result__ = __this__.nativeGLViewScaleRatio();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::nativeGLViewport_batch", (__argsBatch__, __methodResult__) -> {
                List<int[]> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    int[] __result__ = null;
                    try {
                        __result__ = __this__.nativeGLViewport();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterface::nativeSetIndoorConfigType_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var3 = (Number) ((Map<String, Object>) __args__).get("var3");
            
                    // ref
                    com.tencent.map.lib.JNIInterface __this__ = (com.tencent.map.lib.JNIInterface) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.nativeSetIndoorConfigType(var1.longValue(), var3.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterfaceCallback::callback_batch", (__argsBatch__, __methodResult__) -> {
                List<java.lang.Object> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                    // ref arg
                    Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
                    // ref arg
                    String var3 = (String) ((Map<String, Object>) __args__).get("var3");
                    // ref arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) __args__).get("var4");
                    // ref arg
                    java.lang.Object var5 = (java.lang.Object) ((Map<String, Object>) __args__).get("var5");
            
                    // ref
                    com.tencent.map.lib.JNIInterfaceCallback __this__ = (com.tencent.map.lib.JNIInterfaceCallback) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.lang.Object __result__ = null;
                    try {
                        __result__ = __this__.callback(var1.intValue(), var2.intValue(), var3, var4, var5);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterfaceCallback::onMapLoaded_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.JNIInterfaceCallback __this__ = (com.tencent.map.lib.JNIInterfaceCallback) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onMapLoaded();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterfaceCallback::onMapCameraChangeStopped_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.JNIInterfaceCallback __this__ = (com.tencent.map.lib.JNIInterfaceCallback) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onMapCameraChangeStopped();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterfaceCallback::onMapCameraChanged_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.JNIInterfaceCallback __this__ = (com.tencent.map.lib.JNIInterfaceCallback) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onMapCameraChanged();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterfaceCallback::callbackGetGLContext_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.JNIInterfaceCallback __this__ = (com.tencent.map.lib.JNIInterfaceCallback) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.callbackGetGLContext();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.JNIInterfaceCallback::onJniCallbackRenderMapFrame_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    com.tencent.map.lib.JNIInterfaceCallback __this__ = (com.tencent.map.lib.JNIInterfaceCallback) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.onJniCallbackRenderMapFrame(var1.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.DownloadPriority::get_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.DownloadPriority> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number value = (Number) ((Map<String, Object>) __args__).get("value");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.map.lib.models.DownloadPriority __result__ = null;
                    try {
                        __result__ = com.tencent.map.lib.models.DownloadPriority.get(value.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.DownloadPriority::getThreadPriority_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number priority = (Number) ((Map<String, Object>) __args__).get("priority");
            
                    // ref
            
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = com.tencent.map.lib.models.DownloadPriority.getThreadPriority(priority.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.DownloadPriority::getValue_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.DownloadPriority __this__ = (com.tencent.map.lib.models.DownloadPriority) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getValue();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MapExploreByTouchHelper::onTalkBackActivate_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.view.View view = (android.view.View) ((Map<String, Object>) __args__).get("view");
            
                    // ref
                    com.tencent.map.lib.models.MapExploreByTouchHelper __this__ = (com.tencent.map.lib.models.MapExploreByTouchHelper) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onTalkBackActivate(view);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MapExploreByTouchHelper::onTalkBackDeActivate_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.view.View view = (android.view.View) ((Map<String, Object>) __args__).get("view");
            
                    // ref
                    com.tencent.map.lib.models.MapExploreByTouchHelper __this__ = (com.tencent.map.lib.models.MapExploreByTouchHelper) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onTalkBackDeActivate(view);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.AccessibleTouchItem::getContentDescription_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.AccessibleTouchItem __this__ = (com.tencent.map.lib.models.AccessibleTouchItem) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getContentDescription();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.AccessibleTouchItem::onClick_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.AccessibleTouchItem __this__ = (com.tencent.map.lib.models.AccessibleTouchItem) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.onClick();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.AccessibleTouchItem::compareTo_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.map.lib.models.AccessibleTouchItem o = (com.tencent.map.lib.models.AccessibleTouchItem) ((Map<String, Object>) __args__).get("o");
            
                    // ref
                    com.tencent.map.lib.models.AccessibleTouchItem __this__ = (com.tencent.map.lib.models.AccessibleTouchItem) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.compareTo(o);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::position_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number latitude = (Number) ((Map<String, Object>) __args__).get("latitude");
                    // ref arg
                    Number longitude = (Number) ((Map<String, Object>) __args__).get("longitude");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.position(latitude.doubleValue(), longitude.doubleValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::iconName_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String iconName = (String) ((Map<String, Object>) __args__).get("iconName");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.iconName(iconName);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::type_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number type = (Number) ((Map<String, Object>) __args__).get("type");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.type(type.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::anchor_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number x = (Number) ((Map<String, Object>) __args__).get("x");
                    // ref arg
                    Number y = (Number) ((Map<String, Object>) __args__).get("y");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.anchor(x.floatValue(), y.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::rotation_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number rotation = (Number) ((Map<String, Object>) __args__).get("rotation");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.rotation(rotation.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::alpha_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number alpha = (Number) ((Map<String, Object>) __args__).get("alpha");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.alpha(alpha.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::scale_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number x = (Number) ((Map<String, Object>) __args__).get("x");
                    // ref arg
                    Number y = (Number) ((Map<String, Object>) __args__).get("y");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.scale(x.floatValue(), y.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::avoidAnnotation_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean avoidAnnotation = (boolean) ((Map<String, Object>) __args__).get("avoidAnnotation");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.avoidAnnotation(avoidAnnotation);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::interactive_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean interactive = (boolean) ((Map<String, Object>) __args__).get("interactive");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.interactive(interactive);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::displayLevel_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number level = (Number) ((Map<String, Object>) __args__).get("level");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.displayLevel(level.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::priority_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number priority = (Number) ((Map<String, Object>) __args__).get("priority");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.priority(priority.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::forceLoad_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean forceLoad = (boolean) ((Map<String, Object>) __args__).get("forceLoad");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.forceLoad(forceLoad);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::minScaleLevel_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number scaleLevel = (Number) ((Map<String, Object>) __args__).get("scaleLevel");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.minScaleLevel(scaleLevel.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::maxScaleLevel_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number scaleLevel = (Number) ((Map<String, Object>) __args__).get("scaleLevel");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.maxScaleLevel(scaleLevel.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::visible_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean visibility = (boolean) ((Map<String, Object>) __args__).get("visibility");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.visible(visibility);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::avoidOtherMarker_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean isAvoid = (boolean) ((Map<String, Object>) __args__).get("isAvoid");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.avoidOtherMarker(isAvoid);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::subMarkerInfo_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.map.lib.models.SubMarkerInfo subMarkerInfo = (com.tencent.map.lib.models.SubMarkerInfo) ((Map<String, Object>) __args__).get("subMarkerInfo");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.subMarkerInfo(subMarkerInfo);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::iconWidth_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number iconWidth = (Number) ((Map<String, Object>) __args__).get("iconWidth");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.iconWidth(iconWidth.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MarkerInfo::iconHeight_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.MarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number iconHeight = (Number) ((Map<String, Object>) __args__).get("iconHeight");
            
                    // ref
                    com.tencent.map.lib.models.MarkerInfo __this__ = (com.tencent.map.lib.models.MarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.MarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.iconHeight(iconHeight.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GeoPoint::from__com_tencent_tencentmap_mapsdk_maps_model_LatLng_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.GeoPoint> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng latLng = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("latLng");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.map.lib.models.GeoPoint __result__ = null;
                    try {
                        __result__ = com.tencent.map.lib.models.GeoPoint.from(latLng);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GeoPoint::from__List_com_tencent_tencentmap_mapsdk_maps_model_LatLng__batch", (__argsBatch__, __methodResult__) -> {
                List<java.util.List<com.tencent.map.lib.models.GeoPoint>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> latLngList = (java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng>) ((Map<String, Object>) __args__).get("latLngList");
            
                    // ref
            
            
                    // invoke native method
                    java.util.List<com.tencent.map.lib.models.GeoPoint> __result__ = null;
                    try {
                        __result__ = com.tencent.map.lib.models.GeoPoint.from(latLngList);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GeoPoint::getLatitudeE6_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.GeoPoint __this__ = (com.tencent.map.lib.models.GeoPoint) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getLatitudeE6();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GeoPoint::getLongitudeE6_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.GeoPoint __this__ = (com.tencent.map.lib.models.GeoPoint) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getLongitudeE6();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GeoPoint::setLatitudeE6_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number latitudeE6 = (Number) ((Map<String, Object>) __args__).get("latitudeE6");
            
                    // ref
                    com.tencent.map.lib.models.GeoPoint __this__ = (com.tencent.map.lib.models.GeoPoint) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setLatitudeE6(latitudeE6.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GeoPoint::setLongitudeE6_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number longitudeE6 = (Number) ((Map<String, Object>) __args__).get("longitudeE6");
            
                    // ref
                    com.tencent.map.lib.models.GeoPoint __this__ = (com.tencent.map.lib.models.GeoPoint) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setLongitudeE6(longitudeE6.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GeoPoint::setGeoPoint_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.map.lib.models.GeoPoint geoPoint = (com.tencent.map.lib.models.GeoPoint) ((Map<String, Object>) __args__).get("geoPoint");
            
                    // ref
                    com.tencent.map.lib.models.GeoPoint __this__ = (com.tencent.map.lib.models.GeoPoint) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setGeoPoint(geoPoint);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GeoPoint::formString_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.GeoPoint> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String string = (String) ((Map<String, Object>) __args__).get("string");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.map.lib.models.GeoPoint __result__ = null;
                    try {
                        __result__ = com.tencent.map.lib.models.GeoPoint.formString(string);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GeoPoint::toLatLng_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.GeoPoint __this__ = (com.tencent.map.lib.models.GeoPoint) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __result__ = null;
                    try {
                        __result__ = __this__.toLatLng();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GeoPoint::toPoint_batch", (__argsBatch__, __methodResult__) -> {
                List<android.graphics.Point> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.GeoPoint __this__ = (com.tencent.map.lib.models.GeoPoint) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    android.graphics.Point __result__ = null;
                    try {
                        __result__ = __this__.toPoint();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MapTileID::getX_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.MapTileID __this__ = (com.tencent.map.lib.models.MapTileID) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getX();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MapTileID::getY_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.MapTileID __this__ = (com.tencent.map.lib.models.MapTileID) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getY();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MapTileID::getZ_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.MapTileID __this__ = (com.tencent.map.lib.models.MapTileID) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getZ();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MapTileID::getUrl_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.MapTileID __this__ = (com.tencent.map.lib.models.MapTileID) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getUrl();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MapTileID::getPriority_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.DownloadPriority> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.MapTileID __this__ = (com.tencent.map.lib.models.MapTileID) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.DownloadPriority __result__ = null;
                    try {
                        __result__ = __this__.getPriority();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MapTileID::getDataSource_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.DataSource> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.MapTileID __this__ = (com.tencent.map.lib.models.MapTileID) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.DataSource __result__ = null;
                    try {
                        __result__ = __this__.getDataSource();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.MapTileID::getTileTag_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.MapTileID __this__ = (com.tencent.map.lib.models.MapTileID) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getTileTag();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.SubMarkerInfo::iconName_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.SubMarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String iconName = (String) ((Map<String, Object>) __args__).get("iconName");
            
                    // ref
                    com.tencent.map.lib.models.SubMarkerInfo __this__ = (com.tencent.map.lib.models.SubMarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.SubMarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.iconName(iconName);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.SubMarkerInfo::iconWidth_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.SubMarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number iconWidth = (Number) ((Map<String, Object>) __args__).get("iconWidth");
            
                    // ref
                    com.tencent.map.lib.models.SubMarkerInfo __this__ = (com.tencent.map.lib.models.SubMarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.SubMarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.iconWidth(iconWidth.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.SubMarkerInfo::iconHeight_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.SubMarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number iconHeight = (Number) ((Map<String, Object>) __args__).get("iconHeight");
            
                    // ref
                    com.tencent.map.lib.models.SubMarkerInfo __this__ = (com.tencent.map.lib.models.SubMarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.SubMarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.iconHeight(iconHeight.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.SubMarkerInfo::interactive_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.SubMarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean interactive = (boolean) ((Map<String, Object>) __args__).get("interactive");
            
                    // ref
                    com.tencent.map.lib.models.SubMarkerInfo __this__ = (com.tencent.map.lib.models.SubMarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.SubMarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.interactive(interactive);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.SubMarkerInfo::avoidAnnotation_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.SubMarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean avoidAnnotation = (boolean) ((Map<String, Object>) __args__).get("avoidAnnotation");
            
                    // ref
                    com.tencent.map.lib.models.SubMarkerInfo __this__ = (com.tencent.map.lib.models.SubMarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.SubMarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.avoidAnnotation(avoidAnnotation);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.SubMarkerInfo::avoidOtherMarker_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.SubMarkerInfo> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean avoidOtherMarker = (boolean) ((Map<String, Object>) __args__).get("avoidOtherMarker");
            
                    // ref
                    com.tencent.map.lib.models.SubMarkerInfo __this__ = (com.tencent.map.lib.models.SubMarkerInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.map.lib.models.SubMarkerInfo __result__ = null;
                    try {
                        __result__ = __this__.avoidOtherMarker(avoidOtherMarker);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GroundOverlayInfo::setBitmap_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    android.graphics.Bitmap bitmap = (android.graphics.Bitmap) ((Map<String, Object>) __args__).get("bitmap");
            
                    // ref
                    com.tencent.map.lib.models.GroundOverlayInfo __this__ = (com.tencent.map.lib.models.GroundOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setBitmap(bitmap);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GroundOverlayInfo::setLatLngBounds_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds latLngBounds = (com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds) ((Map<String, Object>) __args__).get("latLngBounds");
            
                    // ref
                    com.tencent.map.lib.models.GroundOverlayInfo __this__ = (com.tencent.map.lib.models.GroundOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setLatLngBounds(latLngBounds);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GroundOverlayInfo::setAlpha_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number alpha = (Number) ((Map<String, Object>) __args__).get("alpha");
            
                    // ref
                    com.tencent.map.lib.models.GroundOverlayInfo __this__ = (com.tencent.map.lib.models.GroundOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setAlpha(alpha.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GroundOverlayInfo::setVisibility_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean visibility = (boolean) ((Map<String, Object>) __args__).get("visibility");
            
                    // ref
                    com.tencent.map.lib.models.GroundOverlayInfo __this__ = (com.tencent.map.lib.models.GroundOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setVisibility(visibility);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GroundOverlayInfo::setZIndex_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number ZIndex = (Number) ((Map<String, Object>) __args__).get("ZIndex");
            
                    // ref
                    com.tencent.map.lib.models.GroundOverlayInfo __this__ = (com.tencent.map.lib.models.GroundOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setZIndex(ZIndex.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.GroundOverlayInfo::setLevel_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number level = (Number) ((Map<String, Object>) __args__).get("level");
            
                    // ref
                    com.tencent.map.lib.models.GroundOverlayInfo __this__ = (com.tencent.map.lib.models.GroundOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setLevel(level.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.IntersectionOverlayInfo::setData_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    byte[] data = (byte[]) ((Map<String, Object>) __args__).get("data");
            
                    // ref
                    com.tencent.map.lib.models.IntersectionOverlayInfo __this__ = (com.tencent.map.lib.models.IntersectionOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setData(data);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.IntersectionOverlayInfo::setVisibility_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean visibility = (boolean) ((Map<String, Object>) __args__).get("visibility");
            
                    // ref
                    com.tencent.map.lib.models.IntersectionOverlayInfo __this__ = (com.tencent.map.lib.models.IntersectionOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setVisibility(visibility);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.IntersectionOverlayInfo::setDistance_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number distance = (Number) ((Map<String, Object>) __args__).get("distance");
            
                    // ref
                    com.tencent.map.lib.models.IntersectionOverlayInfo __this__ = (com.tencent.map.lib.models.IntersectionOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setDistance(distance.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.IntersectionOverlayInfo::enableDarkMode_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean enable = (boolean) ((Map<String, Object>) __args__).get("enable");
            
                    // ref
                    com.tencent.map.lib.models.IntersectionOverlayInfo __this__ = (com.tencent.map.lib.models.IntersectionOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.enableDarkMode(enable);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.AggregationOverlayInfo::setType_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number type = (Number) ((Map<String, Object>) __args__).get("type");
            
                    // ref
                    com.tencent.map.lib.models.AggregationOverlayInfo __this__ = (com.tencent.map.lib.models.AggregationOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setType(type.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.AggregationOverlayInfo::setSize_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number size = (Number) ((Map<String, Object>) __args__).get("size");
            
                    // ref
                    com.tencent.map.lib.models.AggregationOverlayInfo __this__ = (com.tencent.map.lib.models.AggregationOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setSize(size.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.AggregationOverlayInfo::setGap_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number gap = (Number) ((Map<String, Object>) __args__).get("gap");
            
                    // ref
                    com.tencent.map.lib.models.AggregationOverlayInfo __this__ = (com.tencent.map.lib.models.AggregationOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setGap(gap.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.AggregationOverlayInfo::setOpacity_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number opacity = (Number) ((Map<String, Object>) __args__).get("opacity");
            
                    // ref
                    com.tencent.map.lib.models.AggregationOverlayInfo __this__ = (com.tencent.map.lib.models.AggregationOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setOpacity(opacity.floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.AggregationOverlayInfo::setVisibility_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean visibility = (boolean) ((Map<String, Object>) __args__).get("visibility");
            
                    // ref
                    com.tencent.map.lib.models.AggregationOverlayInfo __this__ = (com.tencent.map.lib.models.AggregationOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setVisibility(visibility);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.AggregationOverlayInfo::setMinZoom_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number minZoom = (Number) ((Map<String, Object>) __args__).get("minZoom");
            
                    // ref
                    com.tencent.map.lib.models.AggregationOverlayInfo __this__ = (com.tencent.map.lib.models.AggregationOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setMinZoom(minZoom.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.AggregationOverlayInfo::setMaxZoom_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number maxZoom = (Number) ((Map<String, Object>) __args__).get("maxZoom");
            
                    // ref
                    com.tencent.map.lib.models.AggregationOverlayInfo __this__ = (com.tencent.map.lib.models.AggregationOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setMaxZoom(maxZoom.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.AggregationOverlayInfo::setColors_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    int[] colors = (int[]) ((Map<String, Object>) __args__).get("colors");
            
                    // ref
                    com.tencent.map.lib.models.AggregationOverlayInfo __this__ = (com.tencent.map.lib.models.AggregationOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setColors(colors);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.AggregationOverlayInfo::setStartPoints_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    double[] startPoints = (double[]) ((Map<String, Object>) __args__).get("startPoints");
            
                    // ref
                    com.tencent.map.lib.models.AggregationOverlayInfo __this__ = (com.tencent.map.lib.models.AggregationOverlayInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setStartPoints(startPoints);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.DataSource::get_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.map.lib.models.DataSource> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number value = (Number) ((Map<String, Object>) __args__).get("value");
            
                    // ref
            
            
                    // invoke native method
                    com.tencent.map.lib.models.DataSource __result__ = null;
                    try {
                        __result__ = com.tencent.map.lib.models.DataSource.get(value.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.map.lib.models.DataSource::getValue_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.map.lib.models.DataSource __this__ = (com.tencent.map.lib.models.DataSource) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Integer __result__ = null;
                    try {
                        __result__ = __this__.getValue();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.deserializer.PolylineDeserializer::deserialize_batch", (__argsBatch__, __methodResult__) -> {
                List<java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Object model = (java.lang.Object) ((Map<String, Object>) __args__).get("model");
                    // ref arg
                    String key = (String) ((Map<String, Object>) __args__).get("key");
                    // ref arg
                    java.lang.Object json = (java.lang.Object) ((Map<String, Object>) __args__).get("json");
            
                    // ref
                    com.tencent.lbssearch.object.deserializer.PolylineDeserializer __this__ = (com.tencent.lbssearch.object.deserializer.PolylineDeserializer) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.util.List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> __result__ = null;
                    try {
                        __result__ = __this__.deserialize(model, key, json);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.deserializer.RoutePlanningStepDeserializer::deserialize_batch", (__argsBatch__, __methodResult__) -> {
                List<java.util.List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Object model = (java.lang.Object) ((Map<String, Object>) __args__).get("model");
                    // ref arg
                    String key = (String) ((Map<String, Object>) __args__).get("key");
                    // ref arg
                    java.lang.Object json = (java.lang.Object) ((Map<String, Object>) __args__).get("json");
            
                    // ref
                    com.tencent.lbssearch.object.deserializer.RoutePlanningStepDeserializer __this__ = (com.tencent.lbssearch.object.deserializer.RoutePlanningStepDeserializer) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    java.util.List<Integer> __result__ = null;
                    try {
                        __result__ = __this__.deserialize(model, key, json);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.deserializer.TransitResultLatLngBoundsDeserializer::deserialize_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.result.TransitResultObject.LatLngBounds> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Object model = (java.lang.Object) ((Map<String, Object>) __args__).get("model");
                    // ref arg
                    String key = (String) ((Map<String, Object>) __args__).get("key");
                    // ref arg
                    java.lang.Object json = (java.lang.Object) ((Map<String, Object>) __args__).get("json");
            
                    // ref
                    com.tencent.lbssearch.object.deserializer.TransitResultLatLngBoundsDeserializer __this__ = (com.tencent.lbssearch.object.deserializer.TransitResultLatLngBoundsDeserializer) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.result.TransitResultObject.LatLngBounds __result__ = null;
                    try {
                        __result__ = __this__.deserialize(model, key, json);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.deserializer.LatLngDeserializer::deserialize_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.tencentmap.mapsdk.maps.model.LatLng> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Object model = (java.lang.Object) ((Map<String, Object>) __args__).get("model");
                    // ref arg
                    String key = (String) ((Map<String, Object>) __args__).get("key");
                    // ref arg
                    java.lang.Object json = (java.lang.Object) ((Map<String, Object>) __args__).get("json");
            
                    // ref
                    com.tencent.lbssearch.object.deserializer.LatLngDeserializer __this__ = (com.tencent.lbssearch.object.deserializer.LatLngDeserializer) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng __result__ = null;
                    try {
                        __result__ = __this__.deserialize(model, key, json);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.deserializer.TransitResultSegmentDeserializer::deserialize_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.result.TransitResultObject.Segment> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Object model = (java.lang.Object) ((Map<String, Object>) __args__).get("model");
                    // ref arg
                    String key = (String) ((Map<String, Object>) __args__).get("key");
                    // ref arg
                    java.lang.Object json = (java.lang.Object) ((Map<String, Object>) __args__).get("json");
            
                    // ref
                    com.tencent.lbssearch.object.deserializer.TransitResultSegmentDeserializer __this__ = (com.tencent.lbssearch.object.deserializer.TransitResultSegmentDeserializer) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.result.TransitResultObject.Segment __result__ = null;
                    try {
                        __result__ = __this__.deserialize(model, key, json);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.RequestParams::put__String__String_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String key = (String) ((Map<String, Object>) __args__).get("key");
                    // ref arg
                    String value = (String) ((Map<String, Object>) __args__).get("value");
            
                    // ref
                    com.tencent.lbssearch.object.RequestParams __this__ = (com.tencent.lbssearch.object.RequestParams) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.put(key, value);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.RequestParams::put__String__Object_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String key = (String) ((Map<String, Object>) __args__).get("key");
                    // ref arg
                    java.lang.Object value = (java.lang.Object) ((Map<String, Object>) __args__).get("value");
            
                    // ref
                    com.tencent.lbssearch.object.RequestParams __this__ = (com.tencent.lbssearch.object.RequestParams) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.put(key, value);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.RequestParams::put__String__int_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String key = (String) ((Map<String, Object>) __args__).get("key");
                    // ref arg
                    Number value = (Number) ((Map<String, Object>) __args__).get("value");
            
                    // ref
                    com.tencent.lbssearch.object.RequestParams __this__ = (com.tencent.lbssearch.object.RequestParams) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.put(key, value.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.RequestParams::add_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String key = (String) ((Map<String, Object>) __args__).get("key");
                    // ref arg
                    String value = (String) ((Map<String, Object>) __args__).get("value");
            
                    // ref
                    com.tencent.lbssearch.object.RequestParams __this__ = (com.tencent.lbssearch.object.RequestParams) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.add(key, value);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.RequestParams::remove_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String key = (String) ((Map<String, Object>) __args__).get("key");
            
                    // ref
                    com.tencent.lbssearch.object.RequestParams __this__ = (com.tencent.lbssearch.object.RequestParams) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.remove(key);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.RequestParams::getParamString_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.lbssearch.object.RequestParams __this__ = (com.tencent.lbssearch.object.RequestParams) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getParamString();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam::fromTravel_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.lbssearch.object.param.DrivingParam.Travel travel = (com.tencent.lbssearch.object.param.DrivingParam.Travel) ((Map<String, Object>) __args__).get("travel");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam __this__ = (com.tencent.lbssearch.object.param.DrivingParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam __result__ = null;
                    try {
                        __result__ = __this__.fromTravel(travel);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam::fromPOI_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String fromPOI = (String) ((Map<String, Object>) __args__).get("fromPOI");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam __this__ = (com.tencent.lbssearch.object.param.DrivingParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam __result__ = null;
                    try {
                        __result__ = __this__.fromPOI(fromPOI);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam::toPOI_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String toPOI = (String) ((Map<String, Object>) __args__).get("toPOI");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam __this__ = (com.tencent.lbssearch.object.param.DrivingParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam __result__ = null;
                    try {
                        __result__ = __this__.toPOI(toPOI);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam::heading_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number heading = (Number) ((Map<String, Object>) __args__).get("heading");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam __this__ = (com.tencent.lbssearch.object.param.DrivingParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam __result__ = null;
                    try {
                        __result__ = __this__.heading(heading.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam::speed_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number speed = (Number) ((Map<String, Object>) __args__).get("speed");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam __this__ = (com.tencent.lbssearch.object.param.DrivingParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam __result__ = null;
                    try {
                        __result__ = __this__.speed(speed.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam::accuracy_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number accuracy = (Number) ((Map<String, Object>) __args__).get("accuracy");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam __this__ = (com.tencent.lbssearch.object.param.DrivingParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam __result__ = null;
                    try {
                        __result__ = __this__.accuracy(accuracy.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam::roadType_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.lbssearch.object.param.DrivingParam.RoadType roadType = com.tencent.lbssearch.object.param.DrivingParam.RoadType.values()[(int) ((Map<String, Object>) __args__).get("roadType")];
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam __this__ = (com.tencent.lbssearch.object.param.DrivingParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam __result__ = null;
                    try {
                        __result__ = __this__.roadType(roadType);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam::setMultyPlan_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean isMultyPlan = (boolean) ((Map<String, Object>) __args__).get("isMultyPlan");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam __this__ = (com.tencent.lbssearch.object.param.DrivingParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.setMultyPlan(isMultyPlan);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam::policy__com_tencent_lbssearch_object_param_DrivingParam_Policy__com_tencent_lbssearch_object_param_DrivingParam_Preference_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.lbssearch.object.param.DrivingParam.Policy policy = com.tencent.lbssearch.object.param.DrivingParam.Policy.values()[(int) ((Map<String, Object>) __args__).get("policy")];
                    // enum arg
                    com.tencent.lbssearch.object.param.DrivingParam.Preference preferences = com.tencent.lbssearch.object.param.DrivingParam.Preference.values()[(int) ((Map<String, Object>) __args__).get("preferences")];
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam __this__ = (com.tencent.lbssearch.object.param.DrivingParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam __result__ = null;
                    try {
                        __result__ = __this__.policy(policy, preferences);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam::policy__com_tencent_lbssearch_object_param_RoutePlanningParam_DrivingPolicy_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.lbssearch.object.param.RoutePlanningParam.DrivingPolicy policy = com.tencent.lbssearch.object.param.RoutePlanningParam.DrivingPolicy.values()[(int) ((Map<String, Object>) __args__).get("policy")];
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam __this__ = (com.tencent.lbssearch.object.param.DrivingParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam __result__ = null;
                    try {
                        __result__ = __this__.policy(policy);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam::addWayPoint_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng l = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("l");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam __this__ = (com.tencent.lbssearch.object.param.DrivingParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam __result__ = null;
                    try {
                        __result__ = __this__.addWayPoint(l);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam::addWayPoints_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    java.lang.Iterable<com.tencent.tencentmap.mapsdk.maps.model.LatLng> ls = (java.lang.Iterable<com.tencent.tencentmap.mapsdk.maps.model.LatLng>) ((Map<String, Object>) __args__).get("ls");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam __this__ = (com.tencent.lbssearch.object.param.DrivingParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam __result__ = null;
                    try {
                        __result__ = __this__.addWayPoints(ls);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam::setCarNumber_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String carNumber = (String) ((Map<String, Object>) __args__).get("carNumber");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam __this__ = (com.tencent.lbssearch.object.param.DrivingParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam __result__ = null;
                    try {
                        __result__ = __this__.setCarNumber(carNumber);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam.Region::poi_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam.Region> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String city = (String) ((Map<String, Object>) __args__).get("city");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam.Region __this__ = (com.tencent.lbssearch.object.param.SearchParam.Region) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam.Region __result__ = null;
                    try {
                        __result__ = __this__.poi(city);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam.Region::autoExtend_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam.Region> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean extend = (boolean) ((Map<String, Object>) __args__).get("extend");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam.Region __this__ = (com.tencent.lbssearch.object.param.SearchParam.Region) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam.Region __result__ = null;
                    try {
                        __result__ = __this__.autoExtend(extend);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam.Region::center_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam.Region> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng latLng = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("latLng");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam.Region __this__ = (com.tencent.lbssearch.object.param.SearchParam.Region) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam.Region __result__ = null;
                    try {
                        __result__ = __this__.center(latLng);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.RoutePlanningParam::from_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.RoutePlanningParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng from = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("from");
            
                    // ref
                    com.tencent.lbssearch.object.param.RoutePlanningParam __this__ = (com.tencent.lbssearch.object.param.RoutePlanningParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.RoutePlanningParam __result__ = null;
                    try {
                        __result__ = __this__.from(from);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.RoutePlanningParam::getUrl_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.lbssearch.object.param.RoutePlanningParam __this__ = (com.tencent.lbssearch.object.param.RoutePlanningParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    String __result__ = null;
                    try {
                        __result__ = __this__.getUrl();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam.Travel::addPoints_batch", (__argsBatch__, __methodResult__) -> {
                List<Void> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.lbssearch.object.param.DrivingParam.Travel.Point points = (com.tencent.lbssearch.object.param.DrivingParam.Travel.Point) ((Map<String, Object>) __args__).get("points");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam.Travel __this__ = (com.tencent.lbssearch.object.param.DrivingParam.Travel) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Void __result__ = null;
                    try {
                        __this__.addPoints(points);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.TransitParam::policy__com_tencent_lbssearch_object_param_RoutePlanningParam_TransitPolicy_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.TransitParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.lbssearch.object.param.RoutePlanningParam.TransitPolicy policy = com.tencent.lbssearch.object.param.RoutePlanningParam.TransitPolicy.values()[(int) ((Map<String, Object>) __args__).get("policy")];
            
                    // ref
                    com.tencent.lbssearch.object.param.TransitParam __this__ = (com.tencent.lbssearch.object.param.TransitParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.TransitParam __result__ = null;
                    try {
                        __result__ = __this__.policy(policy);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.TransitParam::policy__com_tencent_lbssearch_object_param_TransitParam_Policy__com_tencent_lbssearch_object_param_TransitParam_Preference_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.TransitParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.lbssearch.object.param.TransitParam.Policy policy = com.tencent.lbssearch.object.param.TransitParam.Policy.values()[(int) ((Map<String, Object>) __args__).get("policy")];
                    // enum arg
                    com.tencent.lbssearch.object.param.TransitParam.Preference preferences = com.tencent.lbssearch.object.param.TransitParam.Preference.values()[(int) ((Map<String, Object>) __args__).get("preferences")];
            
                    // ref
                    com.tencent.lbssearch.object.param.TransitParam __this__ = (com.tencent.lbssearch.object.param.TransitParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.TransitParam __result__ = null;
                    try {
                        __result__ = __this__.policy(policy, preferences);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.TransitParam::departureTime_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.TransitParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number departureTime = (Number) ((Map<String, Object>) __args__).get("departureTime");
            
                    // ref
                    com.tencent.lbssearch.object.param.TransitParam __this__ = (com.tencent.lbssearch.object.param.TransitParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.TransitParam __result__ = null;
                    try {
                        __result__ = __this__.departureTime(departureTime.longValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions::setAddressFormat_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String addressFormat = (String) ((Map<String, Object>) __args__).get("addressFormat");
            
                    // ref
                    com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions __this__ = (com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions __result__ = null;
                    try {
                        __result__ = __this__.setAddressFormat(addressFormat);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions::setRadius_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number radius = (Number) ((Map<String, Object>) __args__).get("radius");
            
                    // ref
                    com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions __this__ = (com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions __result__ = null;
                    try {
                        __result__ = __this__.setRadius(radius.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions::setPageSize_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number pageSize = (Number) ((Map<String, Object>) __args__).get("pageSize");
            
                    // ref
                    com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions __this__ = (com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions __result__ = null;
                    try {
                        __result__ = __this__.setPageSize(pageSize.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions::setPageIndex_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number pageIndex = (Number) ((Map<String, Object>) __args__).get("pageIndex");
            
                    // ref
                    com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions __this__ = (com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions __result__ = null;
                    try {
                        __result__ = __this__.setPageIndex(pageIndex.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions::setPolicy_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number policy = (Number) ((Map<String, Object>) __args__).get("policy");
            
                    // ref
                    com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions __this__ = (com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions __result__ = null;
                    try {
                        __result__ = __this__.setPolicy(policy.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions::setCategorys_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String category = (String) ((Map<String, Object>) __args__).get("category");
            
                    // ref
                    com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions __this__ = (com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions __result__ = null;
                    try {
                        __result__ = __this__.setCategorys(category);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SuggestionParam::keyword_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SuggestionParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String keyword = (String) ((Map<String, Object>) __args__).get("keyword");
            
                    // ref
                    com.tencent.lbssearch.object.param.SuggestionParam __this__ = (com.tencent.lbssearch.object.param.SuggestionParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SuggestionParam __result__ = null;
                    try {
                        __result__ = __this__.keyword(keyword);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SuggestionParam::region_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SuggestionParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String region = (String) ((Map<String, Object>) __args__).get("region");
            
                    // ref
                    com.tencent.lbssearch.object.param.SuggestionParam __this__ = (com.tencent.lbssearch.object.param.SuggestionParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SuggestionParam __result__ = null;
                    try {
                        __result__ = __this__.region(region);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SuggestionParam::filter_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SuggestionParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String values = (String) ((Map<String, Object>) __args__).get("values");
            
                    // ref
                    com.tencent.lbssearch.object.param.SuggestionParam __this__ = (com.tencent.lbssearch.object.param.SuggestionParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SuggestionParam __result__ = null;
                    try {
                        __result__ = __this__.filter(values);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SuggestionParam::regionFix_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SuggestionParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean enable = (boolean) ((Map<String, Object>) __args__).get("enable");
            
                    // ref
                    com.tencent.lbssearch.object.param.SuggestionParam __this__ = (com.tencent.lbssearch.object.param.SuggestionParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SuggestionParam __result__ = null;
                    try {
                        __result__ = __this__.regionFix(enable);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SuggestionParam::location_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SuggestionParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng location = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("location");
            
                    // ref
                    com.tencent.lbssearch.object.param.SuggestionParam __this__ = (com.tencent.lbssearch.object.param.SuggestionParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SuggestionParam __result__ = null;
                    try {
                        __result__ = __this__.location(location);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SuggestionParam::getSubPois_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SuggestionParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean enable = (boolean) ((Map<String, Object>) __args__).get("enable");
            
                    // ref
                    com.tencent.lbssearch.object.param.SuggestionParam __this__ = (com.tencent.lbssearch.object.param.SuggestionParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SuggestionParam __result__ = null;
                    try {
                        __result__ = __this__.getSubPois(enable);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SuggestionParam::addressFormat_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SuggestionParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.lbssearch.object.param.SuggestionParam.AddressFormat format = com.tencent.lbssearch.object.param.SuggestionParam.AddressFormat.values()[(int) ((Map<String, Object>) __args__).get("format")];
            
                    // ref
                    com.tencent.lbssearch.object.param.SuggestionParam __this__ = (com.tencent.lbssearch.object.param.SuggestionParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SuggestionParam __result__ = null;
                    try {
                        __result__ = __this__.addressFormat(format);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SuggestionParam::policy_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SuggestionParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.lbssearch.object.param.SuggestionParam.Policy policy = com.tencent.lbssearch.object.param.SuggestionParam.Policy.values()[(int) ((Map<String, Object>) __args__).get("policy")];
            
                    // ref
                    com.tencent.lbssearch.object.param.SuggestionParam __this__ = (com.tencent.lbssearch.object.param.SuggestionParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SuggestionParam __result__ = null;
                    try {
                        __result__ = __this__.policy(policy);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SuggestionParam::pageIndex_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SuggestionParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number page_index = (Number) ((Map<String, Object>) __args__).get("page_index");
            
                    // ref
                    com.tencent.lbssearch.object.param.SuggestionParam __this__ = (com.tencent.lbssearch.object.param.SuggestionParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SuggestionParam __result__ = null;
                    try {
                        __result__ = __this__.pageIndex(page_index.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SuggestionParam::pageSize_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SuggestionParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number pagesize = (Number) ((Map<String, Object>) __args__).get("pagesize");
            
                    // ref
                    com.tencent.lbssearch.object.param.SuggestionParam __this__ = (com.tencent.lbssearch.object.param.SuggestionParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SuggestionParam __result__ = null;
                    try {
                        __result__ = __this__.pageSize(pagesize.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.Address2GeoParam::address_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.Address2GeoParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String address = (String) ((Map<String, Object>) __args__).get("address");
            
                    // ref
                    com.tencent.lbssearch.object.param.Address2GeoParam __this__ = (com.tencent.lbssearch.object.param.Address2GeoParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.Address2GeoParam __result__ = null;
                    try {
                        __result__ = __this__.address(address);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.Address2GeoParam::region_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.Address2GeoParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String region = (String) ((Map<String, Object>) __args__).get("region");
            
                    // ref
                    com.tencent.lbssearch.object.param.Address2GeoParam __this__ = (com.tencent.lbssearch.object.param.Address2GeoParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.Address2GeoParam __result__ = null;
                    try {
                        __result__ = __this__.region(region);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DistrictSearchParam::keyword_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DistrictSearchParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String keyword = (String) ((Map<String, Object>) __args__).get("keyword");
            
                    // ref
                    com.tencent.lbssearch.object.param.DistrictSearchParam __this__ = (com.tencent.lbssearch.object.param.DistrictSearchParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DistrictSearchParam __result__ = null;
                    try {
                        __result__ = __this__.keyword(keyword);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.StreetViewParam::location_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.StreetViewParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng latLng = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("latLng");
            
                    // ref
                    com.tencent.lbssearch.object.param.StreetViewParam __this__ = (com.tencent.lbssearch.object.param.StreetViewParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.StreetViewParam __result__ = null;
                    try {
                        __result__ = __this__.location(latLng);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.StreetViewParam::poi_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.StreetViewParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String poi = (String) ((Map<String, Object>) __args__).get("poi");
            
                    // ref
                    com.tencent.lbssearch.object.param.StreetViewParam __this__ = (com.tencent.lbssearch.object.param.StreetViewParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.StreetViewParam __result__ = null;
                    try {
                        __result__ = __this__.poi(poi);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.StreetViewParam::radius_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.StreetViewParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number radius = (Number) ((Map<String, Object>) __args__).get("radius");
            
                    // ref
                    com.tencent.lbssearch.object.param.StreetViewParam __this__ = (com.tencent.lbssearch.object.param.StreetViewParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.StreetViewParam __result__ = null;
                    try {
                        __result__ = __this__.radius(radius.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.ParamObject::checkParams_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.lbssearch.object.param.ParamObject __this__ = (com.tencent.lbssearch.object.param.ParamObject) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.checkParams();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.ParamObject::buildParameters_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.RequestParams> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.lbssearch.object.param.ParamObject __this__ = (com.tencent.lbssearch.object.param.ParamObject) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.RequestParams __result__ = null;
                    try {
                        __result__ = __this__.buildParameters();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam.Nearby::point_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam.Nearby> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng point = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("point");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam.Nearby __this__ = (com.tencent.lbssearch.object.param.SearchParam.Nearby) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam.Nearby __result__ = null;
                    try {
                        __result__ = __this__.point(point);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam.Nearby::autoExtend_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam.Nearby> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean extend = (boolean) ((Map<String, Object>) __args__).get("extend");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam.Nearby __this__ = (com.tencent.lbssearch.object.param.SearchParam.Nearby) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam.Nearby __result__ = null;
                    try {
                        __result__ = __this__.autoExtend(extend);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam.Rectangle::point_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam.Rectangle> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng leftBottom = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("leftBottom");
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng rightTop = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("rightTop");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam.Rectangle __this__ = (com.tencent.lbssearch.object.param.SearchParam.Rectangle) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam.Rectangle __result__ = null;
                    try {
                        __result__ = __this__.point(leftBottom, rightTop);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.TranslateParam::addLocation_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.TranslateParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng latLng = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("latLng");
            
                    // ref
                    com.tencent.lbssearch.object.param.TranslateParam __this__ = (com.tencent.lbssearch.object.param.TranslateParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.TranslateParam __result__ = null;
                    try {
                        __result__ = __this__.addLocation(latLng);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.TranslateParam::locations_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.TranslateParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng latLngs = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("latLngs");
            
                    // ref
                    com.tencent.lbssearch.object.param.TranslateParam __this__ = (com.tencent.lbssearch.object.param.TranslateParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.TranslateParam __result__ = null;
                    try {
                        __result__ = __this__.locations(latLngs);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.TranslateParam::coordType_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.TranslateParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.lbssearch.object.param.TranslateParam.CoordType type = com.tencent.lbssearch.object.param.TranslateParam.CoordType.values()[(int) ((Map<String, Object>) __args__).get("type")];
            
                    // ref
                    com.tencent.lbssearch.object.param.TranslateParam __this__ = (com.tencent.lbssearch.object.param.TranslateParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.TranslateParam __result__ = null;
                    try {
                        __result__ = __this__.coordType(type);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.TranslateParam::coord_type_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.TranslateParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.lbssearch.object.param.CoordTypeEnum type = com.tencent.lbssearch.object.param.CoordTypeEnum.values()[(int) ((Map<String, Object>) __args__).get("type")];
            
                    // ref
                    com.tencent.lbssearch.object.param.TranslateParam __this__ = (com.tencent.lbssearch.object.param.TranslateParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.TranslateParam __result__ = null;
                    try {
                        __result__ = __this__.coord_type(type);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam::keyword_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String keyword = (String) ((Map<String, Object>) __args__).get("keyword");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam __this__ = (com.tencent.lbssearch.object.param.SearchParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam __result__ = null;
                    try {
                        __result__ = __this__.keyword(keyword);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam::filter_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    String values = (String) ((Map<String, Object>) __args__).get("values");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam __this__ = (com.tencent.lbssearch.object.param.SearchParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam __result__ = null;
                    try {
                        __result__ = __this__.filter(values);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam::orderby_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean asce = (boolean) ((Map<String, Object>) __args__).get("asce");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam __this__ = (com.tencent.lbssearch.object.param.SearchParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam __result__ = null;
                    try {
                        __result__ = __this__.orderby(asce);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam::pageSize_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number pagesize = (Number) ((Map<String, Object>) __args__).get("pagesize");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam __this__ = (com.tencent.lbssearch.object.param.SearchParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam __result__ = null;
                    try {
                        __result__ = __this__.pageSize(pagesize.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam::page_size_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number pagesize = (Number) ((Map<String, Object>) __args__).get("pagesize");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam __this__ = (com.tencent.lbssearch.object.param.SearchParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam __result__ = null;
                    try {
                        __result__ = __this__.page_size(pagesize.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam::pageIndex_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number page_index = (Number) ((Map<String, Object>) __args__).get("page_index");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam __this__ = (com.tencent.lbssearch.object.param.SearchParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam __result__ = null;
                    try {
                        __result__ = __this__.pageIndex(page_index.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam::page_index_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number page_index = (Number) ((Map<String, Object>) __args__).get("page_index");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam __this__ = (com.tencent.lbssearch.object.param.SearchParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam __result__ = null;
                    try {
                        __result__ = __this__.page_index(page_index.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.SearchParam::region_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.SearchParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.lbssearch.object.param.SearchParam.Region region = (com.tencent.lbssearch.object.param.SearchParam.Region) ((Map<String, Object>) __args__).get("region");
            
                    // ref
                    com.tencent.lbssearch.object.param.SearchParam __this__ = (com.tencent.lbssearch.object.param.SearchParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.SearchParam __result__ = null;
                    try {
                        __result__ = __this__.region(region);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam.Travel.Point::setSpeed_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam.Travel.Point> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number speed = (Number) ((Map<String, Object>) __args__).get("speed");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam.Travel.Point __this__ = (com.tencent.lbssearch.object.param.DrivingParam.Travel.Point) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam.Travel.Point __result__ = null;
                    try {
                        __result__ = __this__.setSpeed(speed.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam.Travel.Point::setAccuracy_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam.Travel.Point> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number accuracy = (Number) ((Map<String, Object>) __args__).get("accuracy");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam.Travel.Point __this__ = (com.tencent.lbssearch.object.param.DrivingParam.Travel.Point) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam.Travel.Point __result__ = null;
                    try {
                        __result__ = __this__.setAccuracy(accuracy.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam.Travel.Point::setDirectionOfCar_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam.Travel.Point> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number directionOfCar = (Number) ((Map<String, Object>) __args__).get("directionOfCar");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam.Travel.Point __this__ = (com.tencent.lbssearch.object.param.DrivingParam.Travel.Point) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam.Travel.Point __result__ = null;
                    try {
                        __result__ = __this__.setDirectionOfCar(directionOfCar.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam.Travel.Point::setDirectionOfDevice_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam.Travel.Point> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number directionOfDevice = (Number) ((Map<String, Object>) __args__).get("directionOfDevice");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam.Travel.Point __this__ = (com.tencent.lbssearch.object.param.DrivingParam.Travel.Point) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam.Travel.Point __result__ = null;
                    try {
                        __result__ = __this__.setDirectionOfDevice(directionOfDevice.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.DrivingParam.Travel.Point::setTime_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.DrivingParam.Travel.Point> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Number time = (Number) ((Map<String, Object>) __args__).get("time");
            
                    // ref
                    com.tencent.lbssearch.object.param.DrivingParam.Travel.Point __this__ = (com.tencent.lbssearch.object.param.DrivingParam.Travel.Point) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.DrivingParam.Travel.Point __result__ = null;
                    try {
                        __result__ = __this__.setTime(time.intValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.Geo2AddressParam::location_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.Geo2AddressParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.tencentmap.mapsdk.maps.model.LatLng latLng = (com.tencent.tencentmap.mapsdk.maps.model.LatLng) ((Map<String, Object>) __args__).get("latLng");
            
                    // ref
                    com.tencent.lbssearch.object.param.Geo2AddressParam __this__ = (com.tencent.lbssearch.object.param.Geo2AddressParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.Geo2AddressParam __result__ = null;
                    try {
                        __result__ = __this__.location(latLng);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.Geo2AddressParam::get_poi_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.Geo2AddressParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean isGetPoi = (boolean) ((Map<String, Object>) __args__).get("isGetPoi");
            
                    // ref
                    com.tencent.lbssearch.object.param.Geo2AddressParam __this__ = (com.tencent.lbssearch.object.param.Geo2AddressParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.Geo2AddressParam __result__ = null;
                    try {
                        __result__ = __this__.get_poi(isGetPoi);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.Geo2AddressParam::coord_type_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.Geo2AddressParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // enum arg
                    com.tencent.lbssearch.object.param.CoordTypeEnum coordTypeEnum = com.tencent.lbssearch.object.param.CoordTypeEnum.values()[(int) ((Map<String, Object>) __args__).get("coordTypeEnum")];
            
                    // ref
                    com.tencent.lbssearch.object.param.Geo2AddressParam __this__ = (com.tencent.lbssearch.object.param.Geo2AddressParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.Geo2AddressParam __result__ = null;
                    try {
                        __result__ = __this__.coord_type(coordTypeEnum);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.Geo2AddressParam::getPoi_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.Geo2AddressParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    boolean isGetPoi = (boolean) ((Map<String, Object>) __args__).get("isGetPoi");
            
                    // ref
                    com.tencent.lbssearch.object.param.Geo2AddressParam __this__ = (com.tencent.lbssearch.object.param.Geo2AddressParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.Geo2AddressParam __result__ = null;
                    try {
                        __result__ = __this__.getPoi(isGetPoi);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.object.param.Geo2AddressParam::setPoiOptions_batch", (__argsBatch__, __methodResult__) -> {
                List<com.tencent.lbssearch.object.param.Geo2AddressParam> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions poiOptions = (com.tencent.lbssearch.object.param.Geo2AddressParam.PoiOptions) ((Map<String, Object>) __args__).get("poiOptions");
            
                    // ref
                    com.tencent.lbssearch.object.param.Geo2AddressParam __this__ = (com.tencent.lbssearch.object.param.Geo2AddressParam) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    com.tencent.lbssearch.object.param.Geo2AddressParam __result__ = null;
                    try {
                        __result__ = __this__.setPoiOptions(poiOptions);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.tencent.lbssearch.httpresponse.BaseObject::isStatusOk_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    com.tencent.lbssearch.httpresponse.BaseObject __this__ = (com.tencent.lbssearch.httpresponse.BaseObject) ((Map<String, Object>) __args__).get("__this__");
            
                    // invoke native method
                    Boolean __result__ = null;
                    try {
                        __result__ = __this__.isStatusOk();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    __resultList__.add(__result__);
                }
            
                __methodResult__.success(__resultList__);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_net_NetResponse", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.net.NetResponse);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_net_NetManager", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.net.NetManager);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_CameraUpdateFactory", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_CameraUpdate", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.CameraUpdate);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_MaskLayerOptions", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.MaskLayerOptions);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_BitmapDescriptor", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptor);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_TrafficStyle", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.TrafficStyle);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_AnimationSet", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.AnimationSet);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_MyLocationStyle", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.MyLocationStyle);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_CamerParameter", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.CamerParameter);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_VisibleRegion", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.VisibleRegion);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_MapPoi", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.MapPoi);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_LatLngBounds_Builder", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.LatLngBounds.Builder);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_PolylineOptions_SegmentText", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions.SegmentText);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_BaseAnimation", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.BaseAnimation);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_BitmapDescriptorFactory", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.BitmapDescriptorFactory);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_UrlTileProvider", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.UrlTileProvider);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_RotateAnimation", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_TranslateAnimation", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.TranslateAnimation);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_VectorHeatOverlayOptions", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.VectorHeatOverlayOptions);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_PolylineOptions", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.PolylineOptions);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_Tile", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.Tile);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_MapRouteSectionWithName", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.MapRouteSectionWithName);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_GroundOverlayOptions", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.GroundOverlayOptions);
            });
            put("RefClass::isKindOfcom_tencent_tencentmap_mapsdk_maps_model_CameraPosition", (__args__, __methodResult__) -> {
                // 引用对象
                Object __this__ = ((Map<String, Object>) __args__).get("__this__");
            
                __methodResult__.success(__this__ instanceof com.tencent.tencentmap.mapsdk.maps.model.CameraPosition);
            });
        }};
    }
}
