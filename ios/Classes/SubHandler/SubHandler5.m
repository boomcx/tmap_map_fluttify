//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

#import "SubHandler5.h"
#import "FluttifyMessageCodec.h"

// Dart端一次方法调用所存在的栈, 只有当MethodChannel传递参数受限时, 再启用这个容器
extern NSMutableDictionary<NSString*, NSObject*>* STACK;
// Dart端随机存取对象的容器
extern NSMutableDictionary<NSNumber*, NSObject*>* HEAP;
// 日志打印开关
extern BOOL enableLog;

@implementation TmapMapFluttifyPlugin (SubHandler5)
- (NSDictionary<NSString*, Handler>*) getSubHandler5 {
    __weak __typeof(self)weakSelf = self;
    return @{
        @"QMSGeoCodeSearchOption::set_address": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSGeoCodeSearchOption::set_address");
            }
        
            // args
            // jsonable arg
            NSString* address = (NSString*) args[@"address"];
        
            // ref
            QMSGeoCodeSearchOption* ref = (QMSGeoCodeSearchOption*) args[@"__this__"];
        
            ref.address = address;
            methodResult(@"success");
        },
        
        @"QMSGeoCodeSearchOption::set_region": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSGeoCodeSearchOption::set_region");
            }
        
            // args
            // jsonable arg
            NSString* region = (NSString*) args[@"region"];
        
            // ref
            QMSGeoCodeSearchOption* ref = (QMSGeoCodeSearchOption*) args[@"__this__"];
        
            ref.region = region;
            methodResult(@"success");
        },
        
        @"QMSWalkingRouteSearchOption::set_from": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSWalkingRouteSearchOption::set_from");
            }
        
            // args
            // jsonable arg
            NSString* from = (NSString*) args[@"from"];
        
            // ref
            QMSWalkingRouteSearchOption* ref = (QMSWalkingRouteSearchOption*) args[@"__this__"];
        
            ref.from = from;
            methodResult(@"success");
        },
        
        @"QMSWalkingRouteSearchOption::set_to": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSWalkingRouteSearchOption::set_to");
            }
        
            // args
            // jsonable arg
            NSString* to = (NSString*) args[@"to"];
        
            // ref
            QMSWalkingRouteSearchOption* ref = (QMSWalkingRouteSearchOption*) args[@"__this__"];
        
            ref.to = to;
            methodResult(@"success");
        },
        
        @"QMSTrackPoint::set_coordinate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSTrackPoint::set_coordinate");
            }
        
            // args
            // struct arg
            NSValue* coordinateValue = (NSValue*) args[@"coordinate"];
            CLLocationCoordinate2D coordinate;
            [coordinateValue getValue:&coordinate];
        
            // ref
            QMSTrackPoint* ref = (QMSTrackPoint*) args[@"__this__"];
        
            ref.coordinate = coordinate;
            methodResult(@"success");
        },
        
        @"QMSTrackPoint::set_speed": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSTrackPoint::set_speed");
            }
        
            // args
            // jsonable arg
            double speed = [args[@"speed"] doubleValue];
        
            // ref
            QMSTrackPoint* ref = (QMSTrackPoint*) args[@"__this__"];
        
            ref.speed = speed;
            methodResult(@"success");
        },
        
        @"QMSTrackPoint::set_accuracy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSTrackPoint::set_accuracy");
            }
        
            // args
            // jsonable arg
            double accuracy = [args[@"accuracy"] doubleValue];
        
            // ref
            QMSTrackPoint* ref = (QMSTrackPoint*) args[@"__this__"];
        
            ref.accuracy = accuracy;
            methodResult(@"success");
        },
        
        @"QMSTrackPoint::set_course": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSTrackPoint::set_course");
            }
        
            // args
            // jsonable arg
            double course = [args[@"course"] doubleValue];
        
            // ref
            QMSTrackPoint* ref = (QMSTrackPoint*) args[@"__this__"];
        
            ref.course = course;
            methodResult(@"success");
        },
        
        @"QMSTrackPoint::set_heading": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSTrackPoint::set_heading");
            }
        
            // args
            // jsonable arg
            double heading = [args[@"heading"] doubleValue];
        
            // ref
            QMSTrackPoint* ref = (QMSTrackPoint*) args[@"__this__"];
        
            ref.heading = heading;
            methodResult(@"success");
        },
        
        @"QMSTrackPoint::set_time": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSTrackPoint::set_time");
            }
        
            // args
            // jsonable arg
            double time = [args[@"time"] doubleValue];
        
            // ref
            QMSTrackPoint* ref = (QMSTrackPoint*) args[@"__this__"];
        
            ref.time = time;
            methodResult(@"success");
        },
        
        @"QMSDrivingRouteSearchOption::set_from": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDrivingRouteSearchOption::set_from");
            }
        
            // args
            // jsonable arg
            NSString* from = (NSString*) args[@"from"];
        
            // ref
            QMSDrivingRouteSearchOption* ref = (QMSDrivingRouteSearchOption*) args[@"__this__"];
        
            ref.from = from;
            methodResult(@"success");
        },
        
        @"QMSDrivingRouteSearchOption::set_from_poi": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDrivingRouteSearchOption::set_from_poi");
            }
        
            // args
            // jsonable arg
            NSString* from_poi = (NSString*) args[@"from_poi"];
        
            // ref
            QMSDrivingRouteSearchOption* ref = (QMSDrivingRouteSearchOption*) args[@"__this__"];
        
            ref.from_poi = from_poi;
            methodResult(@"success");
        },
        
        @"QMSDrivingRouteSearchOption::set_from_track": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDrivingRouteSearchOption::set_from_track");
            }
        
            // args
            // jsonable arg
            NSString* from_track = (NSString*) args[@"from_track"];
        
            // ref
            QMSDrivingRouteSearchOption* ref = (QMSDrivingRouteSearchOption*) args[@"__this__"];
        
            ref.from_track = from_track;
            methodResult(@"success");
        },
        
        @"QMSDrivingRouteSearchOption::set_to": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDrivingRouteSearchOption::set_to");
            }
        
            // args
            // jsonable arg
            NSString* to = (NSString*) args[@"to"];
        
            // ref
            QMSDrivingRouteSearchOption* ref = (QMSDrivingRouteSearchOption*) args[@"__this__"];
        
            ref.to = to;
            methodResult(@"success");
        },
        
        @"QMSDrivingRouteSearchOption::set_to_poi": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDrivingRouteSearchOption::set_to_poi");
            }
        
            // args
            // jsonable arg
            NSString* to_poi = (NSString*) args[@"to_poi"];
        
            // ref
            QMSDrivingRouteSearchOption* ref = (QMSDrivingRouteSearchOption*) args[@"__this__"];
        
            ref.to_poi = to_poi;
            methodResult(@"success");
        },
        
        @"QMSDrivingRouteSearchOption::set_policy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDrivingRouteSearchOption::set_policy");
            }
        
            // args
            // jsonable arg
            NSString* policy = (NSString*) args[@"policy"];
        
            // ref
            QMSDrivingRouteSearchOption* ref = (QMSDrivingRouteSearchOption*) args[@"__this__"];
        
            ref.policy = policy;
            methodResult(@"success");
        },
        
        @"QMSDrivingRouteSearchOption::set_waypoints": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDrivingRouteSearchOption::set_waypoints");
            }
        
            // args
            // jsonable arg
            NSString* waypoints = (NSString*) args[@"waypoints"];
        
            // ref
            QMSDrivingRouteSearchOption* ref = (QMSDrivingRouteSearchOption*) args[@"__this__"];
        
            ref.waypoints = waypoints;
            methodResult(@"success");
        },
        
        @"QMSDrivingRouteSearchOption::set_heading": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDrivingRouteSearchOption::set_heading");
            }
        
            // args
            // jsonable arg
            NSNumber* heading = (NSNumber*) args[@"heading"];
        
            // ref
            QMSDrivingRouteSearchOption* ref = (QMSDrivingRouteSearchOption*) args[@"__this__"];
        
            ref.heading = heading;
            methodResult(@"success");
        },
        
        @"QMSDrivingRouteSearchOption::set_speed": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDrivingRouteSearchOption::set_speed");
            }
        
            // args
            // jsonable arg
            NSNumber* speed = (NSNumber*) args[@"speed"];
        
            // ref
            QMSDrivingRouteSearchOption* ref = (QMSDrivingRouteSearchOption*) args[@"__this__"];
        
            ref.speed = speed;
            methodResult(@"success");
        },
        
        @"QMSDrivingRouteSearchOption::set_accuracy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDrivingRouteSearchOption::set_accuracy");
            }
        
            // args
            // jsonable arg
            NSNumber* accuracy = (NSNumber*) args[@"accuracy"];
        
            // ref
            QMSDrivingRouteSearchOption* ref = (QMSDrivingRouteSearchOption*) args[@"__this__"];
        
            ref.accuracy = accuracy;
            methodResult(@"success");
        },
        
        @"QMSDrivingRouteSearchOption::set_plate_number": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDrivingRouteSearchOption::set_plate_number");
            }
        
            // args
            // jsonable arg
            NSString* plate_number = (NSString*) args[@"plate_number"];
        
            // ref
            QMSDrivingRouteSearchOption* ref = (QMSDrivingRouteSearchOption*) args[@"__this__"];
        
            ref.plate_number = plate_number;
            methodResult(@"success");
        },
        
        @"QMSBusingRouteSearchOption::set_from": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSBusingRouteSearchOption::set_from");
            }
        
            // args
            // jsonable arg
            NSString* from = (NSString*) args[@"from"];
        
            // ref
            QMSBusingRouteSearchOption* ref = (QMSBusingRouteSearchOption*) args[@"__this__"];
        
            ref.from = from;
            methodResult(@"success");
        },
        
        @"QMSBusingRouteSearchOption::set_to": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSBusingRouteSearchOption::set_to");
            }
        
            // args
            // jsonable arg
            NSString* to = (NSString*) args[@"to"];
        
            // ref
            QMSBusingRouteSearchOption* ref = (QMSBusingRouteSearchOption*) args[@"__this__"];
        
            ref.to = to;
            methodResult(@"success");
        },
        
        @"QMSBusingRouteSearchOption::set_policy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSBusingRouteSearchOption::set_policy");
            }
        
            // args
            // jsonable arg
            NSString* policy = (NSString*) args[@"policy"];
        
            // ref
            QMSBusingRouteSearchOption* ref = (QMSBusingRouteSearchOption*) args[@"__this__"];
        
            ref.policy = policy;
            methodResult(@"success");
        },
        
        @"QMSDistrictChildrenSearchOption::set_ID": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDistrictChildrenSearchOption::set_ID");
            }
        
            // args
            // jsonable arg
            NSString* ID = (NSString*) args[@"ID"];
        
            // ref
            QMSDistrictChildrenSearchOption* ref = (QMSDistrictChildrenSearchOption*) args[@"__this__"];
        
            ref.ID = ID;
            methodResult(@"success");
        },
        
        @"QMSDistrictSearchSearchOption::set_keyword": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDistrictSearchSearchOption::set_keyword");
            }
        
            // args
            // jsonable arg
            NSString* keyword = (NSString*) args[@"keyword"];
        
            // ref
            QMSDistrictSearchSearchOption* ref = (QMSDistrictSearchSearchOption*) args[@"__this__"];
        
            ref.keyword = keyword;
            methodResult(@"success");
        },
        
        @"QCircle::set_radius": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QCircle::set_radius");
            }
        
            // args
            // jsonable arg
            double radius = [args[@"radius"] doubleValue];
        
            // ref
            QCircle* ref = (QCircle*) args[@"__this__"];
        
            ref.radius = radius;
            methodResult(@"success");
        },
        
        @"QOverlayPathView::set_fillColor": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QOverlayPathView::set_fillColor");
            }
        
            // args
            // ref arg
            UIColor* fillColor = (UIColor*) (args[@"fillColor"] == [NSNull null] ? nil : args[@"fillColor"]);
        
            // ref
            QOverlayPathView* ref = (QOverlayPathView*) args[@"__this__"];
        
            ref.fillColor = fillColor;
            methodResult(@"success");
        },
        
        @"QOverlayPathView::set_strokeColor": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QOverlayPathView::set_strokeColor");
            }
        
            // args
            // ref arg
            UIColor* strokeColor = (UIColor*) (args[@"strokeColor"] == [NSNull null] ? nil : args[@"strokeColor"]);
        
            // ref
            QOverlayPathView* ref = (QOverlayPathView*) args[@"__this__"];
        
            ref.strokeColor = strokeColor;
            methodResult(@"success");
        },
        
        @"QOverlayPathView::set_lineWidth": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QOverlayPathView::set_lineWidth");
            }
        
            // args
            // jsonable arg
            CGFloat lineWidth = [args[@"lineWidth"] floatValue];
        
            // ref
            QOverlayPathView* ref = (QOverlayPathView*) args[@"__this__"];
        
            ref.lineWidth = lineWidth;
            methodResult(@"success");
        },
        
        @"QCustomLayer::set_layerID": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QCustomLayer::set_layerID");
            }
        
            // args
            // jsonable arg
            NSString* layerID = (NSString*) args[@"layerID"];
        
            // ref
            QCustomLayer* ref = (QCustomLayer*) args[@"__this__"];
        
            ref.layerID = layerID;
            methodResult(@"success");
        },
        
        @"QBasicMapViewLayer::set_centerCoordinate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QBasicMapViewLayer::set_centerCoordinate");
            }
        
            // args
            // struct arg
            NSValue* centerCoordinateValue = (NSValue*) args[@"centerCoordinate"];
            CGPoint centerCoordinate;
            [centerCoordinateValue getValue:&centerCoordinate];
        
            // ref
            QBasicMapViewLayer* ref = (QBasicMapViewLayer*) args[@"__this__"];
        
            ref.centerCoordinate = centerCoordinate;
            methodResult(@"success");
        },
        
        @"QBasicMapViewLayer::set_zoomLevel": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QBasicMapViewLayer::set_zoomLevel");
            }
        
            // args
            // jsonable arg
            CGFloat zoomLevel = [args[@"zoomLevel"] floatValue];
        
            // ref
            QBasicMapViewLayer* ref = (QBasicMapViewLayer*) args[@"__this__"];
        
            ref.zoomLevel = zoomLevel;
            methodResult(@"success");
        },
        
        @"QBasicMapViewLayer::set_rotation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QBasicMapViewLayer::set_rotation");
            }
        
            // args
            // jsonable arg
            CGFloat rotation = [args[@"rotation"] floatValue];
        
            // ref
            QBasicMapViewLayer* ref = (QBasicMapViewLayer*) args[@"__this__"];
        
            ref.rotation = rotation;
            methodResult(@"success");
        },
        
        @"QBasicMapViewLayer::set_overlooking": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QBasicMapViewLayer::set_overlooking");
            }
        
            // args
            // jsonable arg
            CGFloat overlooking = [args[@"overlooking"] floatValue];
        
            // ref
            QBasicMapViewLayer* ref = (QBasicMapViewLayer*) args[@"__this__"];
        
            ref.overlooking = overlooking;
            methodResult(@"success");
        },
        
        @"QTileOverlayView::set_zIndex": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTileOverlayView::set_zIndex");
            }
        
            // args
            // jsonable arg
            int zIndex = [args[@"zIndex"] intValue];
        
            // ref
            QTileOverlayView* ref = (QTileOverlayView*) args[@"__this__"];
        
            ref.zIndex = zIndex;
            methodResult(@"success");
        },
        
        @"QMapView::set_indoorPicker": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_indoorPicker");
            }
        
            // args
            // jsonable arg
            BOOL indoorPicker = [args[@"indoorPicker"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.indoorPicker = indoorPicker;
            methodResult(@"success");
        },
        
        @"QMapView::set_indoorPickerOffset": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_indoorPickerOffset");
            }
        
            // args
            // struct arg
            NSValue* indoorPickerOffsetValue = (NSValue*) args[@"indoorPickerOffset"];
            CGPoint indoorPickerOffset;
            [indoorPickerOffsetValue getValue:&indoorPickerOffset];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.indoorPickerOffset = indoorPickerOffset;
            methodResult(@"success");
        },
        
        @"QMapView::set_activeLevel": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_activeLevel");
            }
        
            // args
            // ref arg
            QIndoorLevel* activeLevel = (QIndoorLevel*) (args[@"activeLevel"] == [NSNull null] ? nil : args[@"activeLevel"]);
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.activeLevel = activeLevel;
            methodResult(@"success");
        },
        
        @"QSegmentStyle::set_startIndex": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QSegmentStyle::set_startIndex");
            }
        
            // args
            // jsonable arg
            int startIndex = [args[@"startIndex"] intValue];
        
            // ref
            QSegmentStyle* ref = (QSegmentStyle*) args[@"__this__"];
        
            ref.startIndex = startIndex;
            methodResult(@"success");
        },
        
        @"QSegmentStyle::set_endIndex": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QSegmentStyle::set_endIndex");
            }
        
            // args
            // jsonable arg
            int endIndex = [args[@"endIndex"] intValue];
        
            // ref
            QSegmentStyle* ref = (QSegmentStyle*) args[@"__this__"];
        
            ref.endIndex = endIndex;
            methodResult(@"success");
        },
        
        @"QSegmentStyle::set_colorImageIndex": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QSegmentStyle::set_colorImageIndex");
            }
        
            // args
            // jsonable arg
            int colorImageIndex = [args[@"colorImageIndex"] intValue];
        
            // ref
            QSegmentStyle* ref = (QSegmentStyle*) args[@"__this__"];
        
            ref.colorImageIndex = colorImageIndex;
            methodResult(@"success");
        },
        
        @"QSegmentColor::set_startIndex": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QSegmentColor::set_startIndex");
            }
        
            // args
            // jsonable arg
            int startIndex = [args[@"startIndex"] intValue];
        
            // ref
            QSegmentColor* ref = (QSegmentColor*) args[@"__this__"];
        
            ref.startIndex = startIndex;
            methodResult(@"success");
        },
        
        @"QSegmentColor::set_endIndex": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QSegmentColor::set_endIndex");
            }
        
            // args
            // jsonable arg
            int endIndex = [args[@"endIndex"] intValue];
        
            // ref
            QSegmentColor* ref = (QSegmentColor*) args[@"__this__"];
        
            ref.endIndex = endIndex;
            methodResult(@"success");
        },
        
        @"QSegmentColor::set_color": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QSegmentColor::set_color");
            }
        
            // args
            // ref arg
            UIColor* color = (UIColor*) (args[@"color"] == [NSNull null] ? nil : args[@"color"]);
        
            // ref
            QSegmentColor* ref = (QSegmentColor*) args[@"__this__"];
        
            ref.color = color;
            methodResult(@"success");
        },
        
        @"QSegmentColor::set_borderColor": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QSegmentColor::set_borderColor");
            }
        
            // args
            // ref arg
            UIColor* borderColor = (UIColor*) (args[@"borderColor"] == [NSNull null] ? nil : args[@"borderColor"]);
        
            // ref
            QSegmentColor* ref = (QSegmentColor*) args[@"__this__"];
        
            ref.borderColor = borderColor;
            methodResult(@"success");
        },
        
        @"QTexturePolylineView::set_drawType": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTexturePolylineView::set_drawType");
            }
        
            // args
            // enum arg
            QTextureLineDrawType drawType = (QTextureLineDrawType) [args[@"drawType"] integerValue];
        
            // ref
            QTexturePolylineView* ref = (QTexturePolylineView*) args[@"__this__"];
        
            ref.drawType = drawType;
            methodResult(@"success");
        },
        
        @"QTexturePolylineView::set_segmentColor": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTexturePolylineView::set_segmentColor");
            }
        
            // args
            // list arg
            NSArray<QSegmentColor*>* segmentColor = (NSArray<QSegmentColor*>*) args[@"segmentColor"];
        
            // ref
            QTexturePolylineView* ref = (QTexturePolylineView*) args[@"__this__"];
        
            ref.segmentColor = segmentColor;
            methodResult(@"success");
        },
        
        @"QTexturePolylineView::set_styleTextureImage": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTexturePolylineView::set_styleTextureImage");
            }
        
            // args
            // ref arg
            UIImage* styleTextureImage = (UIImage*) (args[@"styleTextureImage"] == [NSNull null] ? nil : args[@"styleTextureImage"]);
        
            // ref
            QTexturePolylineView* ref = (QTexturePolylineView*) args[@"__this__"];
        
            ref.styleTextureImage = styleTextureImage;
            methodResult(@"success");
        },
        
        @"QTexturePolylineView::set_segmentStyle": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTexturePolylineView::set_segmentStyle");
            }
        
            // args
            // list arg
            NSArray<QSegmentStyle*>* segmentStyle = (NSArray<QSegmentStyle*>*) args[@"segmentStyle"];
        
            // ref
            QTexturePolylineView* ref = (QTexturePolylineView*) args[@"__this__"];
        
            ref.segmentStyle = segmentStyle;
            methodResult(@"success");
        },
        
        @"QTexturePolylineView::set_drawSymbol": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTexturePolylineView::set_drawSymbol");
            }
        
            // args
            // jsonable arg
            BOOL drawSymbol = [args[@"drawSymbol"] boolValue];
        
            // ref
            QTexturePolylineView* ref = (QTexturePolylineView*) args[@"__this__"];
        
            ref.drawSymbol = drawSymbol;
            methodResult(@"success");
        },
        
        @"QTexturePolylineView::set_symbolImage": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTexturePolylineView::set_symbolImage");
            }
        
            // args
            // ref arg
            UIImage* symbolImage = (UIImage*) (args[@"symbolImage"] == [NSNull null] ? nil : args[@"symbolImage"]);
        
            // ref
            QTexturePolylineView* ref = (QTexturePolylineView*) args[@"__this__"];
        
            ref.symbolImage = symbolImage;
            methodResult(@"success");
        },
        
        @"QTexturePolylineView::set_symbolGap": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTexturePolylineView::set_symbolGap");
            }
        
            // args
            // jsonable arg
            CGFloat symbolGap = [args[@"symbolGap"] floatValue];
        
            // ref
            QTexturePolylineView* ref = (QTexturePolylineView*) args[@"__this__"];
        
            ref.symbolGap = symbolGap;
            methodResult(@"success");
        },
        
        @"QTexturePolylineView::set_eraseColor": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTexturePolylineView::set_eraseColor");
            }
        
            // args
            // ref arg
            UIColor* eraseColor = (UIColor*) (args[@"eraseColor"] == [NSNull null] ? nil : args[@"eraseColor"]);
        
            // ref
            QTexturePolylineView* ref = (QTexturePolylineView*) args[@"__this__"];
        
            ref.eraseColor = eraseColor;
            methodResult(@"success");
        },
        
        @"QTexturePolylineView::set_footprintStep": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTexturePolylineView::set_footprintStep");
            }
        
            // args
            // jsonable arg
            CGFloat footprintStep = [args[@"footprintStep"] floatValue];
        
            // ref
            QTexturePolylineView* ref = (QTexturePolylineView*) args[@"__this__"];
        
            ref.footprintStep = footprintStep;
            methodResult(@"success");
        },
        
        @"QPolylineView::set_borderWidth": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPolylineView::set_borderWidth");
            }
        
            // args
            // jsonable arg
            CGFloat borderWidth = [args[@"borderWidth"] floatValue];
        
            // ref
            QPolylineView* ref = (QPolylineView*) args[@"__this__"];
        
            ref.borderWidth = borderWidth;
            methodResult(@"success");
        },
        
        @"QPolylineView::set_borderColor": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPolylineView::set_borderColor");
            }
        
            // args
            // ref arg
            UIColor* borderColor = (UIColor*) (args[@"borderColor"] == [NSNull null] ? nil : args[@"borderColor"]);
        
            // ref
            QPolylineView* ref = (QPolylineView*) args[@"__this__"];
        
            ref.borderColor = borderColor;
            methodResult(@"success");
        },
        
        @"QPolylineView::set_lineDashPattern": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPolylineView::set_lineDashPattern");
            }
        
            // args
            // jsonable arg
            NSArray<NSNumber*>* lineDashPattern = (NSArray<NSNumber*>*) args[@"lineDashPattern"];
        
            // ref
            QPolylineView* ref = (QPolylineView*) args[@"__this__"];
        
            ref.lineDashPattern = lineDashPattern;
            methodResult(@"success");
        },
        
        @"QPolylineView::set_text": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPolylineView::set_text");
            }
        
            // args
            // ref arg
            QText* text = (QText*) (args[@"text"] == [NSNull null] ? nil : args[@"text"]);
        
            // ref
            QPolylineView* ref = (QPolylineView*) args[@"__this__"];
        
            ref.text = text;
            methodResult(@"success");
        },
        
        @"QHeatTileNode::set_coordinate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QHeatTileNode::set_coordinate");
            }
        
            // args
            // struct arg
            NSValue* coordinateValue = (NSValue*) args[@"coordinate"];
            CLLocationCoordinate2D coordinate;
            [coordinateValue getValue:&coordinate];
        
            // ref
            QHeatTileNode* ref = (QHeatTileNode*) args[@"__this__"];
        
            ref.coordinate = coordinate;
            methodResult(@"success");
        },
        
        @"QHeatTileNode::set_value": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QHeatTileNode::set_value");
            }
        
            // args
            // jsonable arg
            CGFloat value = [args[@"value"] floatValue];
        
            // ref
            QHeatTileNode* ref = (QHeatTileNode*) args[@"__this__"];
        
            ref.value = value;
            methodResult(@"success");
        },
        
        @"QMSSearchServices::set_apiKey": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSearchServices::set_apiKey");
            }
        
            // args
            // jsonable arg
            NSString* apiKey = (NSString*) args[@"apiKey"];
        
            // ref
            QMSSearchServices* ref = (QMSSearchServices*) args[@"__this__"];
        
            ref.apiKey = apiKey;
            methodResult(@"success");
        },
        
        @"QPolyline::set_indoorInfo": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPolyline::set_indoorInfo");
            }
        
            // args
            // ref arg
            QIndoorInfo* indoorInfo = (QIndoorInfo*) (args[@"indoorInfo"] == [NSNull null] ? nil : args[@"indoorInfo"]);
        
            // ref
            QPolyline* ref = (QPolyline*) args[@"__this__"];
        
            ref.indoorInfo = indoorInfo;
            methodResult(@"success");
        },
        
        @"QMapServices::set_APIKey": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapServices::set_APIKey");
            }
        
            // args
            // jsonable arg
            NSString* APIKey = (NSString*) args[@"APIKey"];
        
            // ref
            QMapServices* ref = (QMapServices*) args[@"__this__"];
        
            ref.APIKey = APIKey;
            methodResult(@"success");
        },
        
        @"QMapServices::set_userId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapServices::set_userId");
            }
        
            // args
            // jsonable arg
            NSString* userId = (NSString*) args[@"userId"];
        
            // ref
            QMapServices* ref = (QMapServices*) args[@"__this__"];
        
            ref.userId = userId;
            methodResult(@"success");
        },
        
        @"QMapConfig::set_mapFont": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapConfig::set_mapFont");
            }
        
            // args
            // jsonable arg
            NSString* mapFont = (NSString*) args[@"mapFont"];
        
            // ref
            QMapConfig* ref = (QMapConfig*) args[@"__this__"];
        
            ref.mapFont = mapFont;
            methodResult(@"success");
        },
        
        @"QAnimation::set_duration": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnimation::set_duration");
            }
        
            // args
            // jsonable arg
            CGFloat duration = [args[@"duration"] floatValue];
        
            // ref
            QAnimation* ref = (QAnimation*) args[@"__this__"];
        
            ref.duration = duration;
            methodResult(@"success");
        },
        
        @"QTexturePolylineView::set_emergeAnimation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTexturePolylineView::set_emergeAnimation");
            }
        
            // args
            // ref arg
            QAnimation* emergeAnimation = (QAnimation*) (args[@"emergeAnimation"] == [NSNull null] ? nil : args[@"emergeAnimation"]);
        
            // ref
            QTexturePolylineView* ref = (QTexturePolylineView*) args[@"__this__"];
        
            ref.emergeAnimation = emergeAnimation;
            methodResult(@"success");
        },
        
        @"QAnnotationViewLayer::set_coordinate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationViewLayer::set_coordinate");
            }
        
            // args
            // struct arg
            NSValue* coordinateValue = (NSValue*) args[@"coordinate"];
            CGPoint coordinate;
            [coordinateValue getValue:&coordinate];
        
            // ref
            QAnnotationViewLayer* ref = (QAnnotationViewLayer*) args[@"__this__"];
        
            ref.coordinate = coordinate;
            methodResult(@"success");
        },
        
        @"QUserLocationPresentation::set_icon": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QUserLocationPresentation::set_icon");
            }
        
            // args
            // ref arg
            UIImage* icon = (UIImage*) (args[@"icon"] == [NSNull null] ? nil : args[@"icon"]);
        
            // ref
            QUserLocationPresentation* ref = (QUserLocationPresentation*) args[@"__this__"];
        
            ref.icon = icon;
            methodResult(@"success");
        },
        
        @"QUserLocationPresentation::set_circleFillColor": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QUserLocationPresentation::set_circleFillColor");
            }
        
            // args
            // ref arg
            UIColor* circleFillColor = (UIColor*) (args[@"circleFillColor"] == [NSNull null] ? nil : args[@"circleFillColor"]);
        
            // ref
            QUserLocationPresentation* ref = (QUserLocationPresentation*) args[@"__this__"];
        
            ref.circleFillColor = circleFillColor;
            methodResult(@"success");
        },
        
        @"QHeatTileOverlay::set_decayRadius": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QHeatTileOverlay::set_decayRadius");
            }
        
            // args
            // jsonable arg
            NSInteger decayRadius = [args[@"decayRadius"] longValue];
        
            // ref
            QHeatTileOverlay* ref = (QHeatTileOverlay*) args[@"__this__"];
        
            ref.decayRadius = decayRadius;
            methodResult(@"success");
        },
        
        @"QHeatTileOverlay::set_opacity": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QHeatTileOverlay::set_opacity");
            }
        
            // args
            // jsonable arg
            CGFloat opacity = [args[@"opacity"] floatValue];
        
            // ref
            QHeatTileOverlay* ref = (QHeatTileOverlay*) args[@"__this__"];
        
            ref.opacity = opacity;
            methodResult(@"success");
        },
        
        @"QHeatTileOverlay::set_gradient": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QHeatTileOverlay::set_gradient");
            }
        
            // args
            // ref arg
            QHeatTileGradient* gradient = (QHeatTileGradient*) (args[@"gradient"] == [NSNull null] ? nil : args[@"gradient"]);
        
            // ref
            QHeatTileOverlay* ref = (QHeatTileOverlay*) args[@"__this__"];
        
            ref.gradient = gradient;
            methodResult(@"success");
        },
        
        @"QMapView::set_handDrawMapEnabled": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_handDrawMapEnabled");
            }
        
            // args
            // jsonable arg
            BOOL handDrawMapEnabled = [args[@"handDrawMapEnabled"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.handDrawMapEnabled = handDrawMapEnabled;
            methodResult(@"success");
        },
        
        @"QMapView::set_showsTraffic": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_showsTraffic");
            }
        
            // args
            // jsonable arg
            BOOL showsTraffic = [args[@"showsTraffic"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.showsTraffic = showsTraffic;
            methodResult(@"success");
        },
        
        @"QMapView::set_delegate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_delegate");
            }
        
            // args
        
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.delegate = weakSelf;
            methodResult(@"success");
        },
        
        @"QMapView::set_mapType": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_mapType");
            }
        
            // args
            // enum arg
            QMapType mapType = (QMapType) [args[@"mapType"] integerValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.mapType = mapType;
            methodResult(@"success");
        },
        
        @"QMapView::set_showsScale": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_showsScale");
            }
        
            // args
            // jsonable arg
            BOOL showsScale = [args[@"showsScale"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.showsScale = showsScale;
            methodResult(@"success");
        },
        
        @"QMapView::set_showsBuildings": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_showsBuildings");
            }
        
            // args
            // jsonable arg
            BOOL showsBuildings = [args[@"showsBuildings"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.showsBuildings = showsBuildings;
            methodResult(@"success");
        },
        
        @"QMapView::set_shows3DBuildings": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_shows3DBuildings");
            }
        
            // args
            // jsonable arg
            BOOL shows3DBuildings = [args[@"shows3DBuildings"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.shows3DBuildings = shows3DBuildings;
            methodResult(@"success");
        },
        
        @"QMapView::set_showsPoi": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_showsPoi");
            }
        
            // args
            // jsonable arg
            BOOL showsPoi = [args[@"showsPoi"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.showsPoi = showsPoi;
            methodResult(@"success");
        },
        
        @"QMapView::set_showsCompass": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_showsCompass");
            }
        
            // args
            // jsonable arg
            BOOL showsCompass = [args[@"showsCompass"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.showsCompass = showsCompass;
            methodResult(@"success");
        },
        
        @"QMapView::set_centerCoordinate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_centerCoordinate");
            }
        
            // args
            // struct arg
            NSValue* centerCoordinateValue = (NSValue*) args[@"centerCoordinate"];
            CLLocationCoordinate2D centerCoordinate;
            [centerCoordinateValue getValue:&centerCoordinate];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.centerCoordinate = centerCoordinate;
            methodResult(@"success");
        },
        
        @"QMapView::set_zoomLevel": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_zoomLevel");
            }
        
            // args
            // jsonable arg
            CGFloat zoomLevel = [args[@"zoomLevel"] floatValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.zoomLevel = zoomLevel;
            methodResult(@"success");
        },
        
        @"QMapView::set_rotation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_rotation");
            }
        
            // args
            // jsonable arg
            CGFloat rotation = [args[@"rotation"] floatValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.rotation = rotation;
            methodResult(@"success");
        },
        
        @"QMapView::set_overlooking": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_overlooking");
            }
        
            // args
            // jsonable arg
            CGFloat overlooking = [args[@"overlooking"] floatValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.overlooking = overlooking;
            methodResult(@"success");
        },
        
        @"QMapView::set_visibleMapRect": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_visibleMapRect");
            }
        
            // args
            // struct arg
            NSValue* visibleMapRectValue = (NSValue*) args[@"visibleMapRect"];
            QMapRect visibleMapRect;
            [visibleMapRectValue getValue:&visibleMapRect];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.visibleMapRect = visibleMapRect;
            methodResult(@"success");
        },
        
        @"QMapView::set_region": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_region");
            }
        
            // args
            // struct arg
            NSValue* regionValue = (NSValue*) args[@"region"];
            QCoordinateRegion region;
            [regionValue getValue:&region];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.region = region;
            methodResult(@"success");
        },
        
        @"QMapView::set_zoomEnabled": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_zoomEnabled");
            }
        
            // args
            // jsonable arg
            BOOL zoomEnabled = [args[@"zoomEnabled"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.zoomEnabled = zoomEnabled;
            methodResult(@"success");
        },
        
        @"QMapView::set_scrollEnabled": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_scrollEnabled");
            }
        
            // args
            // jsonable arg
            BOOL scrollEnabled = [args[@"scrollEnabled"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.scrollEnabled = scrollEnabled;
            methodResult(@"success");
        },
        
        @"QMapView::set_overlookingEnabled": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_overlookingEnabled");
            }
        
            // args
            // jsonable arg
            BOOL overlookingEnabled = [args[@"overlookingEnabled"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.overlookingEnabled = overlookingEnabled;
            methodResult(@"success");
        },
        
        @"QMapView::set_rotateEnabled": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_rotateEnabled");
            }
        
            // args
            // jsonable arg
            BOOL rotateEnabled = [args[@"rotateEnabled"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.rotateEnabled = rotateEnabled;
            methodResult(@"success");
        },
        
        @"QMapView::set_showsUserLocation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_showsUserLocation");
            }
        
            // args
            // jsonable arg
            BOOL showsUserLocation = [args[@"showsUserLocation"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.showsUserLocation = showsUserLocation;
            methodResult(@"success");
        },
        
        @"QMapView::set_desiredAccuracy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_desiredAccuracy");
            }
        
            // args
            // jsonable arg
            CLLocationAccuracy desiredAccuracy = [args[@"desiredAccuracy"] doubleValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.desiredAccuracy = desiredAccuracy;
            methodResult(@"success");
        },
        
        @"QMapView::set_distanceFilter": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_distanceFilter");
            }
        
            // args
            // jsonable arg
            CLLocationDistance distanceFilter = [args[@"distanceFilter"] doubleValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.distanceFilter = distanceFilter;
            methodResult(@"success");
        },
        
        @"QMapView::set_headingFilter": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_headingFilter");
            }
        
            // args
            // jsonable arg
            CLLocationDegrees headingFilter = [args[@"headingFilter"] doubleValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.headingFilter = headingFilter;
            methodResult(@"success");
        },
        
        @"QMapView::set_allowsBackgroundLocationUpdates": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_allowsBackgroundLocationUpdates");
            }
        
            // args
            // jsonable arg
            BOOL allowsBackgroundLocationUpdates = [args[@"allowsBackgroundLocationUpdates"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.allowsBackgroundLocationUpdates = allowsBackgroundLocationUpdates;
            methodResult(@"success");
        },
        
        @"QMapView::set_pausesLocationUpdatesAutomatically": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_pausesLocationUpdatesAutomatically");
            }
        
            // args
            // jsonable arg
            BOOL pausesLocationUpdatesAutomatically = [args[@"pausesLocationUpdatesAutomatically"] boolValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.pausesLocationUpdatesAutomatically = pausesLocationUpdatesAutomatically;
            methodResult(@"success");
        },
        
        @"QMapView::set_userTrackingMode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMapView::set_userTrackingMode");
            }
        
            // args
            // enum arg
            QUserTrackingMode userTrackingMode = (QUserTrackingMode) [args[@"userTrackingMode"] integerValue];
        
            // ref
            QMapView* ref = (QMapView*) args[@"__this__"];
        
            ref.userTrackingMode = userTrackingMode;
            methodResult(@"success");
        },
        
        @"QPoiInfo::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPoiInfo::set_uid");
            }
        
            // args
            // jsonable arg
            NSString* uid = (NSString*) args[@"uid"];
        
            // ref
            QPoiInfo* ref = (QPoiInfo*) args[@"__this__"];
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"QPoiInfo::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPoiInfo::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            QPoiInfo* ref = (QPoiInfo*) args[@"__this__"];
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"QPoiInfo::set_coordinate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPoiInfo::set_coordinate");
            }
        
            // args
            // struct arg
            NSValue* coordinateValue = (NSValue*) args[@"coordinate"];
            CLLocationCoordinate2D coordinate;
            [coordinateValue getValue:&coordinate];
        
            // ref
            QPoiInfo* ref = (QPoiInfo*) args[@"__this__"];
        
            ref.coordinate = coordinate;
            methodResult(@"success");
        },
        
        @"QIndoorPoiInfo::set_levelName": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QIndoorPoiInfo::set_levelName");
            }
        
            // args
            // jsonable arg
            NSString* levelName = (NSString*) args[@"levelName"];
        
            // ref
            QIndoorPoiInfo* ref = (QIndoorPoiInfo*) args[@"__this__"];
        
            ref.levelName = levelName;
            methodResult(@"success");
        },
        
        @"QIndoorPoiInfo::set_buildingGUID": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QIndoorPoiInfo::set_buildingGUID");
            }
        
            // args
            // jsonable arg
            NSString* buildingGUID = (NSString*) args[@"buildingGUID"];
        
            // ref
            QIndoorPoiInfo* ref = (QIndoorPoiInfo*) args[@"__this__"];
        
            ref.buildingGUID = buildingGUID;
            methodResult(@"success");
        },
        
        @"QIndoorPoiInfo::set_buildingName": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QIndoorPoiInfo::set_buildingName");
            }
        
            // args
            // jsonable arg
            NSString* buildingName = (NSString*) args[@"buildingName"];
        
            // ref
            QIndoorPoiInfo* ref = (QIndoorPoiInfo*) args[@"__this__"];
        
            ref.buildingName = buildingName;
            methodResult(@"success");
        },
        
        @"QPointEventInfo::set_source": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPointEventInfo::set_source");
            }
        
            // args
            // jsonable arg
            NSString* source = (NSString*) args[@"source"];
        
            // ref
            QPointEventInfo* ref = (QPointEventInfo*) args[@"__this__"];
        
            ref.source = source;
            methodResult(@"success");
        },
        
        @"QPointEventInfo::set_eventName": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPointEventInfo::set_eventName");
            }
        
            // args
            // jsonable arg
            NSString* eventName = (NSString*) args[@"eventName"];
        
            // ref
            QPointEventInfo* ref = (QPointEventInfo*) args[@"__this__"];
        
            ref.eventName = eventName;
            methodResult(@"success");
        },
        
        @"QPointEventInfo::set_road": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPointEventInfo::set_road");
            }
        
            // args
            // jsonable arg
            NSString* road = (NSString*) args[@"road"];
        
            // ref
            QPointEventInfo* ref = (QPointEventInfo*) args[@"__this__"];
        
            ref.road = road;
            methodResult(@"success");
        },
        
        @"QPointEventInfo::set_detail": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPointEventInfo::set_detail");
            }
        
            // args
            // jsonable arg
            NSString* detail = (NSString*) args[@"detail"];
        
            // ref
            QPointEventInfo* ref = (QPointEventInfo*) args[@"__this__"];
        
            ref.detail = detail;
            methodResult(@"success");
        },
        
        @"QPointEventInfo::set_startTime": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPointEventInfo::set_startTime");
            }
        
            // args
            // jsonable arg
            NSTimeInterval startTime = [args[@"startTime"] doubleValue];
        
            // ref
            QPointEventInfo* ref = (QPointEventInfo*) args[@"__this__"];
        
            ref.startTime = startTime;
            methodResult(@"success");
        },
        
        @"QPointEventInfo::set_endTime": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPointEventInfo::set_endTime");
            }
        
            // args
            // jsonable arg
            NSTimeInterval endTime = [args[@"endTime"] doubleValue];
        
            // ref
            QPointEventInfo* ref = (QPointEventInfo*) args[@"__this__"];
        
            ref.endTime = endTime;
            methodResult(@"success");
        },
        
        @"QPointEventInfo::set_updateTime": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPointEventInfo::set_updateTime");
            }
        
            // args
            // jsonable arg
            NSTimeInterval updateTime = [args[@"updateTime"] doubleValue];
        
            // ref
            QPointEventInfo* ref = (QPointEventInfo*) args[@"__this__"];
        
            ref.updateTime = updateTime;
            methodResult(@"success");
        },
        
        @"QMSSearcher::set_delegate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSearcher::set_delegate");
            }
        
            // args
        
        
            // ref
            QMSSearcher* ref = (QMSSearcher*) args[@"__this__"];
        
            ref.delegate = weakSelf;
            methodResult(@"success");
        },
        
        @"QMSSearchResult::set_status": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSearchResult::set_status");
            }
        
            // args
            // jsonable arg
            NSInteger status = [args[@"status"] longValue];
        
            // ref
            QMSSearchResult* ref = (QMSSearchResult*) args[@"__this__"];
        
            ref.status = status;
            methodResult(@"success");
        },
        
        @"QMSSearchResult::set_message": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSearchResult::set_message");
            }
        
            // args
            // jsonable arg
            NSString* message = (NSString*) args[@"message"];
        
            // ref
            QMSSearchResult* ref = (QMSSearchResult*) args[@"__this__"];
        
            ref.message = message;
            methodResult(@"success");
        },
        
        @"QMSPoiData::set_id_": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiData::set_id_");
            }
        
            // args
            // jsonable arg
            NSString* id_ = (NSString*) args[@"id_"];
        
            // ref
            QMSPoiData* ref = (QMSPoiData*) args[@"__this__"];
        
            ref.id_ = id_;
            methodResult(@"success");
        },
        
        @"QMSPoiData::set_title": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiData::set_title");
            }
        
            // args
            // jsonable arg
            NSString* title = (NSString*) args[@"title"];
        
            // ref
            QMSPoiData* ref = (QMSPoiData*) args[@"__this__"];
        
            ref.title = title;
            methodResult(@"success");
        },
        
        @"QMSPoiData::set_address": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiData::set_address");
            }
        
            // args
            // jsonable arg
            NSString* address = (NSString*) args[@"address"];
        
            // ref
            QMSPoiData* ref = (QMSPoiData*) args[@"__this__"];
        
            ref.address = address;
            methodResult(@"success");
        },
        
        @"QMSPoiData::set_tel": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiData::set_tel");
            }
        
            // args
            // jsonable arg
            NSString* tel = (NSString*) args[@"tel"];
        
            // ref
            QMSPoiData* ref = (QMSPoiData*) args[@"__this__"];
        
            ref.tel = tel;
            methodResult(@"success");
        },
        
        @"QMSPoiData::set_category": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiData::set_category");
            }
        
            // args
            // jsonable arg
            NSString* category = (NSString*) args[@"category"];
        
            // ref
            QMSPoiData* ref = (QMSPoiData*) args[@"__this__"];
        
            ref.category = category;
            methodResult(@"success");
        },
        
        @"QMSPoiData::set_type": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiData::set_type");
            }
        
            // args
            // enum arg
            QMSPoiType type = (QMSPoiType) [args[@"type"] integerValue];
        
            // ref
            QMSPoiData* ref = (QMSPoiData*) args[@"__this__"];
        
            ref.type = type;
            methodResult(@"success");
        },
        
        @"QMSPoiData::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiData::set_location");
            }
        
            // args
            // struct arg
            NSValue* locationValue = (NSValue*) args[@"location"];
            CLLocationCoordinate2D location;
            [locationValue getValue:&location];
        
            // ref
            QMSPoiData* ref = (QMSPoiData*) args[@"__this__"];
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"QMSPoiData::set_boundary": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiData::set_boundary");
            }
        
            // args
            // list arg
            NSArray<NSObject*>* boundary = (NSArray<NSObject*>*) args[@"boundary"];
        
            // ref
            QMSPoiData* ref = (QMSPoiData*) args[@"__this__"];
        
            ref.boundary = boundary;
            methodResult(@"success");
        },
        
        @"QMSPoiSearchResult::set_count": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiSearchResult::set_count");
            }
        
            // args
            // jsonable arg
            NSUInteger count = [args[@"count"] unsignedIntegerValue];
        
            // ref
            QMSPoiSearchResult* ref = (QMSPoiSearchResult*) args[@"__this__"];
        
            ref.count = count;
            methodResult(@"success");
        },
        
        @"QMSPoiSearchResult::set_dataArray": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiSearchResult::set_dataArray");
            }
        
            // args
            // list arg
            NSArray<NSObject*>* dataArray = (NSArray<NSObject*>*) args[@"dataArray"];
        
            // ref
            QMSPoiSearchResult* ref = (QMSPoiSearchResult*) args[@"__this__"];
        
            ref.dataArray = dataArray;
            methodResult(@"success");
        },
        
        @"QMSSuggestionPoiData::set_id_": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionPoiData::set_id_");
            }
        
            // args
            // jsonable arg
            NSString* id_ = (NSString*) args[@"id_"];
        
            // ref
            QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
            ref.id_ = id_;
            methodResult(@"success");
        },
        
        @"QMSSuggestionPoiData::set_title": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionPoiData::set_title");
            }
        
            // args
            // jsonable arg
            NSString* title = (NSString*) args[@"title"];
        
            // ref
            QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
            ref.title = title;
            methodResult(@"success");
        },
        
        @"QMSSuggestionPoiData::set_address": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionPoiData::set_address");
            }
        
            // args
            // jsonable arg
            NSString* address = (NSString*) args[@"address"];
        
            // ref
            QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
            ref.address = address;
            methodResult(@"success");
        },
        
        @"QMSSuggestionPoiData::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionPoiData::set_adcode");
            }
        
            // args
            // jsonable arg
            NSNumber* adcode = (NSNumber*) args[@"adcode"];
        
            // ref
            QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"QMSSuggestionPoiData::set_province": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionPoiData::set_province");
            }
        
            // args
            // jsonable arg
            NSString* province = (NSString*) args[@"province"];
        
            // ref
            QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
            ref.province = province;
            methodResult(@"success");
        },
        
        @"QMSSuggestionPoiData::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionPoiData::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"QMSSuggestionPoiData::set_type": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionPoiData::set_type");
            }
        
            // args
            // enum arg
            QMSPoiType type = (QMSPoiType) [args[@"type"] integerValue];
        
            // ref
            QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
            ref.type = type;
            methodResult(@"success");
        },
        
        @"QMSSuggestionPoiData::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionPoiData::set_location");
            }
        
            // args
            // struct arg
            NSValue* locationValue = (NSValue*) args[@"location"];
            CLLocationCoordinate2D location;
            [locationValue getValue:&location];
        
            // ref
            QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSubPoiData::set_parent_id": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSubPoiData::set_parent_id");
            }
        
            // args
            // jsonable arg
            NSString* parent_id = (NSString*) args[@"parent_id"];
        
            // ref
            QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
            ref.parent_id = parent_id;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSubPoiData::set_id_": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSubPoiData::set_id_");
            }
        
            // args
            // jsonable arg
            NSString* id_ = (NSString*) args[@"id_"];
        
            // ref
            QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
            ref.id_ = id_;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSubPoiData::set_title": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSubPoiData::set_title");
            }
        
            // args
            // jsonable arg
            NSString* title = (NSString*) args[@"title"];
        
            // ref
            QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
            ref.title = title;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSubPoiData::set_address": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSubPoiData::set_address");
            }
        
            // args
            // jsonable arg
            NSString* address = (NSString*) args[@"address"];
        
            // ref
            QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
            ref.address = address;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSubPoiData::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSubPoiData::set_location");
            }
        
            // args
            // struct arg
            NSValue* locationValue = (NSValue*) args[@"location"];
            CLLocationCoordinate2D location;
            [locationValue getValue:&location];
        
            // ref
            QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSubPoiData::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSubPoiData::set_adcode");
            }
        
            // args
            // jsonable arg
            NSNumber* adcode = (NSNumber*) args[@"adcode"];
        
            // ref
            QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSubPoiData::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSubPoiData::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"QMSSuggestionResult::set_count": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionResult::set_count");
            }
        
            // args
            // jsonable arg
            NSUInteger count = [args[@"count"] unsignedIntegerValue];
        
            // ref
            QMSSuggestionResult* ref = (QMSSuggestionResult*) args[@"__this__"];
        
            ref.count = count;
            methodResult(@"success");
        },
        
        @"QMSSuggestionResult::set_dataArray": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionResult::set_dataArray");
            }
        
            // args
            // list arg
            NSArray<NSObject*>* dataArray = (NSArray<NSObject*>*) args[@"dataArray"];
        
            // ref
            QMSSuggestionResult* ref = (QMSSuggestionResult*) args[@"__this__"];
        
            ref.dataArray = dataArray;
            methodResult(@"success");
        },
        
        @"QMSSuggestionResult::set_sub_pois": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionResult::set_sub_pois");
            }
        
            // args
            // list arg
            NSArray<NSObject*>* sub_pois = (NSArray<NSObject*>*) args[@"sub_pois"];
        
            // ref
            QMSSuggestionResult* ref = (QMSSuggestionResult*) args[@"__this__"];
        
            ref.sub_pois = sub_pois;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeFormattedAddresses::set_recommend": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeFormattedAddresses::set_recommend");
            }
        
            // args
            // jsonable arg
            NSString* recommend = (NSString*) args[@"recommend"];
        
            // ref
            QMSReGeoCodeFormattedAddresses* ref = (QMSReGeoCodeFormattedAddresses*) args[@"__this__"];
        
            ref.recommend = recommend;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeFormattedAddresses::set_rough": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeFormattedAddresses::set_rough");
            }
        
            // args
            // jsonable arg
            NSString* rough = (NSString*) args[@"rough"];
        
            // ref
            QMSReGeoCodeFormattedAddresses* ref = (QMSReGeoCodeFormattedAddresses*) args[@"__this__"];
        
            ref.rough = rough;
            methodResult(@"success");
        },
        
        @"QMSAddressComponent::set_nation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSAddressComponent::set_nation");
            }
        
            // args
            // jsonable arg
            NSString* nation = (NSString*) args[@"nation"];
        
            // ref
            QMSAddressComponent* ref = (QMSAddressComponent*) args[@"__this__"];
        
            ref.nation = nation;
            methodResult(@"success");
        },
        
        @"QMSAddressComponent::set_province": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSAddressComponent::set_province");
            }
        
            // args
            // jsonable arg
            NSString* province = (NSString*) args[@"province"];
        
            // ref
            QMSAddressComponent* ref = (QMSAddressComponent*) args[@"__this__"];
        
            ref.province = province;
            methodResult(@"success");
        },
        
        @"QMSAddressComponent::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSAddressComponent::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            QMSAddressComponent* ref = (QMSAddressComponent*) args[@"__this__"];
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"QMSAddressComponent::set_district": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSAddressComponent::set_district");
            }
        
            // args
            // jsonable arg
            NSString* district = (NSString*) args[@"district"];
        
            // ref
            QMSAddressComponent* ref = (QMSAddressComponent*) args[@"__this__"];
        
            ref.district = district;
            methodResult(@"success");
        },
        
        @"QMSAddressComponent::set_street": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSAddressComponent::set_street");
            }
        
            // args
            // jsonable arg
            NSString* street = (NSString*) args[@"street"];
        
            // ref
            QMSAddressComponent* ref = (QMSAddressComponent*) args[@"__this__"];
        
            ref.street = street;
            methodResult(@"success");
        },
        
        @"QMSAddressComponent::set_street_number": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSAddressComponent::set_street_number");
            }
        
            // args
            // jsonable arg
            NSString* street_number = (NSString*) args[@"street_number"];
        
            // ref
            QMSAddressComponent* ref = (QMSAddressComponent*) args[@"__this__"];
        
            ref.street_number = street_number;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAdInfo::set_nation_code": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAdInfo::set_nation_code");
            }
        
            // args
            // jsonable arg
            NSString* nation_code = (NSString*) args[@"nation_code"];
        
            // ref
            QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
            ref.nation_code = nation_code;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAdInfo::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAdInfo::set_adcode");
            }
        
            // args
            // jsonable arg
            NSString* adcode = (NSString*) args[@"adcode"];
        
            // ref
            QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAdInfo::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAdInfo::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAdInfo::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAdInfo::set_location");
            }
        
            // args
            // struct arg
            NSValue* locationValue = (NSValue*) args[@"location"];
            CLLocationCoordinate2D location;
            [locationValue getValue:&location];
        
            // ref
            QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAdInfo::set_nation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAdInfo::set_nation");
            }
        
            // args
            // jsonable arg
            NSString* nation = (NSString*) args[@"nation"];
        
            // ref
            QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
            ref.nation = nation;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAdInfo::set_province": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAdInfo::set_province");
            }
        
            // args
            // jsonable arg
            NSString* province = (NSString*) args[@"province"];
        
            // ref
            QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
            ref.province = province;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAdInfo::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAdInfo::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAdInfo::set_district": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAdInfo::set_district");
            }
        
            // args
            // jsonable arg
            NSString* district = (NSString*) args[@"district"];
        
            // ref
            QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
            ref.district = district;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeFamousArea::set_title": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeFamousArea::set_title");
            }
        
            // args
            // jsonable arg
            NSString* title = (NSString*) args[@"title"];
        
            // ref
            QMSReGeoCodeFamousArea* ref = (QMSReGeoCodeFamousArea*) args[@"__this__"];
        
            ref.title = title;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeFamousArea::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeFamousArea::set_location");
            }
        
            // args
            // struct arg
            NSValue* locationValue = (NSValue*) args[@"location"];
            CLLocationCoordinate2D location;
            [locationValue getValue:&location];
        
            // ref
            QMSReGeoCodeFamousArea* ref = (QMSReGeoCodeFamousArea*) args[@"__this__"];
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeFamousArea::set__distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeFamousArea::set__distance");
            }
        
            // args
            // jsonable arg
            double _distance = [args[@"_distance"] doubleValue];
        
            // ref
            QMSReGeoCodeFamousArea* ref = (QMSReGeoCodeFamousArea*) args[@"__this__"];
        
            ref._distance = _distance;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeFamousArea::set__dir_desc": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeFamousArea::set__dir_desc");
            }
        
            // args
            // jsonable arg
            NSString* _dir_desc = (NSString*) args[@"_dir_desc"];
        
            // ref
            QMSReGeoCodeFamousArea* ref = (QMSReGeoCodeFamousArea*) args[@"__this__"];
        
            ref._dir_desc = _dir_desc;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAddressReference::set_famous_area": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAddressReference::set_famous_area");
            }
        
            // args
            // ref arg
            QMSReGeoCodeFamousArea* famous_area = (QMSReGeoCodeFamousArea*) (args[@"famous_area"] == [NSNull null] ? nil : args[@"famous_area"]);
        
            // ref
            QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
            ref.famous_area = famous_area;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAddressReference::set_landmark_l1": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAddressReference::set_landmark_l1");
            }
        
            // args
            // ref arg
            QMSReGeoCodeFamousArea* landmark_l1 = (QMSReGeoCodeFamousArea*) (args[@"landmark_l1"] == [NSNull null] ? nil : args[@"landmark_l1"]);
        
            // ref
            QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
            ref.landmark_l1 = landmark_l1;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAddressReference::set_landmark_l2": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAddressReference::set_landmark_l2");
            }
        
            // args
            // ref arg
            QMSReGeoCodeFamousArea* landmark_l2 = (QMSReGeoCodeFamousArea*) (args[@"landmark_l2"] == [NSNull null] ? nil : args[@"landmark_l2"]);
        
            // ref
            QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
            ref.landmark_l2 = landmark_l2;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAddressReference::set_street": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAddressReference::set_street");
            }
        
            // args
            // ref arg
            QMSReGeoCodeFamousArea* street = (QMSReGeoCodeFamousArea*) (args[@"street"] == [NSNull null] ? nil : args[@"street"]);
        
            // ref
            QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
            ref.street = street;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAddressReference::set_street_number": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAddressReference::set_street_number");
            }
        
            // args
            // ref arg
            QMSReGeoCodeFamousArea* street_number = (QMSReGeoCodeFamousArea*) (args[@"street_number"] == [NSNull null] ? nil : args[@"street_number"]);
        
            // ref
            QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
            ref.street_number = street_number;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAddressReference::set_water": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAddressReference::set_water");
            }
        
            // args
            // ref arg
            QMSReGeoCodeFamousArea* water = (QMSReGeoCodeFamousArea*) (args[@"water"] == [NSNull null] ? nil : args[@"water"]);
        
            // ref
            QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
            ref.water = water;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodeAddressReference::set_crossroad": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodeAddressReference::set_crossroad");
            }
        
            // args
            // ref arg
            QMSReGeoCodeFamousArea* crossroad = (QMSReGeoCodeFamousArea*) (args[@"crossroad"] == [NSNull null] ? nil : args[@"crossroad"]);
        
            // ref
            QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
            ref.crossroad = crossroad;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodePoi::set_id_": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodePoi::set_id_");
            }
        
            // args
            // jsonable arg
            NSString* id_ = (NSString*) args[@"id_"];
        
            // ref
            QMSReGeoCodePoi* ref = (QMSReGeoCodePoi*) args[@"__this__"];
        
            ref.id_ = id_;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodePoi::set_title": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodePoi::set_title");
            }
        
            // args
            // jsonable arg
            NSString* title = (NSString*) args[@"title"];
        
            // ref
            QMSReGeoCodePoi* ref = (QMSReGeoCodePoi*) args[@"__this__"];
        
            ref.title = title;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodePoi::set_address": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodePoi::set_address");
            }
        
            // args
            // jsonable arg
            NSString* address = (NSString*) args[@"address"];
        
            // ref
            QMSReGeoCodePoi* ref = (QMSReGeoCodePoi*) args[@"__this__"];
        
            ref.address = address;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodePoi::set_category": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodePoi::set_category");
            }
        
            // args
            // jsonable arg
            NSString* category = (NSString*) args[@"category"];
        
            // ref
            QMSReGeoCodePoi* ref = (QMSReGeoCodePoi*) args[@"__this__"];
        
            ref.category = category;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodePoi::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodePoi::set_location");
            }
        
            // args
            // struct arg
            NSValue* locationValue = (NSValue*) args[@"location"];
            CLLocationCoordinate2D location;
            [locationValue getValue:&location];
        
            // ref
            QMSReGeoCodePoi* ref = (QMSReGeoCodePoi*) args[@"__this__"];
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"QMSReGeoCodePoi::set__distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReGeoCodePoi::set__distance");
            }
        
            // args
            // jsonable arg
            double _distance = [args[@"_distance"] doubleValue];
        
            // ref
            QMSReGeoCodePoi* ref = (QMSReGeoCodePoi*) args[@"__this__"];
        
            ref._distance = _distance;
            methodResult(@"success");
        },
        
        @"QMSReverseGeoCodeSearchResult::set_address": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReverseGeoCodeSearchResult::set_address");
            }
        
            // args
            // jsonable arg
            NSString* address = (NSString*) args[@"address"];
        
            // ref
            QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
            ref.address = address;
            methodResult(@"success");
        },
        
        @"QMSReverseGeoCodeSearchResult::set_formatted_addresses": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReverseGeoCodeSearchResult::set_formatted_addresses");
            }
        
            // args
            // ref arg
            QMSReGeoCodeFormattedAddresses* formatted_addresses = (QMSReGeoCodeFormattedAddresses*) (args[@"formatted_addresses"] == [NSNull null] ? nil : args[@"formatted_addresses"]);
        
            // ref
            QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
            ref.formatted_addresses = formatted_addresses;
            methodResult(@"success");
        },
        
        @"QMSReverseGeoCodeSearchResult::set_address_component": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReverseGeoCodeSearchResult::set_address_component");
            }
        
            // args
            // ref arg
            QMSAddressComponent* address_component = (QMSAddressComponent*) (args[@"address_component"] == [NSNull null] ? nil : args[@"address_component"]);
        
            // ref
            QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
            ref.address_component = address_component;
            methodResult(@"success");
        },
        
        @"QMSReverseGeoCodeSearchResult::set_ad_info": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReverseGeoCodeSearchResult::set_ad_info");
            }
        
            // args
            // ref arg
            QMSReGeoCodeAdInfo* ad_info = (QMSReGeoCodeAdInfo*) (args[@"ad_info"] == [NSNull null] ? nil : args[@"ad_info"]);
        
            // ref
            QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
            ref.ad_info = ad_info;
            methodResult(@"success");
        },
        
        @"QMSReverseGeoCodeSearchResult::set_address_reference": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReverseGeoCodeSearchResult::set_address_reference");
            }
        
            // args
            // ref arg
            QMSReGeoCodeAddressReference* address_reference = (QMSReGeoCodeAddressReference*) (args[@"address_reference"] == [NSNull null] ? nil : args[@"address_reference"]);
        
            // ref
            QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
            ref.address_reference = address_reference;
            methodResult(@"success");
        },
        
        @"QMSReverseGeoCodeSearchResult::set_poisArray": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReverseGeoCodeSearchResult::set_poisArray");
            }
        
            // args
            // list arg
            NSArray<NSObject*>* poisArray = (NSArray<NSObject*>*) args[@"poisArray"];
        
            // ref
            QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
            ref.poisArray = poisArray;
            methodResult(@"success");
        },
        
        @"QMSReverseGeoCodeSearchResult::set_poi_count": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReverseGeoCodeSearchResult::set_poi_count");
            }
        
            // args
            // jsonable arg
            NSUInteger poi_count = [args[@"poi_count"] unsignedIntegerValue];
        
            // ref
            QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
            ref.poi_count = poi_count;
            methodResult(@"success");
        },
        
        @"QMSGeoCodeAdInfo::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSGeoCodeAdInfo::set_adcode");
            }
        
            // args
            // jsonable arg
            NSString* adcode = (NSString*) args[@"adcode"];
        
            // ref
            QMSGeoCodeAdInfo* ref = (QMSGeoCodeAdInfo*) args[@"__this__"];
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"QMSGeoCodeSearchResult::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSGeoCodeSearchResult::set_location");
            }
        
            // args
            // struct arg
            NSValue* locationValue = (NSValue*) args[@"location"];
            CLLocationCoordinate2D location;
            [locationValue getValue:&location];
        
            // ref
            QMSGeoCodeSearchResult* ref = (QMSGeoCodeSearchResult*) args[@"__this__"];
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"QMSGeoCodeSearchResult::set_address_components": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSGeoCodeSearchResult::set_address_components");
            }
        
            // args
            // ref arg
            QMSAddressComponent* address_components = (QMSAddressComponent*) (args[@"address_components"] == [NSNull null] ? nil : args[@"address_components"]);
        
            // ref
            QMSGeoCodeSearchResult* ref = (QMSGeoCodeSearchResult*) args[@"__this__"];
        
            ref.address_components = address_components;
            methodResult(@"success");
        },
        
        @"QMSGeoCodeSearchResult::set_ad_info": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSGeoCodeSearchResult::set_ad_info");
            }
        
            // args
            // ref arg
            QMSGeoCodeAdInfo* ad_info = (QMSGeoCodeAdInfo*) (args[@"ad_info"] == [NSNull null] ? nil : args[@"ad_info"]);
        
            // ref
            QMSGeoCodeSearchResult* ref = (QMSGeoCodeSearchResult*) args[@"__this__"];
        
            ref.ad_info = ad_info;
            methodResult(@"success");
        },
        
        @"QMSGeoCodeSearchResult::set_level": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSGeoCodeSearchResult::set_level");
            }
        
            // args
            // jsonable arg
            NSInteger level = [args[@"level"] longValue];
        
            // ref
            QMSGeoCodeSearchResult* ref = (QMSGeoCodeSearchResult*) args[@"__this__"];
        
            ref.level = level;
            methodResult(@"success");
        },
        
        @"QMSGeoCodeSearchResult::set_reliability": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSGeoCodeSearchResult::set_reliability");
            }
        
            // args
            // jsonable arg
            NSUInteger reliability = [args[@"reliability"] unsignedIntegerValue];
        
            // ref
            QMSGeoCodeSearchResult* ref = (QMSGeoCodeSearchResult*) args[@"__this__"];
        
            ref.reliability = reliability;
            methodResult(@"success");
        },
        
        @"QMSWalkingRouteSearchResult::set_routes": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSWalkingRouteSearchResult::set_routes");
            }
        
            // args
            // list arg
            NSArray<NSObject*>* routes = (NSArray<NSObject*>*) args[@"routes"];
        
            // ref
            QMSWalkingRouteSearchResult* ref = (QMSWalkingRouteSearchResult*) args[@"__this__"];
        
            ref.routes = routes;
            methodResult(@"success");
        },
        
        @"QMSDriveRestriction::set_status": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSDriveRestriction::set_status");
            }
        
            // args
            // jsonable arg
            int status = [args[@"status"] intValue];
        
            // ref
            QMSDriveRestriction* ref = (QMSDriveRestriction*) args[@"__this__"];
        
            ref.status = status;
            methodResult(@"success");
        },
        
        @"QMSTaxiFare::set_fare": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSTaxiFare::set_fare");
            }
        
            // args
            // jsonable arg
            double fare = [args[@"fare"] doubleValue];
        
            // ref
            QMSTaxiFare* ref = (QMSTaxiFare*) args[@"__this__"];
        
            ref.fare = fare;
            methodResult(@"success");
        },
        
        @"QMSRoutePlan::set_mode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSRoutePlan::set_mode");
            }
        
            // args
            // jsonable arg
            NSString* mode = (NSString*) args[@"mode"];
        
            // ref
            QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
            ref.mode = mode;
            methodResult(@"success");
        },
        
        @"QMSRoutePlan::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSRoutePlan::set_distance");
            }
        
            // args
            // jsonable arg
            CGFloat distance = [args[@"distance"] floatValue];
        
            // ref
            QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"QMSRoutePlan::set_duration": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSRoutePlan::set_duration");
            }
        
            // args
            // jsonable arg
            CGFloat duration = [args[@"duration"] floatValue];
        
            // ref
            QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
            ref.duration = duration;
            methodResult(@"success");
        },
        
        @"QMSRoutePlan::set_direction": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSRoutePlan::set_direction");
            }
        
            // args
            // jsonable arg
            NSString* direction = (NSString*) args[@"direction"];
        
            // ref
            QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
            ref.direction = direction;
            methodResult(@"success");
        },
        
        @"QMSRoutePlan::set_polyline": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSRoutePlan::set_polyline");
            }
        
            // args
            // list arg
            NSArray<NSObject*>* polyline = (NSArray<NSObject*>*) args[@"polyline"];
        
            // ref
            QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
            ref.polyline = polyline;
            methodResult(@"success");
        },
        
        @"QMSRoutePlan::set_steps": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSRoutePlan::set_steps");
            }
        
            // args
            // list arg
            NSArray<NSObject*>* steps = (NSArray<NSObject*>*) args[@"steps"];
        
            // ref
            QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
            ref.steps = steps;
            methodResult(@"success");
        },
        
        @"QMSRoutePlan::set_restriction": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSRoutePlan::set_restriction");
            }
        
            // args
            // ref arg
            QMSDriveRestriction* restriction = (QMSDriveRestriction*) (args[@"restriction"] == [NSNull null] ? nil : args[@"restriction"]);
        
            // ref
            QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
            ref.restriction = restriction;
            methodResult(@"success");
        },
        
    };
}

@end
