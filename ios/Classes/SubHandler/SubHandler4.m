//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

#import "SubHandler4.h"
#import "FluttifyMessageCodec.h"

// Dart端一次方法调用所存在的栈, 只有当MethodChannel传递参数受限时, 再启用这个容器
extern NSMutableDictionary<NSString*, NSObject*>* STACK;
// Dart端随机存取对象的容器
extern NSMutableDictionary<NSNumber*, NSObject*>* HEAP;
// 日志打印开关
extern BOOL enableLog;

@implementation TmapMapFluttifyPlugin (SubHandler4)
- (NSDictionary<NSString*, Handler>*) getSubHandler4 {
    __weak __typeof(self)weakSelf = self;
    return @{
        @"QMSPoiData::get_category_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSPoiData* ref = (QMSPoiData*) args[@"__this__"];
        
                NSString* result = ref.category;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSPoiData::get_type_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSPoiData* ref = (QMSPoiData*) args[@"__this__"];
        
                QMSPoiType result = ref.type;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSPoiData::get_location_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSPoiData* ref = (QMSPoiData*) args[@"__this__"];
        
                CLLocationCoordinate2D result = ref.location;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(CLLocationCoordinate2D)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSPoiData::get_boundary_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSPoiData* ref = (QMSPoiData*) args[@"__this__"];
        
                NSArray* result = ref.boundary;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSPoiSearchResult::get_count_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSPoiSearchResult* ref = (QMSPoiSearchResult*) args[@"__this__"];
        
                NSUInteger result = ref.count;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSPoiSearchResult::get_dataArray_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSPoiSearchResult* ref = (QMSPoiSearchResult*) args[@"__this__"];
        
                NSArray* result = ref.dataArray;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionPoiData::get_id__batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
                NSString* result = ref.id_;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionPoiData::get_title_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
                NSString* result = ref.title;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionPoiData::get_address_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
                NSString* result = ref.address;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionPoiData::get_adcode_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
                NSNumber* result = ref.adcode;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionPoiData::get_province_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
                NSString* result = ref.province;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionPoiData::get_city_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
                NSString* result = ref.city;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionPoiData::get_type_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
                QMSPoiType result = ref.type;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionPoiData::get_location_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionPoiData* ref = (QMSSuggestionPoiData*) args[@"__this__"];
        
                CLLocationCoordinate2D result = ref.location;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(CLLocationCoordinate2D)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionSubPoiData::get_parent_id_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
                NSString* result = ref.parent_id;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionSubPoiData::get_id__batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
                NSString* result = ref.id_;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionSubPoiData::get_title_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
                NSString* result = ref.title;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionSubPoiData::get_address_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
                NSString* result = ref.address;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionSubPoiData::get_location_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
                CLLocationCoordinate2D result = ref.location;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(CLLocationCoordinate2D)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionSubPoiData::get_adcode_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
                NSNumber* result = ref.adcode;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionSubPoiData::get_city_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionSubPoiData* ref = (QMSSuggestionSubPoiData*) args[@"__this__"];
        
                NSString* result = ref.city;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionResult::get_count_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionResult* ref = (QMSSuggestionResult*) args[@"__this__"];
        
                NSUInteger result = ref.count;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionResult::get_dataArray_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionResult* ref = (QMSSuggestionResult*) args[@"__this__"];
        
                NSArray* result = ref.dataArray;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSSuggestionResult::get_sub_pois_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSSuggestionResult* ref = (QMSSuggestionResult*) args[@"__this__"];
        
                NSArray* result = ref.sub_pois;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeFormattedAddresses::get_recommend_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeFormattedAddresses* ref = (QMSReGeoCodeFormattedAddresses*) args[@"__this__"];
        
                NSString* result = ref.recommend;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeFormattedAddresses::get_rough_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeFormattedAddresses* ref = (QMSReGeoCodeFormattedAddresses*) args[@"__this__"];
        
                NSString* result = ref.rough;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSAddressComponent::get_nation_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSAddressComponent* ref = (QMSAddressComponent*) args[@"__this__"];
        
                NSString* result = ref.nation;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSAddressComponent::get_province_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSAddressComponent* ref = (QMSAddressComponent*) args[@"__this__"];
        
                NSString* result = ref.province;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSAddressComponent::get_city_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSAddressComponent* ref = (QMSAddressComponent*) args[@"__this__"];
        
                NSString* result = ref.city;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSAddressComponent::get_district_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSAddressComponent* ref = (QMSAddressComponent*) args[@"__this__"];
        
                NSString* result = ref.district;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSAddressComponent::get_street_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSAddressComponent* ref = (QMSAddressComponent*) args[@"__this__"];
        
                NSString* result = ref.street;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSAddressComponent::get_street_number_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSAddressComponent* ref = (QMSAddressComponent*) args[@"__this__"];
        
                NSString* result = ref.street_number;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAdInfo::get_nation_code_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
                NSString* result = ref.nation_code;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAdInfo::get_adcode_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
                NSString* result = ref.adcode;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAdInfo::get_name_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
                NSString* result = ref.name;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAdInfo::get_location_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
                CLLocationCoordinate2D result = ref.location;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(CLLocationCoordinate2D)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAdInfo::get_nation_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
                NSString* result = ref.nation;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAdInfo::get_province_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
                NSString* result = ref.province;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAdInfo::get_city_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
                NSString* result = ref.city;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAdInfo::get_district_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAdInfo* ref = (QMSReGeoCodeAdInfo*) args[@"__this__"];
        
                NSString* result = ref.district;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeFamousArea::get_title_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeFamousArea* ref = (QMSReGeoCodeFamousArea*) args[@"__this__"];
        
                NSString* result = ref.title;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeFamousArea::get_location_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeFamousArea* ref = (QMSReGeoCodeFamousArea*) args[@"__this__"];
        
                CLLocationCoordinate2D result = ref.location;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(CLLocationCoordinate2D)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeFamousArea::get__distance_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeFamousArea* ref = (QMSReGeoCodeFamousArea*) args[@"__this__"];
        
                double result = ref._distance;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeFamousArea::get__dir_desc_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeFamousArea* ref = (QMSReGeoCodeFamousArea*) args[@"__this__"];
        
                NSString* result = ref._dir_desc;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAddressReference::get_famous_area_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
                QMSReGeoCodeFamousArea* result = ref.famous_area;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAddressReference::get_landmark_l1_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
                QMSReGeoCodeFamousArea* result = ref.landmark_l1;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAddressReference::get_landmark_l2_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
                QMSReGeoCodeFamousArea* result = ref.landmark_l2;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAddressReference::get_street_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
                QMSReGeoCodeFamousArea* result = ref.street;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAddressReference::get_street_number_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
                QMSReGeoCodeFamousArea* result = ref.street_number;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAddressReference::get_water_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
                QMSReGeoCodeFamousArea* result = ref.water;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodeAddressReference::get_crossroad_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodeAddressReference* ref = (QMSReGeoCodeAddressReference*) args[@"__this__"];
        
                QMSReGeoCodeFamousArea* result = ref.crossroad;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodePoi::get_id__batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodePoi* ref = (QMSReGeoCodePoi*) args[@"__this__"];
        
                NSString* result = ref.id_;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodePoi::get_title_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodePoi* ref = (QMSReGeoCodePoi*) args[@"__this__"];
        
                NSString* result = ref.title;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodePoi::get_address_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodePoi* ref = (QMSReGeoCodePoi*) args[@"__this__"];
        
                NSString* result = ref.address;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodePoi::get_category_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodePoi* ref = (QMSReGeoCodePoi*) args[@"__this__"];
        
                NSString* result = ref.category;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodePoi::get_location_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodePoi* ref = (QMSReGeoCodePoi*) args[@"__this__"];
        
                CLLocationCoordinate2D result = ref.location;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(CLLocationCoordinate2D)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReGeoCodePoi::get__distance_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReGeoCodePoi* ref = (QMSReGeoCodePoi*) args[@"__this__"];
        
                double result = ref._distance;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReverseGeoCodeSearchResult::get_address_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
                NSString* result = ref.address;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReverseGeoCodeSearchResult::get_formatted_addresses_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
                QMSReGeoCodeFormattedAddresses* result = ref.formatted_addresses;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReverseGeoCodeSearchResult::get_address_component_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
                QMSAddressComponent* result = ref.address_component;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReverseGeoCodeSearchResult::get_ad_info_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
                QMSReGeoCodeAdInfo* result = ref.ad_info;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReverseGeoCodeSearchResult::get_address_reference_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
                QMSReGeoCodeAddressReference* result = ref.address_reference;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReverseGeoCodeSearchResult::get_poisArray_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
                NSArray* result = ref.poisArray;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSReverseGeoCodeSearchResult::get_poi_count_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSReverseGeoCodeSearchResult* ref = (QMSReverseGeoCodeSearchResult*) args[@"__this__"];
        
                NSUInteger result = ref.poi_count;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSGeoCodeAdInfo::get_adcode_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSGeoCodeAdInfo* ref = (QMSGeoCodeAdInfo*) args[@"__this__"];
        
                NSString* result = ref.adcode;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSGeoCodeSearchResult::get_location_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSGeoCodeSearchResult* ref = (QMSGeoCodeSearchResult*) args[@"__this__"];
        
                CLLocationCoordinate2D result = ref.location;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(CLLocationCoordinate2D)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSGeoCodeSearchResult::get_address_components_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSGeoCodeSearchResult* ref = (QMSGeoCodeSearchResult*) args[@"__this__"];
        
                QMSAddressComponent* result = ref.address_components;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSGeoCodeSearchResult::get_ad_info_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSGeoCodeSearchResult* ref = (QMSGeoCodeSearchResult*) args[@"__this__"];
        
                QMSGeoCodeAdInfo* result = ref.ad_info;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSGeoCodeSearchResult::get_level_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSGeoCodeSearchResult* ref = (QMSGeoCodeSearchResult*) args[@"__this__"];
        
                NSInteger result = ref.level;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSGeoCodeSearchResult::get_reliability_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSGeoCodeSearchResult* ref = (QMSGeoCodeSearchResult*) args[@"__this__"];
        
                NSUInteger result = ref.reliability;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSWalkingRouteSearchResult::get_routes_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSWalkingRouteSearchResult* ref = (QMSWalkingRouteSearchResult*) args[@"__this__"];
        
                NSArray* result = ref.routes;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSDriveRestriction::get_status_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSDriveRestriction* ref = (QMSDriveRestriction*) args[@"__this__"];
        
                int result = ref.status;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSTaxiFare::get_fare_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSTaxiFare* ref = (QMSTaxiFare*) args[@"__this__"];
        
                double result = ref.fare;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRoutePlan::get_mode_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
                NSString* result = ref.mode;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRoutePlan::get_distance_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
                CGFloat result = ref.distance;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRoutePlan::get_duration_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
                CGFloat result = ref.duration;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRoutePlan::get_direction_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
                NSString* result = ref.direction;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRoutePlan::get_polyline_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
                NSArray* result = ref.polyline;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRoutePlan::get_steps_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
                NSArray* result = ref.steps;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRoutePlan::get_restriction_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
                QMSDriveRestriction* result = ref.restriction;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRoutePlan::get_taxi_fare_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRoutePlan* ref = (QMSRoutePlan*) args[@"__this__"];
        
                QMSTaxiFare* result = ref.taxi_fare;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRouteStep::get_instruction_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRouteStep* ref = (QMSRouteStep*) args[@"__this__"];
        
                NSString* result = ref.instruction;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRouteStep::get_road_name_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRouteStep* ref = (QMSRouteStep*) args[@"__this__"];
        
                NSString* result = ref.road_name;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRouteStep::get_dir_desc_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRouteStep* ref = (QMSRouteStep*) args[@"__this__"];
        
                NSString* result = ref.dir_desc;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRouteStep::get_distance_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRouteStep* ref = (QMSRouteStep*) args[@"__this__"];
        
                CGFloat result = ref.distance;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRouteStep::get_duration_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRouteStep* ref = (QMSRouteStep*) args[@"__this__"];
        
                CGFloat result = ref.duration;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRouteStep::get_act_desc_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRouteStep* ref = (QMSRouteStep*) args[@"__this__"];
        
                NSString* result = ref.act_desc;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSRouteStep::get_polyline_idx_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSRouteStep* ref = (QMSRouteStep*) args[@"__this__"];
        
                NSArray* result = ref.polyline_idx;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSDrivingRouteSearchResult::get_routes_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSDrivingRouteSearchResult* ref = (QMSDrivingRouteSearchResult*) args[@"__this__"];
        
                NSArray* result = ref.routes;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRoutePlan::get_distance_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRoutePlan* ref = (QMSBusingRoutePlan*) args[@"__this__"];
        
                CGFloat result = ref.distance;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRoutePlan::get_duration_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRoutePlan* ref = (QMSBusingRoutePlan*) args[@"__this__"];
        
                CGFloat result = ref.duration;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRoutePlan::get_bounds_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRoutePlan* ref = (QMSBusingRoutePlan*) args[@"__this__"];
        
                NSString* result = ref.bounds;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRoutePlan::get_steps_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRoutePlan* ref = (QMSBusingRoutePlan*) args[@"__this__"];
        
                NSArray* result = ref.steps;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingSegmentRoutePlan::get_mode_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingSegmentRoutePlan* ref = (QMSBusingSegmentRoutePlan*) args[@"__this__"];
        
                NSString* result = ref.mode;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingSegmentRoutePlan::get_distance_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingSegmentRoutePlan* ref = (QMSBusingSegmentRoutePlan*) args[@"__this__"];
        
                CGFloat result = ref.distance;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingSegmentRoutePlan::get_duration_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingSegmentRoutePlan* ref = (QMSBusingSegmentRoutePlan*) args[@"__this__"];
        
                CGFloat result = ref.duration;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingSegmentRoutePlan::get_price_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingSegmentRoutePlan* ref = (QMSBusingSegmentRoutePlan*) args[@"__this__"];
        
                CGFloat result = ref.price;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingSegmentRoutePlan::get_direction_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingSegmentRoutePlan* ref = (QMSBusingSegmentRoutePlan*) args[@"__this__"];
        
                NSString* result = ref.direction;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingSegmentRoutePlan::get_polyline_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingSegmentRoutePlan* ref = (QMSBusingSegmentRoutePlan*) args[@"__this__"];
        
                NSArray* result = ref.polyline;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingSegmentRoutePlan::get_lines_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingSegmentRoutePlan* ref = (QMSBusingSegmentRoutePlan*) args[@"__this__"];
        
                NSArray* result = ref.lines;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSStationEntrance::get_id__batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSStationEntrance* ref = (QMSStationEntrance*) args[@"__this__"];
        
                NSString* result = ref.id_;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSStationEntrance::get_title_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSStationEntrance* ref = (QMSStationEntrance*) args[@"__this__"];
        
                NSString* result = ref.title;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusStation::get_id__batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusStation* ref = (QMSBusStation*) args[@"__this__"];
        
                NSString* result = ref.id_;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusStation::get_title_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusStation* ref = (QMSBusStation*) args[@"__this__"];
        
                NSString* result = ref.title;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusStation::get_location_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusStation* ref = (QMSBusStation*) args[@"__this__"];
        
                CLLocationCoordinate2D result = ref.location;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(CLLocationCoordinate2D)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusStation::get_exit_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusStation* ref = (QMSBusStation*) args[@"__this__"];
        
                QMSStationEntrance* result = ref.exit;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRouteTransitLine::get_vehicle_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRouteTransitLine* ref = (QMSBusingRouteTransitLine*) args[@"__this__"];
        
                NSString* result = ref.vehicle;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRouteTransitLine::get_id__batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRouteTransitLine* ref = (QMSBusingRouteTransitLine*) args[@"__this__"];
        
                NSString* result = ref.id_;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRouteTransitLine::get_distance_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRouteTransitLine* ref = (QMSBusingRouteTransitLine*) args[@"__this__"];
        
                CGFloat result = ref.distance;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRouteTransitLine::get_duration_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRouteTransitLine* ref = (QMSBusingRouteTransitLine*) args[@"__this__"];
        
                NSTimeInterval result = ref.duration;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRouteTransitLine::get_title_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRouteTransitLine* ref = (QMSBusingRouteTransitLine*) args[@"__this__"];
        
                NSString* result = ref.title;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRouteTransitLine::get_polyline_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRouteTransitLine* ref = (QMSBusingRouteTransitLine*) args[@"__this__"];
        
                NSArray* result = ref.polyline;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRouteTransitLine::get_station_count_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRouteTransitLine* ref = (QMSBusingRouteTransitLine*) args[@"__this__"];
        
                NSInteger result = ref.station_count;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRouteTransitLine::get_stations_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRouteTransitLine* ref = (QMSBusingRouteTransitLine*) args[@"__this__"];
        
                NSArray<QMSBusStation*>* result = ref.stations;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRouteTransitLine::get_destination_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRouteTransitLine* ref = (QMSBusingRouteTransitLine*) args[@"__this__"];
        
                QMSStationEntrance* result = ref.destination;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRouteTransitLine::get_geton_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRouteTransitLine* ref = (QMSBusingRouteTransitLine*) args[@"__this__"];
        
                QMSBusStation* result = ref.geton;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRouteTransitLine::get_getoff_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRouteTransitLine* ref = (QMSBusingRouteTransitLine*) args[@"__this__"];
        
                QMSBusStation* result = ref.getoff;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSBusingRouteSearchResult::get_routes_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSBusingRouteSearchResult* ref = (QMSBusingRouteSearchResult*) args[@"__this__"];
        
                NSArray* result = ref.routes;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSDistrictBaseSearchResult::get_data_version_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSDistrictBaseSearchResult* ref = (QMSDistrictBaseSearchResult*) args[@"__this__"];
        
                NSString* result = ref.data_version;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSDistrictData::get_id__batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSDistrictData* ref = (QMSDistrictData*) args[@"__this__"];
        
                NSString* result = ref.id_;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSDistrictData::get_name_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSDistrictData* ref = (QMSDistrictData*) args[@"__this__"];
        
                NSString* result = ref.name;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSDistrictData::get_fullname_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSDistrictData* ref = (QMSDistrictData*) args[@"__this__"];
        
                NSString* result = ref.fullname;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSDistrictData::get_location_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSDistrictData* ref = (QMSDistrictData*) args[@"__this__"];
        
                CLLocationCoordinate2D result = ref.location;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(CLLocationCoordinate2D)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSDistrictData::get_pinyin_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSDistrictData* ref = (QMSDistrictData*) args[@"__this__"];
        
                NSArray<NSString*>* result = ref.pinyin;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMSDistrictData::get_cidx_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMSDistrictData* ref = (QMSDistrictData*) args[@"__this__"];
        
                NSArray<NSNumber*>* result = ref.cidx;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QAnnotation::get_coordinate_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                id<QAnnotation> ref = (id<QAnnotation>) args[@"__this__"];
        
                CLLocationCoordinate2D result = ref.coordinate;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(CLLocationCoordinate2D)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QShape::get_userData_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QShape* ref = (QShape*) args[@"__this__"];
        
                NSObject* result = ref.userData;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QCircleView::get_circle_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QCircleView* ref = (QCircleView*) args[@"__this__"];
        
                QCircle* result = ref.circle;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QOverlayView::get_overlay_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QOverlayView* ref = (QOverlayView*) args[@"__this__"];
        
                id<QOverlay> result = ref.overlay;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QOverlayView::get_displayLevel_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QOverlayView* ref = (QOverlayView*) args[@"__this__"];
        
                QOverlayLevel result = ref.displayLevel;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QOverlayView::get_zIndex_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QOverlayView* ref = (QOverlayView*) args[@"__this__"];
        
                int result = ref.zIndex;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QCoordinateSpan::get_latitudeDelta_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QCoordinateSpan ref;
                [dataValue getValue:&ref];
        
                CLLocationDegrees result = ref.latitudeDelta;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QCoordinateSpan::get_longitudeDelta_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QCoordinateSpan ref;
                [dataValue getValue:&ref];
        
                CLLocationDegrees result = ref.longitudeDelta;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QCoordinateRegion::get_center_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QCoordinateRegion ref;
                [dataValue getValue:&ref];
        
                CLLocationCoordinate2D result = ref.center;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(CLLocationCoordinate2D)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QCoordinateRegion::get_span_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QCoordinateRegion ref;
                [dataValue getValue:&ref];
        
                QCoordinateSpan result = ref.span;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(QCoordinateSpan)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMapPoint::get_x_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QMapPoint ref;
                [dataValue getValue:&ref];
        
                double result = ref.x;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMapPoint::get_y_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QMapPoint ref;
                [dataValue getValue:&ref];
        
                double result = ref.y;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMapSize::get_width_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QMapSize ref;
                [dataValue getValue:&ref];
        
                double result = ref.width;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMapSize::get_height_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QMapSize ref;
                [dataValue getValue:&ref];
        
                double result = ref.height;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMapRect::get_origin_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QMapRect ref;
                [dataValue getValue:&ref];
        
                QMapPoint result = ref.origin;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(QMapPoint)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMapRect::get_size_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QMapRect ref;
                [dataValue getValue:&ref];
        
                QMapSize result = ref.size;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(QMapSize)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMapView::get_userLocationAccessibilityLabel_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMapView* ref = (QMapView*) args[@"__this__"];
        
                NSString* result = ref.userLocationAccessibilityLabel;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMapView::get_annotationAccessibilityFrameClipToBounds_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMapView* ref = (QMapView*) args[@"__this__"];
        
                BOOL result = ref.annotationAccessibilityFrameClipToBounds;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMultiPoint::get_points_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMultiPoint* ref = (QMultiPoint*) args[@"__this__"];
        
                QMapPoint* result = ref.points;
        
                // 返回值: 结构体
                NSValue* __result__ = [NSValue value:&result withObjCType:@encode(QMapPoint*)];
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QMultiPoint::get_pointCount_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QMultiPoint* ref = (QMultiPoint*) args[@"__this__"];
        
                NSUInteger result = ref.pointCount;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QHeatTileOverlayView::get_tileOverlay_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QHeatTileOverlayView* ref = (QHeatTileOverlayView*) args[@"__this__"];
        
                QHeatTileOverlay* result = ref.tileOverlay;
        
                // return a ref
                NSObject* __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QTileOverlayPath::get_x_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QTileOverlayPath ref;
                [dataValue getValue:&ref];
        
                NSInteger result = ref.x;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QTileOverlayPath::get_y_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QTileOverlayPath ref;
                [dataValue getValue:&ref];
        
                NSInteger result = ref.y;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QTileOverlayPath::get_z_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QTileOverlayPath ref;
                [dataValue getValue:&ref];
        
                NSInteger result = ref.z;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QTileOverlayPath::get_language_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QTileOverlayPath ref;
                [dataValue getValue:&ref];
        
                NSInteger result = ref.language;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QTileOverlayPath::get_contentScaleFactor_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                NSValue* dataValue = (NSValue*) ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
                QTileOverlayPath ref;
                [dataValue getValue:&ref];
        
                CGFloat result = ref.contentScaleFactor;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QTileOverlay::get_URLTemplate_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QTileOverlay* ref = (QTileOverlay*) args[@"__this__"];
        
                NSString* result = ref.URLTemplate;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QTileOverlay::get_isHighResoultionTile_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QTileOverlay* ref = (QTileOverlay*) args[@"__this__"];
        
                BOOL result = ref.isHighResoultionTile;
        
                // 返回值: Value
                NSObject* __result__ = @(result);
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QTileOverlay::get_tileCacheDir_batch": ^(NSObject <FlutterPluginRegistrar>* registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray* resultList = [NSMutableArray array];
        
            for (int __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // ref object
                QTileOverlay* ref = (QTileOverlay*) args[@"__this__"];
        
                NSString* result = ref.tileCacheDir;
        
                // 返回值: jsonable
                id __result__ = result;
        
                [resultList addObject:__result__];
            }
        
            methodResult(resultList);
        },
        
        @"QPinAnnotationView::set_pinColor": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPinAnnotationView::set_pinColor");
            }
        
            // args
            // enum arg
            QPinAnnotationColor pinColor = (QPinAnnotationColor) [args[@"pinColor"] integerValue];
        
            // ref
            QPinAnnotationView* ref = (QPinAnnotationView*) args[@"__this__"];
        
            ref.pinColor = pinColor;
            methodResult(@"success");
        },
        
        @"QPinAnnotationView::set_animatesDrop": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPinAnnotationView::set_animatesDrop");
            }
        
            // args
            // jsonable arg
            BOOL animatesDrop = [args[@"animatesDrop"] boolValue];
        
            // ref
            QPinAnnotationView* ref = (QPinAnnotationView*) args[@"__this__"];
        
            ref.animatesDrop = animatesDrop;
            methodResult(@"success");
        },
        
        @"QAnnotationView::set_annotation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationView::set_annotation");
            }
        
            // args
            // ref arg
            id<QAnnotation> annotation = (id<QAnnotation>) (args[@"annotation"] == [NSNull null] ? nil : args[@"annotation"]);
        
            // ref
            QAnnotationView* ref = (QAnnotationView*) args[@"__this__"];
        
            ref.annotation = annotation;
            methodResult(@"success");
        },
        
        @"QAnnotationView::set_zIndex": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationView::set_zIndex");
            }
        
            // args
            // jsonable arg
            int zIndex = [args[@"zIndex"] intValue];
        
            // ref
            QAnnotationView* ref = (QAnnotationView*) args[@"__this__"];
        
            ref.zIndex = zIndex;
            methodResult(@"success");
        },
        
        @"QAnnotationView::set_image": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationView::set_image");
            }
        
            // args
            // ref arg
            UIImage* image = (UIImage*) (args[@"image"] == [NSNull null] ? nil : args[@"image"]);
        
            // ref
            QAnnotationView* ref = (QAnnotationView*) args[@"__this__"];
        
            ref.image = image;
            methodResult(@"success");
        },
        
        @"QAnnotationView::set_centerOffset": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationView::set_centerOffset");
            }
        
            // args
            // struct arg
            NSValue* centerOffsetValue = (NSValue*) args[@"centerOffset"];
            CGPoint centerOffset;
            [centerOffsetValue getValue:&centerOffset];
        
            // ref
            QAnnotationView* ref = (QAnnotationView*) args[@"__this__"];
        
            ref.centerOffset = centerOffset;
            methodResult(@"success");
        },
        
        @"QAnnotationView::set_calloutOffset": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationView::set_calloutOffset");
            }
        
            // args
            // struct arg
            NSValue* calloutOffsetValue = (NSValue*) args[@"calloutOffset"];
            CGPoint calloutOffset;
            [calloutOffsetValue getValue:&calloutOffset];
        
            // ref
            QAnnotationView* ref = (QAnnotationView*) args[@"__this__"];
        
            ref.calloutOffset = calloutOffset;
            methodResult(@"success");
        },
        
        @"QAnnotationView::set_enabled": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationView::set_enabled");
            }
        
            // args
            // jsonable arg
            BOOL enabled = [args[@"enabled"] boolValue];
        
            // ref
            QAnnotationView* ref = (QAnnotationView*) args[@"__this__"];
        
            ref.enabled = enabled;
            methodResult(@"success");
        },
        
        @"QAnnotationView::set_selected": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationView::set_selected");
            }
        
            // args
            // jsonable arg
            BOOL selected = [args[@"selected"] boolValue];
        
            // ref
            QAnnotationView* ref = (QAnnotationView*) args[@"__this__"];
        
            ref.selected = selected;
            methodResult(@"success");
        },
        
        @"QAnnotationView::set_canShowCallout": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationView::set_canShowCallout");
            }
        
            // args
            // jsonable arg
            BOOL canShowCallout = [args[@"canShowCallout"] boolValue];
        
            // ref
            QAnnotationView* ref = (QAnnotationView*) args[@"__this__"];
        
            ref.canShowCallout = canShowCallout;
            methodResult(@"success");
        },
        
        @"QAnnotationView::set_customCalloutView": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationView::set_customCalloutView");
            }
        
            // args
            // ref arg
            UIView* customCalloutView = (UIView*) (args[@"customCalloutView"] == [NSNull null] ? nil : args[@"customCalloutView"]);
        
            // ref
            QAnnotationView* ref = (QAnnotationView*) args[@"__this__"];
        
            ref.customCalloutView = customCalloutView;
            methodResult(@"success");
        },
        
        @"QAnnotationView::set_leftCalloutAccessoryView": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationView::set_leftCalloutAccessoryView");
            }
        
            // args
            // ref arg
            UIView* leftCalloutAccessoryView = (UIView*) (args[@"leftCalloutAccessoryView"] == [NSNull null] ? nil : args[@"leftCalloutAccessoryView"]);
        
            // ref
            QAnnotationView* ref = (QAnnotationView*) args[@"__this__"];
        
            ref.leftCalloutAccessoryView = leftCalloutAccessoryView;
            methodResult(@"success");
        },
        
        @"QAnnotationView::set_rightCalloutAccessoryView": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationView::set_rightCalloutAccessoryView");
            }
        
            // args
            // ref arg
            UIView* rightCalloutAccessoryView = (UIView*) (args[@"rightCalloutAccessoryView"] == [NSNull null] ? nil : args[@"rightCalloutAccessoryView"]);
        
            // ref
            QAnnotationView* ref = (QAnnotationView*) args[@"__this__"];
        
            ref.rightCalloutAccessoryView = rightCalloutAccessoryView;
            methodResult(@"success");
        },
        
        @"QAnnotationView::set_draggable": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationView::set_draggable");
            }
        
            // args
            // jsonable arg
            BOOL draggable = [args[@"draggable"] boolValue];
        
            // ref
            QAnnotationView* ref = (QAnnotationView*) args[@"__this__"];
        
            ref.draggable = draggable;
            methodResult(@"success");
        },
        
        @"QAnnotationView::set_dragState": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QAnnotationView::set_dragState");
            }
        
            // args
            // enum arg
            QAnnotationViewDragState dragState = (QAnnotationViewDragState) [args[@"dragState"] integerValue];
        
            // ref
            QAnnotationView* ref = (QAnnotationView*) args[@"__this__"];
        
            ref.dragState = dragState;
            methodResult(@"success");
        },
        
        @"QPointAnnotation::set_coordinate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPointAnnotation::set_coordinate");
            }
        
            // args
            // struct arg
            NSValue* coordinateValue = (NSValue*) args[@"coordinate"];
            CLLocationCoordinate2D coordinate;
            [coordinateValue getValue:&coordinate];
        
            // ref
            QPointAnnotation* ref = (QPointAnnotation*) args[@"__this__"];
        
            ref.coordinate = coordinate;
            methodResult(@"success");
        },
        
        @"QPointAnnotation::set_title": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPointAnnotation::set_title");
            }
        
            // args
            // jsonable arg
            NSString* title = (NSString*) args[@"title"];
        
            // ref
            QPointAnnotation* ref = (QPointAnnotation*) args[@"__this__"];
        
            ref.title = title;
            methodResult(@"success");
        },
        
        @"QPointAnnotation::set_subtitle": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPointAnnotation::set_subtitle");
            }
        
            // args
            // jsonable arg
            NSString* subtitle = (NSString*) args[@"subtitle"];
        
            // ref
            QPointAnnotation* ref = (QPointAnnotation*) args[@"__this__"];
        
            ref.subtitle = subtitle;
            methodResult(@"success");
        },
        
        @"QPointAnnotation::set_indoorInfo": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QPointAnnotation::set_indoorInfo");
            }
        
            // args
            // ref arg
            QIndoorInfo* indoorInfo = (QIndoorInfo*) (args[@"indoorInfo"] == [NSNull null] ? nil : args[@"indoorInfo"]);
        
            // ref
            QPointAnnotation* ref = (QPointAnnotation*) args[@"__this__"];
        
            ref.indoorInfo = indoorInfo;
            methodResult(@"success");
        },
        
        @"QTextStyle::set_textColor": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTextStyle::set_textColor");
            }
        
            // args
            // ref arg
            UIColor* textColor = (UIColor*) (args[@"textColor"] == [NSNull null] ? nil : args[@"textColor"]);
        
            // ref
            QTextStyle* ref = (QTextStyle*) args[@"__this__"];
        
            ref.textColor = textColor;
            methodResult(@"success");
        },
        
        @"QTextStyle::set_strokeColor": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTextStyle::set_strokeColor");
            }
        
            // args
            // ref arg
            UIColor* strokeColor = (UIColor*) (args[@"strokeColor"] == [NSNull null] ? nil : args[@"strokeColor"]);
        
            // ref
            QTextStyle* ref = (QTextStyle*) args[@"__this__"];
        
            ref.strokeColor = strokeColor;
            methodResult(@"success");
        },
        
        @"QTextStyle::set_fontSize": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTextStyle::set_fontSize");
            }
        
            // args
            // jsonable arg
            CGFloat fontSize = [args[@"fontSize"] floatValue];
        
            // ref
            QTextStyle* ref = (QTextStyle*) args[@"__this__"];
        
            ref.fontSize = fontSize;
            methodResult(@"success");
        },
        
        @"QTextStyle::set_priority": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QTextStyle::set_priority");
            }
        
            // args
            // enum arg
            QTextPriority priority = (QTextPriority) [args[@"priority"] integerValue];
        
            // ref
            QTextStyle* ref = (QTextStyle*) args[@"__this__"];
        
            ref.priority = priority;
            methodResult(@"success");
        },
        
        @"QSegmentText::set_startIndex": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QSegmentText::set_startIndex");
            }
        
            // args
            // jsonable arg
            int startIndex = [args[@"startIndex"] intValue];
        
            // ref
            QSegmentText* ref = (QSegmentText*) args[@"__this__"];
        
            ref.startIndex = startIndex;
            methodResult(@"success");
        },
        
        @"QSegmentText::set_endIndex": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QSegmentText::set_endIndex");
            }
        
            // args
            // jsonable arg
            int endIndex = [args[@"endIndex"] intValue];
        
            // ref
            QSegmentText* ref = (QSegmentText*) args[@"__this__"];
        
            ref.endIndex = endIndex;
            methodResult(@"success");
        },
        
        @"QSegmentText::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QSegmentText::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            QSegmentText* ref = (QSegmentText*) args[@"__this__"];
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"QText::set_style": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QText::set_style");
            }
        
            // args
            // ref arg
            QTextStyle* style = (QTextStyle*) (args[@"style"] == [NSNull null] ? nil : args[@"style"]);
        
            // ref
            QText* ref = (QText*) args[@"__this__"];
        
            ref.style = style;
            methodResult(@"success");
        },
        
        @"QMSPoiSearchOption::set_page_size": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiSearchOption::set_page_size");
            }
        
            // args
            // jsonable arg
            NSUInteger page_size = [args[@"page_size"] unsignedIntegerValue];
        
            // ref
            QMSPoiSearchOption* ref = (QMSPoiSearchOption*) args[@"__this__"];
        
            ref.page_size = page_size;
            methodResult(@"success");
        },
        
        @"QMSPoiSearchOption::set_page_index": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiSearchOption::set_page_index");
            }
        
            // args
            // jsonable arg
            NSUInteger page_index = [args[@"page_index"] unsignedIntegerValue];
        
            // ref
            QMSPoiSearchOption* ref = (QMSPoiSearchOption*) args[@"__this__"];
        
            ref.page_index = page_index;
            methodResult(@"success");
        },
        
        @"QMSPoiSearchOption::set_keyword": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiSearchOption::set_keyword");
            }
        
            // args
            // jsonable arg
            NSString* keyword = (NSString*) args[@"keyword"];
        
            // ref
            QMSPoiSearchOption* ref = (QMSPoiSearchOption*) args[@"__this__"];
        
            ref.keyword = keyword;
            methodResult(@"success");
        },
        
        @"QMSPoiSearchOption::set_boundary": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiSearchOption::set_boundary");
            }
        
            // args
            // jsonable arg
            NSString* boundary = (NSString*) args[@"boundary"];
        
            // ref
            QMSPoiSearchOption* ref = (QMSPoiSearchOption*) args[@"__this__"];
        
            ref.boundary = boundary;
            methodResult(@"success");
        },
        
        @"QMSPoiSearchOption::set_filter": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiSearchOption::set_filter");
            }
        
            // args
            // jsonable arg
            NSString* filter = (NSString*) args[@"filter"];
        
            // ref
            QMSPoiSearchOption* ref = (QMSPoiSearchOption*) args[@"__this__"];
        
            ref.filter = filter;
            methodResult(@"success");
        },
        
        @"QMSPoiSearchOption::set_orderby": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSPoiSearchOption::set_orderby");
            }
        
            // args
            // jsonable arg
            NSString* orderby = (NSString*) args[@"orderby"];
        
            // ref
            QMSPoiSearchOption* ref = (QMSPoiSearchOption*) args[@"__this__"];
        
            ref.orderby = orderby;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSearchOption::set_keyword": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSearchOption::set_keyword");
            }
        
            // args
            // jsonable arg
            NSString* keyword = (NSString*) args[@"keyword"];
        
            // ref
            QMSSuggestionSearchOption* ref = (QMSSuggestionSearchOption*) args[@"__this__"];
        
            ref.keyword = keyword;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSearchOption::set_region": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSearchOption::set_region");
            }
        
            // args
            // jsonable arg
            NSString* region = (NSString*) args[@"region"];
        
            // ref
            QMSSuggestionSearchOption* ref = (QMSSuggestionSearchOption*) args[@"__this__"];
        
            ref.region = region;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSearchOption::set_filter": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSearchOption::set_filter");
            }
        
            // args
            // jsonable arg
            NSString* filter = (NSString*) args[@"filter"];
        
            // ref
            QMSSuggestionSearchOption* ref = (QMSSuggestionSearchOption*) args[@"__this__"];
        
            ref.filter = filter;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSearchOption::set_region_fix": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSearchOption::set_region_fix");
            }
        
            // args
            // jsonable arg
            NSNumber* region_fix = (NSNumber*) args[@"region_fix"];
        
            // ref
            QMSSuggestionSearchOption* ref = (QMSSuggestionSearchOption*) args[@"__this__"];
        
            ref.region_fix = region_fix;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSearchOption::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSearchOption::set_location");
            }
        
            // args
            // jsonable arg
            NSString* location = (NSString*) args[@"location"];
        
            // ref
            QMSSuggestionSearchOption* ref = (QMSSuggestionSearchOption*) args[@"__this__"];
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSearchOption::set_get_subpois": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSearchOption::set_get_subpois");
            }
        
            // args
            // jsonable arg
            NSNumber* get_subpois = (NSNumber*) args[@"get_subpois"];
        
            // ref
            QMSSuggestionSearchOption* ref = (QMSSuggestionSearchOption*) args[@"__this__"];
        
            ref.get_subpois = get_subpois;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSearchOption::set_policy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSearchOption::set_policy");
            }
        
            // args
            // jsonable arg
            NSNumber* policy = (NSNumber*) args[@"policy"];
        
            // ref
            QMSSuggestionSearchOption* ref = (QMSSuggestionSearchOption*) args[@"__this__"];
        
            ref.policy = policy;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSearchOption::set_address_format": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSearchOption::set_address_format");
            }
        
            // args
            // jsonable arg
            NSString* address_format = (NSString*) args[@"address_format"];
        
            // ref
            QMSSuggestionSearchOption* ref = (QMSSuggestionSearchOption*) args[@"__this__"];
        
            ref.address_format = address_format;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSearchOption::set_page_index": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSearchOption::set_page_index");
            }
        
            // args
            // jsonable arg
            NSNumber* page_index = (NSNumber*) args[@"page_index"];
        
            // ref
            QMSSuggestionSearchOption* ref = (QMSSuggestionSearchOption*) args[@"__this__"];
        
            ref.page_index = page_index;
            methodResult(@"success");
        },
        
        @"QMSSuggestionSearchOption::set_page_size": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSSuggestionSearchOption::set_page_size");
            }
        
            // args
            // jsonable arg
            NSNumber* page_size = (NSNumber*) args[@"page_size"];
        
            // ref
            QMSSuggestionSearchOption* ref = (QMSSuggestionSearchOption*) args[@"__this__"];
        
            ref.page_size = page_size;
            methodResult(@"success");
        },
        
        @"QMSReverseGeoCodeSearchOption::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReverseGeoCodeSearchOption::set_location");
            }
        
            // args
            // jsonable arg
            NSString* location = (NSString*) args[@"location"];
        
            // ref
            QMSReverseGeoCodeSearchOption* ref = (QMSReverseGeoCodeSearchOption*) args[@"__this__"];
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"QMSReverseGeoCodeSearchOption::set_poi_options": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReverseGeoCodeSearchOption::set_poi_options");
            }
        
            // args
            // jsonable arg
            NSString* poi_options = (NSString*) args[@"poi_options"];
        
            // ref
            QMSReverseGeoCodeSearchOption* ref = (QMSReverseGeoCodeSearchOption*) args[@"__this__"];
        
            ref.poi_options = poi_options;
            methodResult(@"success");
        },
        
        @"QMSReverseGeoCodeSearchOption::set_get_poi": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"QMSReverseGeoCodeSearchOption::set_get_poi");
            }
        
            // args
            // jsonable arg
            BOOL get_poi = [args[@"get_poi"] boolValue];
        
            // ref
            QMSReverseGeoCodeSearchOption* ref = (QMSReverseGeoCodeSearchOption*) args[@"__this__"];
        
            ref.get_poi = get_poi;
            methodResult(@"success");
        },
        
    };
}

@end
