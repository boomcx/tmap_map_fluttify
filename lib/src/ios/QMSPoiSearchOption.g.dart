// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:tmap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class QMSPoiSearchOption extends QMSSearchOption  {
  //region constants
  static const String name__ = 'QMSPoiSearchOption';

  @override
  final String tag__ = 'tmap_map_fluttify';

  
  //endregion

  //region creators
  static Future<QMSPoiSearchOption> create__({ bool init = true /* ios only */ }) async {
    final refId = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::createQMSPoiSearchOption', {'init': init});
    final object = QMSPoiSearchOption()..refId = refId;
    return object;
  }
  
  static Future<List<QMSPoiSearchOption>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::create_batchQMSPoiSearchOption', {'length': length, 'init': init});
  
    final List<QMSPoiSearchOption> typedResult = resultBatch.map((result) => QMSPoiSearchOption()..refId = result).toList();
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<int> get_page_size() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSPoiSearchOption::get_page_size", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<int> get_page_index() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSPoiSearchOption::get_page_index", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<String> get_keyword() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSPoiSearchOption::get_keyword", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<String> get_boundary() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSPoiSearchOption::get_boundary", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<String> get_filter() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSPoiSearchOption::get_filter", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<String> get_orderby() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSPoiSearchOption::get_orderby", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  //endregion

  //region setters
  Future<void> set_page_size(int page_size) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::set_page_size', <String, dynamic>{'__this__': this, "page_size": page_size});
  
  
  }
  
  Future<void> set_page_index(int page_index) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::set_page_index', <String, dynamic>{'__this__': this, "page_index": page_index});
  
  
  }
  
  Future<void> set_keyword(String keyword) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::set_keyword', <String, dynamic>{'__this__': this, "keyword": keyword});
  
  
  }
  
  Future<void> set_boundary(String boundary) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::set_boundary', <String, dynamic>{'__this__': this, "boundary": boundary});
  
  
  }
  
  Future<void> set_filter(String filter) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::set_filter', <String, dynamic>{'__this__': this, "filter": filter});
  
  
  }
  
  Future<void> set_orderby(String orderby) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::set_orderby', <String, dynamic>{'__this__': this, "orderby": orderby});
  
  
  }
  
  //endregion

  //region methods
  
  Future<void> setBoundaryByRegionWithCityName_autoExtend(String cityName, bool isAutoEntend) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: QMSPoiSearchOption@$refId::setBoundaryByRegionWithCityName([\'cityName\':$cityName, \'isAutoEntend\':$isAutoEntend])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::setBoundaryByRegionWithCityName_autoExtend', {"cityName": cityName, "isAutoEntend": isAutoEntend, "__this__": this});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
      return __return__;
    }
  }
  
  
  Future<void> setBoundaryByRegionWithCityName_autoExtend_center(String cityName, bool isAutoEntend, CLLocationCoordinate2D coordinate) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: QMSPoiSearchOption@$refId::setBoundaryByRegionWithCityName([\'cityName\':$cityName, \'isAutoEntend\':$isAutoEntend])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::setBoundaryByRegionWithCityName_autoExtend_center', {"cityName": cityName, "isAutoEntend": isAutoEntend, "coordinate": coordinate, "__this__": this});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
      return __return__;
    }
  }
  
  
  Future<void> setBoundaryByNearbyWithCenterCoordinate_radius_autoExtend(CLLocationCoordinate2D centerCoordinate, int radius, bool isAutoEntend) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: QMSPoiSearchOption@$refId::setBoundaryByNearbyWithCenterCoordinate([\'radius\':$radius, \'isAutoEntend\':$isAutoEntend])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::setBoundaryByNearbyWithCenterCoordinate_radius_autoExtend', {"centerCoordinate": centerCoordinate, "radius": radius, "isAutoEntend": isAutoEntend, "__this__": this});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
      return __return__;
    }
  }
  
  
  Future<void> setBoundaryByRectangleWithleftBottomCoordinate_rightTopCoordinate(CLLocationCoordinate2D leftBottomCoordinate, CLLocationCoordinate2D rightTopCoordinate) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: QMSPoiSearchOption@$refId::setBoundaryByRectangleWithleftBottomCoordinate([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::setBoundaryByRectangleWithleftBottomCoordinate_rightTopCoordinate', {"leftBottomCoordinate": leftBottomCoordinate, "rightTopCoordinate": rightTopCoordinate, "__this__": this});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
      return __return__;
    }
  }
  
  
  Future<void> setFilterByCategories(List<String> categories) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: QMSPoiSearchOption@$refId::setFilterByCategories([\'categories\':$categories])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::setFilterByCategories', {"categories": categories, "__this__": this});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
      return __return__;
    }
  }
  
  //endregion

  @override
  String toString() {
    return 'QMSPoiSearchOption{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension QMSPoiSearchOption_Batch on List<QMSPoiSearchOption> {
  //region getters
  Future<List<int>> get_page_size_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSPoiSearchOption::get_page_size_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<int>> get_page_index_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSPoiSearchOption::get_page_index_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<String>> get_keyword_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSPoiSearchOption::get_keyword_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<String>> get_boundary_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSPoiSearchOption::get_boundary_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<String>> get_filter_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSPoiSearchOption::get_filter_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<String>> get_orderby_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSPoiSearchOption::get_orderby_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_page_size_batch(List<int> page_size) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('QMSPoiSearchOption::set_page_size_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "page_size": page_size[__i__]}]);
  
  
  }
  
  Future<void> set_page_index_batch(List<int> page_index) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('QMSPoiSearchOption::set_page_index_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "page_index": page_index[__i__]}]);
  
  
  }
  
  Future<void> set_keyword_batch(List<String> keyword) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('QMSPoiSearchOption::set_keyword_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "keyword": keyword[__i__]}]);
  
  
  }
  
  Future<void> set_boundary_batch(List<String> boundary) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('QMSPoiSearchOption::set_boundary_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "boundary": boundary[__i__]}]);
  
  
  }
  
  Future<void> set_filter_batch(List<String> filter) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('QMSPoiSearchOption::set_filter_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "filter": filter[__i__]}]);
  
  
  }
  
  Future<void> set_orderby_batch(List<String> orderby) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('QMSPoiSearchOption::set_orderby_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "orderby": orderby[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  Future<List<void>> setBoundaryByRegionWithCityName_autoExtend_batch(List<String> cityName, List<bool> isAutoEntend) async {
    if (cityName.length != isAutoEntend.length) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::setBoundaryByRegionWithCityName_autoExtend_batch', [for (int __i__ = 0; __i__ < length; __i__++) {"cityName": cityName[__i__], "isAutoEntend": isAutoEntend[__i__], "__this__": this[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
      return typedResult;
    }
  }
  
  
  Future<List<void>> setBoundaryByRegionWithCityName_autoExtend_center_batch(List<String> cityName, List<bool> isAutoEntend, List<CLLocationCoordinate2D> coordinate) async {
    if (cityName.length != isAutoEntend.length || isAutoEntend.length != coordinate.length) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::setBoundaryByRegionWithCityName_autoExtend_center_batch', [for (int __i__ = 0; __i__ < length; __i__++) {"cityName": cityName[__i__], "isAutoEntend": isAutoEntend[__i__], "coordinate": coordinate[__i__], "__this__": this[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
      return typedResult;
    }
  }
  
  
  Future<List<void>> setBoundaryByNearbyWithCenterCoordinate_radius_autoExtend_batch(List<CLLocationCoordinate2D> centerCoordinate, List<int> radius, List<bool> isAutoEntend) async {
    if (centerCoordinate.length != radius.length || radius.length != isAutoEntend.length) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::setBoundaryByNearbyWithCenterCoordinate_radius_autoExtend_batch', [for (int __i__ = 0; __i__ < length; __i__++) {"centerCoordinate": centerCoordinate[__i__], "radius": radius[__i__], "isAutoEntend": isAutoEntend[__i__], "__this__": this[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
      return typedResult;
    }
  }
  
  
  Future<List<void>> setBoundaryByRectangleWithleftBottomCoordinate_rightTopCoordinate_batch(List<CLLocationCoordinate2D> leftBottomCoordinate, List<CLLocationCoordinate2D> rightTopCoordinate) async {
    if (leftBottomCoordinate.length != rightTopCoordinate.length) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::setBoundaryByRectangleWithleftBottomCoordinate_rightTopCoordinate_batch', [for (int __i__ = 0; __i__ < length; __i__++) {"leftBottomCoordinate": leftBottomCoordinate[__i__], "rightTopCoordinate": rightTopCoordinate[__i__], "__this__": this[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
      return typedResult;
    }
  }
  
  
  Future<List<void>> setFilterByCategories_batch(List<List<String>> categories) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSPoiSearchOption::setFilterByCategories_batch', [for (int __i__ = 0; __i__ < length; __i__++) {"categories": categories[__i__], "__this__": this[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
      return typedResult;
    }
  }
  
  //endregion
}