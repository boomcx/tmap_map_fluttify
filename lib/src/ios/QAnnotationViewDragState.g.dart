// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum QAnnotationViewDragState {
  QAnnotationViewDragStateNone /* 0 */,
  QAnnotationViewDragStateStarting /* null */,
  QAnnotationViewDragStateDragging /* null */,
  QAnnotationViewDragStateCanceling /* null */,
  QAnnotationViewDragStateEnding /* null */
}

extension QAnnotationViewDragStateToX on QAnnotationViewDragState {
  int toValue() {
    switch (this) {
      case QAnnotationViewDragState.QAnnotationViewDragStateNone: return 0;
      case QAnnotationViewDragState.QAnnotationViewDragStateStarting: return QAnnotationViewDragState.QAnnotationViewDragStateStarting.index + 0;
      case QAnnotationViewDragState.QAnnotationViewDragStateDragging: return QAnnotationViewDragState.QAnnotationViewDragStateDragging.index + 0;
      case QAnnotationViewDragState.QAnnotationViewDragStateCanceling: return QAnnotationViewDragState.QAnnotationViewDragStateCanceling.index + 0;
      case QAnnotationViewDragState.QAnnotationViewDragStateEnding: return QAnnotationViewDragState.QAnnotationViewDragStateEnding.index + 0;
      default: return 0;
    }
  }
}

extension QAnnotationViewDragStateFromX on int {
  QAnnotationViewDragState toQAnnotationViewDragState() {
    switch (this) {
      case 0: return QAnnotationViewDragState.QAnnotationViewDragStateNone;
      default: return QAnnotationViewDragState.values[this + 0];
    }
  }
}