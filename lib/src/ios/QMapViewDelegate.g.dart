// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:tmap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';



mixin QMapViewDelegate on NSObject {
  

  

  @override
  final String tag__ = 'tmap_map_fluttify';

  

  

  @mustCallSuper
  Future<void> mapViewInitComplete(QMapView mapView) {}
  
  @mustCallSuper
  Future<void> mapViewDidFailLoadingMap_withError(QMapView mapView, NSError error) {}
  
  @mustCallSuper
  Future<void> mapView_regionWillChangeAnimated_gesture(QMapView mapView, bool animated, bool bGesture) {}
  
  @mustCallSuper
  Future<void> mapViewRegionChange(QMapView mapView) {}
  
  @mustCallSuper
  Future<void> mapView_regionDidChangeAnimated_gesture(QMapView mapView, bool animated, bool bGesture) {}
  
  @mustCallSuper
  Future<void> mapView_didTapAtCoordinate(QMapView mapView, CLLocationCoordinate2D coordinate) {}
  
  @mustCallSuper
  Future<void> mapView_didTapPoi(QMapView mapView, QPoiInfo poi) {}
  
  @mustCallSuper
  Future<void> mapView_didTapOverlay(QMapView mapView, QOverlay overlay) {}
  
  @mustCallSuper
  Future<QAnnotationView> mapView_viewForAnnotation(QMapView mapView, QAnnotation annotation) {}
  
  @mustCallSuper
  Future<UIView> mapView_customCalloutForAnnotationView(QMapView mapView, QAnnotationView annotationView) {}
  
  @mustCallSuper
  Future<void> mapView_didAddAnnotationViews(QMapView mapView, List<QAnnotationView> views) {}
  
  @mustCallSuper
  Future<void> mapView_didSelectAnnotationView(QMapView mapView, QAnnotationView view) {}
  
  @mustCallSuper
  Future<void> mapView_didDeselectAnnotationView(QMapView mapView, QAnnotationView view) {}
  
  @mustCallSuper
  Future<void> mapView_annotationView_didChangeDragState_fromOldState(QMapView mapView, QAnnotationView view, QAnnotationViewDragState newState, QAnnotationViewDragState oldState) {}
  
  @mustCallSuper
  Future<void> mapView_annotationView_calloutAccessoryControlTapped(QMapView mapView, QAnnotationView view, UIControl control) {}
  
  @mustCallSuper
  Future<void> mapView_annotationViewCalloutTapped(QMapView mapView, QAnnotationView view) {}
  
  @mustCallSuper
  Future<QOverlayView> mapView_viewForOverlay(QMapView mapView, QOverlay overlay) {}
  
  @mustCallSuper
  Future<void> mapView_didAddOverlayViews(QMapView mapView, List<dynamic> overlayViews) {}
  
  @mustCallSuper
  Future<void> mapViewWillStartLocatingUser(QMapView mapView) {}
  
  @mustCallSuper
  Future<void> mapViewDidStopLocatingUser(QMapView mapView) {}
  
  @mustCallSuper
  Future<void> mapView_didUpdateUserLocation_fromHeading(QMapView mapView, QUserLocation userLocation, bool fromHeading) {}
  
  @mustCallSuper
  Future<void> mapView_didFailToLocateUserWithError(QMapView mapView, NSError error) {}
  
  @mustCallSuper
  Future<void> mapView_didChangeUserTrackingMode_animated(QMapView mapView, QUserTrackingMode mode, bool animated) {}
  
}

