// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:tmap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class QMSReverseGeoCodeSearchOption extends QMSSearchOption  {
  //region constants
  static const String name__ = 'QMSReverseGeoCodeSearchOption';

  @override
  final String tag__ = 'tmap_map_fluttify';

  
  //endregion

  //region creators
  static Future<QMSReverseGeoCodeSearchOption> create__({ bool init = true /* ios only */ }) async {
    final refId = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::createQMSReverseGeoCodeSearchOption', {'init': init});
    final object = QMSReverseGeoCodeSearchOption()..refId = refId;
    return object;
  }
  
  static Future<List<QMSReverseGeoCodeSearchOption>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::create_batchQMSReverseGeoCodeSearchOption', {'length': length, 'init': init});
  
    final List<QMSReverseGeoCodeSearchOption> typedResult = resultBatch.map((result) => QMSReverseGeoCodeSearchOption()..refId = result).toList();
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<String> get_location() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSReverseGeoCodeSearchOption::get_location", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<String> get_poi_options() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSReverseGeoCodeSearchOption::get_poi_options", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<bool> get_get_poi() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSReverseGeoCodeSearchOption::get_get_poi", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  //endregion

  //region setters
  Future<void> set_location(String location) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSReverseGeoCodeSearchOption::set_location', <String, dynamic>{'__this__': this, "location": location});
  
  
  }
  
  Future<void> set_poi_options(String poi_options) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSReverseGeoCodeSearchOption::set_poi_options', <String, dynamic>{'__this__': this, "poi_options": poi_options});
  
  
  }
  
  Future<void> set_get_poi(bool get_poi) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSReverseGeoCodeSearchOption::set_get_poi', <String, dynamic>{'__this__': this, "get_poi": get_poi});
  
  
  }
  
  //endregion

  //region methods
  
  Future<void> setLocationWithCenterCoordinate(CLLocationCoordinate2D centerCoordinate) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: QMSReverseGeoCodeSearchOption@$refId::setLocationWithCenterCoordinate([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSReverseGeoCodeSearchOption::setLocationWithCenterCoordinate', {"centerCoordinate": centerCoordinate, "__this__": this});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
      return __return__;
    }
  }
  
  //endregion

  @override
  String toString() {
    return 'QMSReverseGeoCodeSearchOption{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension QMSReverseGeoCodeSearchOption_Batch on List<QMSReverseGeoCodeSearchOption> {
  //region getters
  Future<List<String>> get_location_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSReverseGeoCodeSearchOption::get_location_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<String>> get_poi_options_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSReverseGeoCodeSearchOption::get_poi_options_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<bool>> get_get_poi_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("QMSReverseGeoCodeSearchOption::get_get_poi_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<bool>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_location_batch(List<String> location) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('QMSReverseGeoCodeSearchOption::set_location_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "location": location[__i__]}]);
  
  
  }
  
  Future<void> set_poi_options_batch(List<String> poi_options) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('QMSReverseGeoCodeSearchOption::set_poi_options_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "poi_options": poi_options[__i__]}]);
  
  
  }
  
  Future<void> set_get_poi_batch(List<bool> get_poi) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('QMSReverseGeoCodeSearchOption::set_get_poi_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "get_poi": get_poi[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  Future<List<void>> setLocationWithCenterCoordinate_batch(List<CLLocationCoordinate2D> centerCoordinate) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('QMSReverseGeoCodeSearchOption::setLocationWithCenterCoordinate_batch', [for (int __i__ = 0; __i__ < length; __i__++) {"centerCoordinate": centerCoordinate[__i__], "__this__": this[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
      return typedResult;
    }
  }
  
  //endregion
}