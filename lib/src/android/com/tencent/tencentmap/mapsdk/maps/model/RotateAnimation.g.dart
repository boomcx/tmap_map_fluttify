// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:tmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class com_tencent_tencentmap_mapsdk_maps_model_RotateAnimation extends com_tencent_tencentmap_mapsdk_maps_model_BaseAnimation with com_tencent_tencentmap_mapsdk_maps_model_Animation {
  //region constants
  static const String name__ = 'com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation';

  @override
  final String tag__ = 'tmap_map_fluttify';

  
  //endregion

  //region creators
  static Future<com_tencent_tencentmap_mapsdk_maps_model_RotateAnimation> create__float__float__float__float__float(double fromdegree, double todegree, double pivotx, double pivoty, double pivotz) async {
    final refId = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::createcom_tencent_tencentmap_mapsdk_maps_model_RotateAnimation__float__float__float__float__float', {"fromdegree": fromdegree, "todegree": todegree, "pivotx": pivotx, "pivoty": pivoty, "pivotz": pivotz});
    final object = com_tencent_tencentmap_mapsdk_maps_model_RotateAnimation()..refId = refId;
    return object;
  }
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_model_RotateAnimation>> create_batch__float__float__float__float__float(List<double> fromdegree, List<double> todegree, List<double> pivotx, List<double> pivoty, List<double> pivotz) async {
    if (fromdegree.length != todegree.length || todegree.length != pivotx.length || pivotx.length != pivoty.length || pivoty.length != pivotz.length) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::create_batchcom_tencent_tencentmap_mapsdk_maps_model_RotateAnimation__float__float__float__float__float', [for (int __i__ = 0; __i__ < fromdegree.length; __i__++) {"fromdegree": fromdegree[__i__], "todegree": todegree[__i__], "pivotx": pivotx[__i__], "pivoty": pivoty[__i__], "pivotz": pivotz[__i__]}]);
  
    final List<com_tencent_tencentmap_mapsdk_maps_model_RotateAnimation> typedResult = resultBatch.map((result) => com_tencent_tencentmap_mapsdk_maps_model_RotateAnimation()..refId = result).toList();
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<double> get_mFromDegree() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::get_mFromDegree", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<double> get_mToDegree() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::get_mToDegree", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<double> get_mPivoteX() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::get_mPivoteX", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<double> get_mPivoteY() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::get_mPivoteY", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<double> get_mPivoteZ() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::get_mPivoteZ", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  //endregion

  //region setters
  Future<void> set_mFromDegree(double mFromDegree) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::set_mFromDegree', <String, dynamic>{'__this__': this, "mFromDegree": mFromDegree});
  
  
  }
  
  Future<void> set_mToDegree(double mToDegree) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::set_mToDegree', <String, dynamic>{'__this__': this, "mToDegree": mToDegree});
  
  
  }
  
  Future<void> set_mPivoteX(double mPivoteX) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::set_mPivoteX', <String, dynamic>{'__this__': this, "mPivoteX": mPivoteX});
  
  
  }
  
  Future<void> set_mPivoteY(double mPivoteY) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::set_mPivoteY', <String, dynamic>{'__this__': this, "mPivoteY": mPivoteY});
  
  
  }
  
  Future<void> set_mPivoteZ(double mPivoteZ) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::set_mPivoteZ', <String, dynamic>{'__this__': this, "mPivoteZ": mPivoteZ});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'com_tencent_tencentmap_mapsdk_maps_model_RotateAnimation{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension com_tencent_tencentmap_mapsdk_maps_model_RotateAnimation_Batch on List<com_tencent_tencentmap_mapsdk_maps_model_RotateAnimation> {
  //region getters
  Future<List<double>> get_mFromDegree_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::get_mFromDegree_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_mToDegree_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::get_mToDegree_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_mPivoteX_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::get_mPivoteX_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_mPivoteY_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::get_mPivoteY_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_mPivoteZ_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::get_mPivoteZ_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_mFromDegree_batch(List<double> mFromDegree) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::set_mFromDegree_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "mFromDegree": mFromDegree[__i__]}]);
  
  
  }
  
  Future<void> set_mToDegree_batch(List<double> mToDegree) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::set_mToDegree_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "mToDegree": mToDegree[__i__]}]);
  
  
  }
  
  Future<void> set_mPivoteX_batch(List<double> mPivoteX) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::set_mPivoteX_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "mPivoteX": mPivoteX[__i__]}]);
  
  
  }
  
  Future<void> set_mPivoteY_batch(List<double> mPivoteY) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::set_mPivoteY_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "mPivoteY": mPivoteY[__i__]}]);
  
  
  }
  
  Future<void> set_mPivoteZ_batch(List<double> mPivoteZ) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.RotateAnimation::set_mPivoteZ_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "mPivoteZ": mPivoteZ[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}