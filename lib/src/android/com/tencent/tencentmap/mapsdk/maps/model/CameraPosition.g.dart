// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:tmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class com_tencent_tencentmap_mapsdk_maps_model_CameraPosition extends java_lang_Object  {
  //region constants
  static const String name__ = 'com.tencent.tencentmap.mapsdk.maps.model.CameraPosition';

  @override
  final String tag__ = 'tmap_map_fluttify';

  
  //endregion

  //region creators
  static Future<com_tencent_tencentmap_mapsdk_maps_model_CameraPosition> create__com_tencent_tencentmap_mapsdk_maps_model_LatLng__float__float__float(com_tencent_tencentmap_mapsdk_maps_model_LatLng latlng, double zoomLevel, double skew, double rotate) async {
    final refId = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::createcom_tencent_tencentmap_mapsdk_maps_model_CameraPosition__com_tencent_tencentmap_mapsdk_maps_model_LatLng__float__float__float', {"latlng": latlng, "zoomLevel": zoomLevel, "skew": skew, "rotate": rotate});
    final object = com_tencent_tencentmap_mapsdk_maps_model_CameraPosition()..refId = refId;
    return object;
  }
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_model_CameraPosition>> create_batch__com_tencent_tencentmap_mapsdk_maps_model_LatLng__float__float__float(List<com_tencent_tencentmap_mapsdk_maps_model_LatLng> latlng, List<double> zoomLevel, List<double> skew, List<double> rotate) async {
    if (latlng.length != zoomLevel.length || zoomLevel.length != skew.length || skew.length != rotate.length) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::create_batchcom_tencent_tencentmap_mapsdk_maps_model_CameraPosition__com_tencent_tencentmap_mapsdk_maps_model_LatLng__float__float__float', [for (int __i__ = 0; __i__ < latlng.length; __i__++) {"latlng": latlng[__i__], "zoomLevel": zoomLevel[__i__], "skew": skew[__i__], "rotate": rotate[__i__]}]);
  
    final List<com_tencent_tencentmap_mapsdk_maps_model_CameraPosition> typedResult = resultBatch.map((result) => com_tencent_tencentmap_mapsdk_maps_model_CameraPosition()..refId = result).toList();
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<com_tencent_tencentmap_mapsdk_maps_model_LatLng> get_target() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::get_target", {'__this__': this});
    return __result__ == null ? null : (com_tencent_tencentmap_mapsdk_maps_model_LatLng()..refId = __result__);
  }
  
  Future<double> get_zoom() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::get_zoom", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<double> get_tilt() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::get_tilt", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<double> get_bearing() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::get_bearing", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  //endregion

  //region setters
  Future<void> set_target(com_tencent_tencentmap_mapsdk_maps_model_LatLng target) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::set_target', <String, dynamic>{'__this__': this, "target": target});
  
  
  }
  
  //endregion

  //region methods
  
  static Future<com_tencent_tencentmap_mapsdk_maps_model_CameraPosition> fromLatLngZoom(com_tencent_tencentmap_mapsdk_maps_model_LatLng latlng, double zoomLevel) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::fromLatLngZoom([\'zoomLevel\':$zoomLevel])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::fromLatLngZoom', {"latlng": latlng, "zoomLevel": zoomLevel});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_model_CameraPosition()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_model_CameraPosition_Builder> builder() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::builder([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::builder', );
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_model_CameraPosition_Builder()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_model_CameraPosition_Builder> builder__com_tencent_tencentmap_mapsdk_maps_model_CameraPosition(com_tencent_tencentmap_mapsdk_maps_model_CameraPosition cameraposition) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::builder([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::builder__com_tencent_tencentmap_mapsdk_maps_model_CameraPosition', {"cameraposition": cameraposition});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_model_CameraPosition_Builder()..refId = __result__;
      return __return__;
    }
  }
  
  //endregion

  @override
  String toString() {
    return 'com_tencent_tencentmap_mapsdk_maps_model_CameraPosition{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension com_tencent_tencentmap_mapsdk_maps_model_CameraPosition_Batch on List<com_tencent_tencentmap_mapsdk_maps_model_CameraPosition> {
  //region getters
  Future<List<com_tencent_tencentmap_mapsdk_maps_model_LatLng>> get_target_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::get_target_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_model_LatLng()..refId = __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_zoom_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::get_zoom_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_tilt_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::get_tilt_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_bearing_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::get_bearing_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_target_batch(List<com_tencent_tencentmap_mapsdk_maps_model_LatLng> target) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::set_target_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "target": target[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_model_CameraPosition>> fromLatLngZoom_batch(List<com_tencent_tencentmap_mapsdk_maps_model_LatLng> latlng, List<double> zoomLevel) async {
    if (latlng.length != zoomLevel.length) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::fromLatLngZoom_batch', [for (int __i__ = 0; __i__ < latlng.length; __i__++) {"latlng": latlng[__i__], "zoomLevel": zoomLevel[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_model_CameraPosition()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_model_CameraPosition_Builder>> builder_batch() async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::builder_batch', );
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_model_CameraPosition_Builder()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_model_CameraPosition_Builder>> builder__com_tencent_tencentmap_mapsdk_maps_model_CameraPosition_batch(List<com_tencent_tencentmap_mapsdk_maps_model_CameraPosition> cameraposition) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.CameraPosition::builder__com_tencent_tencentmap_mapsdk_maps_model_CameraPosition_batch', [for (int __i__ = 0; __i__ < cameraposition.length; __i__++) {"cameraposition": cameraposition[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_model_CameraPosition_Builder()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  //endregion
}