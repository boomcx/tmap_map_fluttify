// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:tmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class com_tencent_tencentmap_mapsdk_maps_CameraUpdateFactory extends java_lang_Object  {
  //region constants
  static const String name__ = 'com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory';

  @override
  final String tag__ = 'tmap_map_fluttify';

  
  //endregion

  //region creators
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  static Future<com_tencent_tencentmap_mapsdk_maps_CameraUpdate> zoomIn() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomIn([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomIn', );
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_CameraUpdate> zoomOut() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomOut([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomOut', );
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_CameraUpdate> scrollBy(double xPixel, double yPixel) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::scrollBy([\'xPixel\':$xPixel, \'yPixel\':$yPixel])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::scrollBy', {"xPixel": xPixel, "yPixel": yPixel});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_CameraUpdate> zoomTo(double zoomLevel) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomTo([\'zoomLevel\':$zoomLevel])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomTo', {"zoomLevel": zoomLevel});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_CameraUpdate> zoomBy__double(double zoomLevelDelta) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomBy([\'zoomLevelDelta\':$zoomLevelDelta])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomBy__double', {"zoomLevelDelta": zoomLevelDelta});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_CameraUpdate> zoomBy__double__android_graphics_Point(double zoomLevelDelta, android_graphics_Point point) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomBy([\'zoomLevelDelta\':$zoomLevelDelta])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomBy__double__android_graphics_Point', {"zoomLevelDelta": zoomLevelDelta, "point": point});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_CameraUpdate> newCameraPosition(com_tencent_tencentmap_mapsdk_maps_model_CameraPosition cameraposition) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newCameraPosition([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newCameraPosition', {"cameraposition": cameraposition});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_CameraUpdate> newLatLng(com_tencent_tencentmap_mapsdk_maps_model_LatLng latlng) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLng([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLng', {"latlng": latlng});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_CameraUpdate> newLatLngZoom(com_tencent_tencentmap_mapsdk_maps_model_LatLng latlng, double zoom) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLngZoom([\'zoom\':$zoom])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLngZoom', {"latlng": latlng, "zoom": zoom});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_CameraUpdate> newLatLngBounds(com_tencent_tencentmap_mapsdk_maps_model_LatLngBounds latlngbounds, int padding) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLngBounds([\'padding\':$padding])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLngBounds', {"latlngbounds": latlngbounds, "padding": padding});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_CameraUpdate> newLatLngBoundsRect(com_tencent_tencentmap_mapsdk_maps_model_LatLngBounds latlngbounds, int leftPadding, int rightPadding, int topPadding, int bottomPadding) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLngBoundsRect([\'leftPadding\':$leftPadding, \'rightPadding\':$rightPadding, \'topPadding\':$topPadding, \'bottomPadding\':$bottomPadding])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLngBoundsRect', {"latlngbounds": latlngbounds, "leftPadding": leftPadding, "rightPadding": rightPadding, "topPadding": topPadding, "bottomPadding": bottomPadding});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_CameraUpdate> rotateTo(double rotate, double skew) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::rotateTo([\'rotate\':$rotate, \'skew\':$skew])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::rotateTo', {"rotate": rotate, "skew": skew});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__;
      return __return__;
    }
  }
  
  
  static Future<com_tencent_tencentmap_mapsdk_maps_CameraUpdate> newLatLngBoundsWithMapCenter(com_tencent_tencentmap_mapsdk_maps_model_LatLngBounds latLngBounds, com_tencent_tencentmap_mapsdk_maps_model_LatLng mapCenter, int padding) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLngBoundsWithMapCenter([\'padding\':$padding])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLngBoundsWithMapCenter', {"latLngBounds": latLngBounds, "mapCenter": mapCenter, "padding": padding});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__;
      return __return__;
    }
  }
  
  //endregion

  @override
  String toString() {
    return 'com_tencent_tencentmap_mapsdk_maps_CameraUpdateFactory{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension com_tencent_tencentmap_mapsdk_maps_CameraUpdateFactory_Batch on List<com_tencent_tencentmap_mapsdk_maps_CameraUpdateFactory> {
  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_CameraUpdate>> zoomIn_batch() async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomIn_batch', );
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_CameraUpdate>> zoomOut_batch() async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomOut_batch', );
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_CameraUpdate>> scrollBy_batch(List<double> xPixel, List<double> yPixel) async {
    if (xPixel.length != yPixel.length) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::scrollBy_batch', [for (int __i__ = 0; __i__ < xPixel.length; __i__++) {"xPixel": xPixel[__i__], "yPixel": yPixel[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_CameraUpdate>> zoomTo_batch(List<double> zoomLevel) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomTo_batch', [for (int __i__ = 0; __i__ < zoomLevel.length; __i__++) {"zoomLevel": zoomLevel[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_CameraUpdate>> zoomBy__double_batch(List<double> zoomLevelDelta) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomBy__double_batch', [for (int __i__ = 0; __i__ < zoomLevelDelta.length; __i__++) {"zoomLevelDelta": zoomLevelDelta[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_CameraUpdate>> zoomBy__double__android_graphics_Point_batch(List<double> zoomLevelDelta, List<android_graphics_Point> point) async {
    if (zoomLevelDelta.length != point.length) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::zoomBy__double__android_graphics_Point_batch', [for (int __i__ = 0; __i__ < zoomLevelDelta.length; __i__++) {"zoomLevelDelta": zoomLevelDelta[__i__], "point": point[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_CameraUpdate>> newCameraPosition_batch(List<com_tencent_tencentmap_mapsdk_maps_model_CameraPosition> cameraposition) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newCameraPosition_batch', [for (int __i__ = 0; __i__ < cameraposition.length; __i__++) {"cameraposition": cameraposition[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_CameraUpdate>> newLatLng_batch(List<com_tencent_tencentmap_mapsdk_maps_model_LatLng> latlng) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLng_batch', [for (int __i__ = 0; __i__ < latlng.length; __i__++) {"latlng": latlng[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_CameraUpdate>> newLatLngZoom_batch(List<com_tencent_tencentmap_mapsdk_maps_model_LatLng> latlng, List<double> zoom) async {
    if (latlng.length != zoom.length) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLngZoom_batch', [for (int __i__ = 0; __i__ < latlng.length; __i__++) {"latlng": latlng[__i__], "zoom": zoom[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_CameraUpdate>> newLatLngBounds_batch(List<com_tencent_tencentmap_mapsdk_maps_model_LatLngBounds> latlngbounds, List<int> padding) async {
    if (latlngbounds.length != padding.length) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLngBounds_batch', [for (int __i__ = 0; __i__ < latlngbounds.length; __i__++) {"latlngbounds": latlngbounds[__i__], "padding": padding[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_CameraUpdate>> newLatLngBoundsRect_batch(List<com_tencent_tencentmap_mapsdk_maps_model_LatLngBounds> latlngbounds, List<int> leftPadding, List<int> rightPadding, List<int> topPadding, List<int> bottomPadding) async {
    if (latlngbounds.length != leftPadding.length || leftPadding.length != rightPadding.length || rightPadding.length != topPadding.length || topPadding.length != bottomPadding.length) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLngBoundsRect_batch', [for (int __i__ = 0; __i__ < latlngbounds.length; __i__++) {"latlngbounds": latlngbounds[__i__], "leftPadding": leftPadding[__i__], "rightPadding": rightPadding[__i__], "topPadding": topPadding[__i__], "bottomPadding": bottomPadding[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_CameraUpdate>> rotateTo_batch(List<double> rotate, List<double> skew) async {
    if (rotate.length != skew.length) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::rotateTo_batch', [for (int __i__ = 0; __i__ < rotate.length; __i__++) {"rotate": rotate[__i__], "skew": skew[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_CameraUpdate>> newLatLngBoundsWithMapCenter_batch(List<com_tencent_tencentmap_mapsdk_maps_model_LatLngBounds> latLngBounds, List<com_tencent_tencentmap_mapsdk_maps_model_LatLng> mapCenter, List<int> padding) async {
    if (latLngBounds.length != mapCenter.length || mapCenter.length != padding.length) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.CameraUpdateFactory::newLatLngBoundsWithMapCenter_batch', [for (int __i__ = 0; __i__ < latLngBounds.length; __i__++) {"latLngBounds": latLngBounds[__i__], "mapCenter": mapCenter[__i__], "padding": padding[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => com_tencent_tencentmap_mapsdk_maps_CameraUpdate()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  //endregion
}