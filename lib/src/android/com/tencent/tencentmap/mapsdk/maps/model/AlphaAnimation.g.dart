// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:tmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class com_tencent_tencentmap_mapsdk_maps_model_AlphaAnimation extends com_tencent_tencentmap_mapsdk_maps_model_BaseAnimation with com_tencent_tencentmap_mapsdk_maps_model_Animation {
  //region constants
  static const String name__ = 'com.tencent.tencentmap.mapsdk.maps.model.AlphaAnimation';

  @override
  final String tag__ = 'tmap_map_fluttify';

  
  //endregion

  //region creators
  static Future<com_tencent_tencentmap_mapsdk_maps_model_AlphaAnimation> create__float__float(double fromAlpha, double toAlpha) async {
    final refId = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::createcom_tencent_tencentmap_mapsdk_maps_model_AlphaAnimation__float__float', {"fromAlpha": fromAlpha, "toAlpha": toAlpha});
    final object = com_tencent_tencentmap_mapsdk_maps_model_AlphaAnimation()..refId = refId;
    return object;
  }
  
  static Future<List<com_tencent_tencentmap_mapsdk_maps_model_AlphaAnimation>> create_batch__float__float(List<double> fromAlpha, List<double> toAlpha) async {
    if (fromAlpha.length != toAlpha.length) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::create_batchcom_tencent_tencentmap_mapsdk_maps_model_AlphaAnimation__float__float', [for (int __i__ = 0; __i__ < fromAlpha.length; __i__++) {"fromAlpha": fromAlpha[__i__], "toAlpha": toAlpha[__i__]}]);
  
    final List<com_tencent_tencentmap_mapsdk_maps_model_AlphaAnimation> typedResult = resultBatch.map((result) => com_tencent_tencentmap_mapsdk_maps_model_AlphaAnimation()..refId = result).toList();
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<double> get_mFromAlpha() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.AlphaAnimation::get_mFromAlpha", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<double> get_mToAlpha() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.AlphaAnimation::get_mToAlpha", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  //endregion

  //region setters
  Future<void> set_mFromAlpha(double mFromAlpha) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.AlphaAnimation::set_mFromAlpha', <String, dynamic>{'__this__': this, "mFromAlpha": mFromAlpha});
  
  
  }
  
  Future<void> set_mToAlpha(double mToAlpha) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.AlphaAnimation::set_mToAlpha', <String, dynamic>{'__this__': this, "mToAlpha": mToAlpha});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'com_tencent_tencentmap_mapsdk_maps_model_AlphaAnimation{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension com_tencent_tencentmap_mapsdk_maps_model_AlphaAnimation_Batch on List<com_tencent_tencentmap_mapsdk_maps_model_AlphaAnimation> {
  //region getters
  Future<List<double>> get_mFromAlpha_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.AlphaAnimation::get_mFromAlpha_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_mToAlpha_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.tencentmap.mapsdk.maps.model.AlphaAnimation::get_mToAlpha_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_mFromAlpha_batch(List<double> mFromAlpha) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.AlphaAnimation::set_mFromAlpha_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "mFromAlpha": mFromAlpha[__i__]}]);
  
  
  }
  
  Future<void> set_mToAlpha_batch(List<double> mToAlpha) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.tencentmap.mapsdk.maps.model.AlphaAnimation::set_mToAlpha_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "mToAlpha": mToAlpha[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}