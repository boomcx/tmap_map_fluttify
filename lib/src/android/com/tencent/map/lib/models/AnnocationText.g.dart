// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:tmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class com_tencent_map_lib_models_AnnocationText extends java_lang_Object  {
  //region constants
  static const String name__ = 'com.tencent.map.lib.models.AnnocationText';

  @override
  final String tag__ = 'tmap_map_fluttify';

  
  //endregion

  //region creators
  static Future<com_tencent_map_lib_models_AnnocationText> create__() async {
    final refId = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::createcom_tencent_map_lib_models_AnnocationText__', );
    final object = com_tencent_map_lib_models_AnnocationText()..refId = refId;
    return object;
  }
  
  static Future<List<com_tencent_map_lib_models_AnnocationText>> create_batch__(int length) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::create_batchcom_tencent_map_lib_models_AnnocationText__', {'length': length});
  
    final List<com_tencent_map_lib_models_AnnocationText> typedResult = resultBatch.map((result) => com_tencent_map_lib_models_AnnocationText()..refId = result).toList();
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<android_graphics_Bitmap> get_iconBitmap() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_iconBitmap", {'__this__': this});
    return __result__ == null ? null : (android_graphics_Bitmap()..refId = __result__);
  }
  
  Future<double> get_mAnchorPointX() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_mAnchorPointX", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<double> get_mAnchorPointY() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_mAnchorPointY", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<double> get_scale() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_scale", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<String> get_text() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_text", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<int> get_firstNameCount() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_firstNameCount", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<int> get_anchorGravity() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_anchorGravity", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  //endregion

  //region setters
  Future<void> set_iconBitmap(android_graphics_Bitmap iconBitmap) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_iconBitmap', <String, dynamic>{'__this__': this, "iconBitmap": iconBitmap});
  
  
  }
  
  Future<void> set_mAnchorPointX(double mAnchorPointX) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_mAnchorPointX', <String, dynamic>{'__this__': this, "mAnchorPointX": mAnchorPointX});
  
  
  }
  
  Future<void> set_mAnchorPointY(double mAnchorPointY) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_mAnchorPointY', <String, dynamic>{'__this__': this, "mAnchorPointY": mAnchorPointY});
  
  
  }
  
  Future<void> set_scale(double scale) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_scale', <String, dynamic>{'__this__': this, "scale": scale});
  
  
  }
  
  Future<void> set_text(String text) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_text', <String, dynamic>{'__this__': this, "text": text});
  
  
  }
  
  Future<void> set_firstNameCount(int firstNameCount) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_firstNameCount', <String, dynamic>{'__this__': this, "firstNameCount": firstNameCount});
  
  
  }
  
  Future<void> set_anchorGravity(int anchorGravity) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_anchorGravity', <String, dynamic>{'__this__': this, "anchorGravity": anchorGravity});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'com_tencent_map_lib_models_AnnocationText{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension com_tencent_map_lib_models_AnnocationText_Batch on List<com_tencent_map_lib_models_AnnocationText> {
  //region getters
  Future<List<android_graphics_Bitmap>> get_iconBitmap_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_iconBitmap_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => android_graphics_Bitmap()..refId = __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_mAnchorPointX_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_mAnchorPointX_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_mAnchorPointY_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_mAnchorPointY_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_scale_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_scale_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<String>> get_text_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_text_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<int>> get_firstNameCount_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_firstNameCount_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<int>> get_anchorGravity_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.AnnocationText::get_anchorGravity_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_iconBitmap_batch(List<android_graphics_Bitmap> iconBitmap) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_iconBitmap_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "iconBitmap": iconBitmap[__i__]}]);
  
  
  }
  
  Future<void> set_mAnchorPointX_batch(List<double> mAnchorPointX) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_mAnchorPointX_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "mAnchorPointX": mAnchorPointX[__i__]}]);
  
  
  }
  
  Future<void> set_mAnchorPointY_batch(List<double> mAnchorPointY) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_mAnchorPointY_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "mAnchorPointY": mAnchorPointY[__i__]}]);
  
  
  }
  
  Future<void> set_scale_batch(List<double> scale) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_scale_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "scale": scale[__i__]}]);
  
  
  }
  
  Future<void> set_text_batch(List<String> text) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_text_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "text": text[__i__]}]);
  
  
  }
  
  Future<void> set_firstNameCount_batch(List<int> firstNameCount) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_firstNameCount_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "firstNameCount": firstNameCount[__i__]}]);
  
  
  }
  
  Future<void> set_anchorGravity_batch(List<int> anchorGravity) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.AnnocationText::set_anchorGravity_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "anchorGravity": anchorGravity[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}