// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:tmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class com_tencent_map_lib_models_Polygon2D extends java_lang_Object  {
  //region constants
  static const String name__ = 'com.tencent.map.lib.models.Polygon2D';

  @override
  final String tag__ = 'tmap_map_fluttify';

  static final int GLPOLYGONMODE2D_FILL = 1;
  static final int GLPOLYGONMODE2D_BORDER = 2;
  //endregion

  //region creators
  static Future<com_tencent_map_lib_models_Polygon2D> create__() async {
    final refId = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::createcom_tencent_map_lib_models_Polygon2D__', );
    final object = com_tencent_map_lib_models_Polygon2D()..refId = refId;
    return object;
  }
  
  static Future<List<com_tencent_map_lib_models_Polygon2D>> create_batch__(int length) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('ObjectFactory::create_batchcom_tencent_map_lib_models_Polygon2D__', {'length': length});
  
    final List<com_tencent_map_lib_models_Polygon2D> typedResult = resultBatch.map((result) => com_tencent_map_lib_models_Polygon2D()..refId = result).toList();
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<int> get_polygonMode() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_polygonMode", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<int> get_color() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_color", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<int> get_borderColor() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_borderColor", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<double> get_borderWidth() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_borderWidth", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<int> get_polygonId() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_polygonId", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<int> get_borldLineId() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_borldLineId", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<int> get_centerX() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_centerX", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<int> get_centerY() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_centerY", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<int> get_pointsCount() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_pointsCount", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<double> get_originalRadius() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_originalRadius", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<double> get_scale() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_scale", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<double> get_zIndex() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_zIndex", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<int> get_level() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_level", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<int> get_minScaleLevel() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_minScaleLevel", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<int> get_maxScaleLevel() async {
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_maxScaleLevel", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  //endregion

  //region setters
  Future<void> set_polygonMode(int polygonMode) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_polygonMode', <String, dynamic>{'__this__': this, "polygonMode": polygonMode});
  
  
  }
  
  Future<void> set_color(int color) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_color', <String, dynamic>{'__this__': this, "color": color});
  
  
  }
  
  Future<void> set_borderColor(int borderColor) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_borderColor', <String, dynamic>{'__this__': this, "borderColor": borderColor});
  
  
  }
  
  Future<void> set_borderWidth(double borderWidth) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_borderWidth', <String, dynamic>{'__this__': this, "borderWidth": borderWidth});
  
  
  }
  
  Future<void> set_polygonId(int polygonId) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_polygonId', <String, dynamic>{'__this__': this, "polygonId": polygonId});
  
  
  }
  
  Future<void> set_borldLineId(int borldLineId) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_borldLineId', <String, dynamic>{'__this__': this, "borldLineId": borldLineId});
  
  
  }
  
  Future<void> set_centerX(int centerX) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_centerX', <String, dynamic>{'__this__': this, "centerX": centerX});
  
  
  }
  
  Future<void> set_centerY(int centerY) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_centerY', <String, dynamic>{'__this__': this, "centerY": centerY});
  
  
  }
  
  Future<void> set_pointsCount(int pointsCount) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_pointsCount', <String, dynamic>{'__this__': this, "pointsCount": pointsCount});
  
  
  }
  
  Future<void> set_originalRadius(double originalRadius) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_originalRadius', <String, dynamic>{'__this__': this, "originalRadius": originalRadius});
  
  
  }
  
  Future<void> set_scale(double scale) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_scale', <String, dynamic>{'__this__': this, "scale": scale});
  
  
  }
  
  Future<void> set_zIndex(double zIndex) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_zIndex', <String, dynamic>{'__this__': this, "zIndex": zIndex});
  
  
  }
  
  Future<void> set_level(int level) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_level', <String, dynamic>{'__this__': this, "level": level});
  
  
  }
  
  Future<void> set_minScaleLevel(int minScaleLevel) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_minScaleLevel', <String, dynamic>{'__this__': this, "minScaleLevel": minScaleLevel});
  
  
  }
  
  Future<void> set_maxScaleLevel(int maxScaleLevel) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_maxScaleLevel', <String, dynamic>{'__this__': this, "maxScaleLevel": maxScaleLevel});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'com_tencent_map_lib_models_Polygon2D{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension com_tencent_map_lib_models_Polygon2D_Batch on List<com_tencent_map_lib_models_Polygon2D> {
  //region getters
  Future<List<int>> get_polygonMode_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_polygonMode_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<int>> get_color_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_color_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<int>> get_borderColor_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_borderColor_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_borderWidth_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_borderWidth_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<int>> get_polygonId_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_polygonId_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<int>> get_borldLineId_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_borldLineId_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<int>> get_centerX_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_centerX_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<int>> get_centerY_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_centerY_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<int>> get_pointsCount_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_pointsCount_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_originalRadius_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_originalRadius_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_scale_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_scale_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<double>> get_zIndex_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_zIndex_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<double>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<int>> get_level_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_level_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<int>> get_minScaleLevel_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_minScaleLevel_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<int>> get_maxScaleLevel_batch() async {
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod("com.tencent.map.lib.models.Polygon2D::get_maxScaleLevel_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_polygonMode_batch(List<int> polygonMode) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_polygonMode_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "polygonMode": polygonMode[__i__]}]);
  
  
  }
  
  Future<void> set_color_batch(List<int> color) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_color_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "color": color[__i__]}]);
  
  
  }
  
  Future<void> set_borderColor_batch(List<int> borderColor) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_borderColor_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "borderColor": borderColor[__i__]}]);
  
  
  }
  
  Future<void> set_borderWidth_batch(List<double> borderWidth) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_borderWidth_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "borderWidth": borderWidth[__i__]}]);
  
  
  }
  
  Future<void> set_polygonId_batch(List<int> polygonId) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_polygonId_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "polygonId": polygonId[__i__]}]);
  
  
  }
  
  Future<void> set_borldLineId_batch(List<int> borldLineId) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_borldLineId_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "borldLineId": borldLineId[__i__]}]);
  
  
  }
  
  Future<void> set_centerX_batch(List<int> centerX) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_centerX_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "centerX": centerX[__i__]}]);
  
  
  }
  
  Future<void> set_centerY_batch(List<int> centerY) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_centerY_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "centerY": centerY[__i__]}]);
  
  
  }
  
  Future<void> set_pointsCount_batch(List<int> pointsCount) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_pointsCount_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "pointsCount": pointsCount[__i__]}]);
  
  
  }
  
  Future<void> set_originalRadius_batch(List<double> originalRadius) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_originalRadius_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "originalRadius": originalRadius[__i__]}]);
  
  
  }
  
  Future<void> set_scale_batch(List<double> scale) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_scale_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "scale": scale[__i__]}]);
  
  
  }
  
  Future<void> set_zIndex_batch(List<double> zIndex) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_zIndex_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "zIndex": zIndex[__i__]}]);
  
  
  }
  
  Future<void> set_level_batch(List<int> level) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_level_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "level": level[__i__]}]);
  
  
  }
  
  Future<void> set_minScaleLevel_batch(List<int> minScaleLevel) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_minScaleLevel_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "minScaleLevel": minScaleLevel[__i__]}]);
  
  
  }
  
  Future<void> set_maxScaleLevel_batch(List<int> maxScaleLevel) async {
    await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('com.tencent.map.lib.models.Polygon2D::set_maxScaleLevel_batch', [for (int __i__ = 0; __i__ < length; __i__++) {'__this__': this[__i__], "maxScaleLevel": maxScaleLevel[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}