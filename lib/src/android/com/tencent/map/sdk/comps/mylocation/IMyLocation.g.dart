// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:tmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class _com_tencent_map_sdk_comps_mylocation_IMyLocation_SUB extends java_lang_Object with com_tencent_map_sdk_comps_mylocation_IMyLocation {}

mixin com_tencent_map_sdk_comps_mylocation_IMyLocation on java_lang_Object {
  

  static com_tencent_map_sdk_comps_mylocation_IMyLocation subInstance() => _com_tencent_map_sdk_comps_mylocation_IMyLocation_SUB();

  @override
  final String tag__ = 'tmap_map_fluttify';

  

  

  
  Future<bool> isMyLocationEnabled() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.map.sdk.comps.mylocation.IMyLocation@$refId::isMyLocationEnabled([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.sdk.comps.mylocation.IMyLocation::isMyLocationEnabled', {"__this__": this});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
      return __return__;
    }
  }
  
  
  Future<void> setMyLocationEnabled(bool var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.map.sdk.comps.mylocation.IMyLocation@$refId::setMyLocationEnabled([\'var1\':$var1])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.sdk.comps.mylocation.IMyLocation::setMyLocationEnabled', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
      return __return__;
    }
  }
  
  
  Future<android_location_Location> getMyLocation() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.map.sdk.comps.mylocation.IMyLocation@$refId::getMyLocation([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.sdk.comps.mylocation.IMyLocation::getMyLocation', {"__this__": this});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = android_location_Location()..refId = __result__;
      return __return__;
    }
  }
  
  
  Future<void> setLocationSource(com_tencent_tencentmap_mapsdk_maps_LocationSource var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.map.sdk.comps.mylocation.IMyLocation@$refId::setLocationSource([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.sdk.comps.mylocation.IMyLocation::setLocationSource', {"__this__": this});
  
  
    // handle native call
    MethodChannel('com.tencent.map.sdk.comps.mylocation.IMyLocation::setLocationSource::Callback@$refId', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify')))
        .setMethodCallHandler((methodCall) async {
          try {
            final args = methodCall.arguments as Map;
            switch (methodCall.method) {
              case 'Callback::com.tencent.tencentmap.mapsdk.maps.LocationSource::activate':
                // print log
                if (fluttifyLogEnabled) {
                  debugPrint('fluttify-dart-callback: activate([\'var1\':${args['var1']}])');
                }
          
                // handle the native call
                var1?.activate(TypeOpTmapMapFluttifyAndroid((args['var1'] as Object))?.as__<com_tencent_tencentmap_mapsdk_maps_LocationSource_OnLocationChangedListener>());
                break;
              case 'Callback::com.tencent.tencentmap.mapsdk.maps.LocationSource::deactivate':
                // print log
                if (fluttifyLogEnabled) {
                  debugPrint('fluttify-dart-callback: deactivate([])');
                }
          
                // handle the native call
                var1?.deactivate();
                break;
              default:
                break;
            }
          } catch (e) {
            debugPrint(e);
            throw e;
          }
        });
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
      return __return__;
    }
  }
  
  
  Future<void> setMyLocationStyle(com_tencent_tencentmap_mapsdk_maps_model_MyLocationStyle var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.map.sdk.comps.mylocation.IMyLocation@$refId::setMyLocationStyle([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.sdk.comps.mylocation.IMyLocation::setMyLocationStyle', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
      return __return__;
    }
  }
  
  
  Future<void> setMyLocationClickListener(com_tencent_tencentmap_mapsdk_maps_TencentMap_OnMyLocationClickListener var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.map.sdk.comps.mylocation.IMyLocation@$refId::setMyLocationClickListener([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.sdk.comps.mylocation.IMyLocation::setMyLocationClickListener', {"__this__": this});
  
  
    // handle native call
    MethodChannel('com.tencent.map.sdk.comps.mylocation.IMyLocation::setMyLocationClickListener::Callback@$refId', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify')))
        .setMethodCallHandler((methodCall) async {
          try {
            final args = methodCall.arguments as Map;
            switch (methodCall.method) {
              case 'Callback::com.tencent.tencentmap.mapsdk.maps.TencentMap.OnMyLocationClickListener::onMyLocationClicked':
                // print log
                if (fluttifyLogEnabled) {
                  debugPrint('fluttify-dart-callback: onMyLocationClicked([\'var1\':${args['var1']}])');
                }
          
                // handle the native call
                var1?.onMyLocationClicked(TypeOpTmapMapFluttifyAndroid((args['var1'] as Object))?.as__<com_tencent_tencentmap_mapsdk_maps_model_LatLng>());
                break;
              default:
                break;
            }
          } catch (e) {
            debugPrint(e);
            throw e;
          }
        });
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
      return __return__;
    }
  }
  
  
  Future<void> setOnMyLocationChangeListener(com_tencent_tencentmap_mapsdk_maps_TencentMap_OnMyLocationChangeListener var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.tencent.map.sdk.comps.mylocation.IMyLocation@$refId::setOnMyLocationChangeListener([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.sdk.comps.mylocation.IMyLocation::setOnMyLocationChangeListener', {"__this__": this});
  
  
    // handle native call
    MethodChannel('com.tencent.map.sdk.comps.mylocation.IMyLocation::setOnMyLocationChangeListener::Callback@$refId', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify')))
        .setMethodCallHandler((methodCall) async {
          try {
            final args = methodCall.arguments as Map;
            switch (methodCall.method) {
              case 'Callback::com.tencent.tencentmap.mapsdk.maps.TencentMap.OnMyLocationChangeListener::onMyLocationChange':
                // print log
                if (fluttifyLogEnabled) {
                  debugPrint('fluttify-dart-callback: onMyLocationChange([\'var1\':${args['var1']}])');
                }
          
                // handle the native call
                var1?.onMyLocationChange(TypeOpTmapMapFluttifyAndroid((args['var1'] as Object))?.as__<android_location_Location>());
                break;
              default:
                break;
            }
          } catch (e) {
            debugPrint(e);
            throw e;
          }
        });
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
      return __return__;
    }
  }
  
}

extension com_tencent_map_sdk_comps_mylocation_IMyLocation_Batch on List<com_tencent_map_sdk_comps_mylocation_IMyLocation> {
  //region methods
  
  Future<List<bool>> isMyLocationEnabled_batch() async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.sdk.comps.mylocation.IMyLocation::isMyLocationEnabled_batch', [for (int __i__ = 0; __i__ < length; __i__++) {"__this__": this[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<bool>().map((__result__) => __result__).toList();
      return typedResult;
    }
  }
  
  
  Future<List<void>> setMyLocationEnabled_batch(List<bool> var1) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.sdk.comps.mylocation.IMyLocation::setMyLocationEnabled_batch', [for (int __i__ = 0; __i__ < length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
      return typedResult;
    }
  }
  
  
  Future<List<android_location_Location>> getMyLocation_batch() async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.sdk.comps.mylocation.IMyLocation::getMyLocation_batch', [for (int __i__ = 0; __i__ < length; __i__++) {"__this__": this[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => android_location_Location()..refId = __result__).toList();
      return typedResult;
    }
  }
  
  
  Future<List<void>> setMyLocationStyle_batch(List<com_tencent_tencentmap_mapsdk_maps_model_MyLocationStyle> var1) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/tmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec('tmap_map_fluttify'))).invokeMethod('com.tencent.map.sdk.comps.mylocation.IMyLocation::setMyLocationStyle_batch', [for (int __i__ = 0; __i__ < length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
      return typedResult;
    }
  }
  
  //endregion
}